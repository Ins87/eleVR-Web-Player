{"version":3,"sources":["shader.fs.js","phonevr.js","player-controls.js","player-webgl.js","webvr.js","elevr-player.js","node_modules/gl-matrix/dist/gl-matrix-min.js","shader.vs.js","util.js"],"names":["_classCallCheck","instance","Constructor","TypeError","window","shader","fs","t","a","exports","module","define","amd","n","r","this","o","id","loaded","call","m","c","p","glMatrix","mat2","mat2d","mat3","mat4","quat","vec2","vec3","vec4","EPSILON","ARRAY_TYPE","Float32Array","Array","RANDOM","Math","random","ENABLE_SIMD","SIMD_AVAILABLE","USE_SIMD","setMatrixArrayType","PI","toRadian","equals","abs","max","create","clone","copy","identity","fromValues","u","set","transpose","invert","l","adjoint","determinant","multiply","e","M","s","i","mul","rotate","sin","cos","scale","fromRotation","fromScaling","str","frob","sqrt","pow","LDU","add","subtract","sub","exactEquals","multiplyScalar","multiplyScalarAndAdd","h","S","I","translate","fromTranslation","fromMat4","f","x","D","F","d","fromMat2d","fromQuat","normalFromMat4","b","v","z","w","E","A","P","L","q","scalar","SIMD","Float32x4","load","shuffle","store","swizzle","reciprocalApproximation","R","N","rotateX","splat","rotateY","rotateZ","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","getTranslation","getRotation","fromRotationTranslationScale","fromRotationTranslationScaleOrigin","frustum","perspective","tan","perspectiveFromFieldOfView","upDegrees","downDegrees","leftDegrees","rightDegrees","ortho","lookAt","O","Y","rotationTo","dot","cross","length","normalize","setAxisAngle","setAxes","fromMat3","getAxisAngle","acos","calculateW","lerp","slerp","sqlerp","conjugate","len","squaredLength","sqrLen","divide","div","ceil","floor","min","round","scaleAndAdd","distance","dist","squaredDistance","sqrDist","negate","inverse","hermite","bezier","transformMat4","transformMat3","transformQuat","forEach","angle","transformMat2","transformMat2d","vs","global","util","getScreenOrientation","screen","orientation","mozOrientation","undefined","mat4PerspectiveFromVRFieldOfView","fov","zNear","zFar","upTan","downTan","leftTan","rightTan","xScale","yScale","out","isFullscreen","document","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","webkitCurrentFullScreenElement","setCanvasSize","canvas","backingStorePixelRatio","screenWidth","screenHeight","vrHMD","webVR","getInstance","innerWidth","innerHeight","rectHalf","getEyeParameters","renderRect","width","height","devicePixelRatio","ratio","style","getExtension","path","substr","lastIndexOf","getBaseFilename","hasVideoExtension","url","ext","getVideoTitle","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","PhoneVR","_this","deviceAlpha","deviceGamma","deviceBeta","addEventListener","alpha","gamma","beta","value","orientationIsAvailable","degtorad","y","cX","cY","cZ","sX","sY","sZ","deviceQuaternion","screenOrientation","screenTransform","deviceRotation","r22","PlayerControls","controlLayer","getLatlong","originRotation","latlong","asin","atan2","manualRotateRate","manualRotation","manualControls","index","sign","active","mouseMove","initKeys","onKeyPress","bind","onMouseMove","onMouseDown","onMouseUp","X","clientX","clientY","preventDefault","removeEventListener","delX","delY","event","resetSensor","type","vrSensor","zeroSensor","self","rotationQuat","control","String","fromCharCode","keyCode","toLowerCase","charCode","PlayerWebGL","video","getWebGLContext","getContext","init","gl","clearColor","clearDepth","disable","DEPTH_TEST","loadShader","params","fragmentShaderName","vertexShaderName","attributes","uniforms","program","createProgram","attachShader","getShaderByName","linkProgram","getProgramParameter","LINK_STATUS","alert","getProgramInfoLog","useProgram","attributeName","getAttribLocation","enableVertexAttribArray","_i","uniformName","getUniformLocation","eyeCount","positionsBuffer","projection","controls","texture","verticesIndexBuffer","timing","showTiming","frameTime","prevFrameTime","canvasResized","textureLoaded","start","end","framesSinceIssue","performance","now","getBackingStorePixelRatio","updateTexture","interval","yaw","pitch","perspectiveMatrix","leftParams","rightParams","recommendedFieldOfView","drawEye","_ratio","finish","console","log","play","eye","projectionMatrix","getTotalRotation","totalRotation","sensorOrientation","state","getState","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","aVertexPosition","FLOAT","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","uniform1i","uSampler","uniform1f","rotation","projectionInverse","inv","uniformMatrix4fv","proj_inv","viewport","ELEMENT_ARRAY_BUFFER","drawElements","TRIANGLES","UNSIGNED_SHORT","reqAnimFrameID","requestAnimationFrame","drawScene","cancelAnimationFrame","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","createBuffer","positions","bufferData","STATIC_DRAW","vertexIndices","Uint16Array","createTexture","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGB","UNSIGNED_BYTE","getCustomProjection","name","result","theSource","createShader","FRAGMENT_SHADER","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","stop","WebVr","navigator","getVRDevices","then","vrDeviceCallback","EleVRPlayer","sourceVideo","options","arguments","createElement","classList","display","parentNode","insertBefore","webGL","setControls","initBuffers","initTextures","setEyeCount","destroy","removeChild"],"mappings":"AAAA,YCIA,SAAAA,iBAAAC,EAAAC,GAAA,KAAAD,YAAAC,IAAA,KAAA,IAAAC,WAAA,qCCAA,QAAAH,iBAAAC,EAAAC,GAAA,KAAAD,YAAAC,IAAA,KAAA,IAAAC,WAAA,qCCAA,QAAAH,iBAAAC,EAAAC,GAAA,KAAAD,YAAAC,IAAA,KAAA,IAAAC,WAAA,qCCFA,QAAAH,iBAAAC,EAAAC,GAAA,KAAAD,YAAAC,IAAA,KAAA,IAAAC,WAAA,qCCEA,QAAAH,iBAAAC,EAAAC,GAAA,KAAAD,YAAAC,IAAA,KAAA,IAAAC,WAAA,qCLFAC,OAAAC,OAAAD,OAAAC,WAEAD,OAAAC,OAAAC,GAAA,0wDMuBA,SAAAC,EAAAC,GAAA,GAAA,gBAAAC,UAAA,gBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,GAAAL,GAAA,KAAA,GAAAM,KAAAD,IAAA,gBAAAJ,SAAAA,QAAAF,GAAAO,GAAAD,EAAAC,KAAAC,KAAA,WAAA,MAAA,UAAAR,GAAA,QAAAC,GAAAM,GAAA,GAAAD,EAAAC,GAAA,MAAAD,GAAAC,GAAAL,OAAA,IAAAO,GAAAH,EAAAC,IAAAL,WAAAQ,GAAAH,EAAAI,QAAA,EAAA,OAAAX,GAAAO,GAAAK,KAAAH,EAAAP,QAAAO,EAAAA,EAAAP,QAAAD,GAAAQ,EAAAE,QAAA,EAAAF,EAAAP,QAAA,GAAAI,KAAA,OAAAL,GAAAY,EAAAb,EAAAC,EAAAa,EAAAR,EAAAL,EAAAc,EAAA,GAAAd,EAAA,KAAA,SAAAD,EAAAC,EAAAK,GAAAL,EAAAe,SAAAV,EAAA,GAAAL,EAAAgB,KAAAX,EAAA,GAAAL,EAAAiB,MAAAZ,EAAA,GAAAL,EAAAkB,KAAAb,EAAA,GAAAL,EAAAmB,KAAAd,EAAA,GAAAL,EAAAoB,KAAAf,EAAA,GAAAL,EAAAqB,KAAAhB,EAAA,GAAAL,EAAAsB,KAAAjB,EAAA,GAAAL,EAAAuB,KAAAlB,EAAA,IAAA,SAAAN,EAAAC,GAAA,GAAAK,KAAAA,GAAAmB,QAAA,KAAAnB,EAAAoB,WAAA,mBAAAC,cAAAA,aAAAC,MAAAtB,EAAAuB,OAAAC,KAAAC,OAAAzB,EAAA0B,aAAA,EAAA1B,EAAA2B,eAAA3B,EAAAoB,aAAAC,cAAA,QAAAnB,MAAAF,EAAA4B,SAAA5B,EAAA0B,aAAA1B,EAAA2B,eAAA3B,EAAA6B,mBAAA,SAAAnC,GAAAM,EAAAoB,WAAA1B,EAAA,IAAAO,GAAAuB,KAAAM,GAAA,GAAA9B,GAAA+B,SAAA,SAAArC,GAAA,MAAAA,GAAAO,GAAAD,EAAAgC,OAAA,SAAAtC,EAAAC,GAAA,MAAA6B,MAAAS,IAAAvC,EAAAC,IAAAK,EAAAmB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAvC,GAAA8B,KAAAS,IAAAtC,KAAAD,EAAAE,QAAAI,GAAA,SAAAN,EAAAC,EAAAK,GAAA,GAAAC,GAAAD,EAAA,GAAAG,IAAAA,GAAAgC,OAAA,WAAA,GAAAzC,GAAA,GAAAO,GAAAmB,WAAA,EAAA,OAAA1B,GAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,GAAAS,EAAAiC,MAAA,SAAA1C,GAAA,GAAAC,GAAA,GAAAM,GAAAmB,WAAA,EAAA,OAAAzB,GAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,GAAAQ,EAAAkC,KAAA,SAAA3C,EAAAC,GAAA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,GAAAS,EAAAmC,SAAA,SAAA5C,GAAA,MAAAA,GAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,GAAAS,EAAAoC,WAAA,SAAA7C,EAAAC,EAAAK,EAAAG,GAAA,GAAAqC,GAAA,GAAAvC,GAAAmB,WAAA,EAAA,OAAAoB,GAAA,GAAA9C,EAAA8C,EAAA,GAAA7C,EAAA6C,EAAA,GAAAxC,EAAAwC,EAAA,GAAArC,EAAAqC,GAAArC,EAAAsC,IAAA,SAAA/C,EAAAC,EAAAK,EAAAC,EAAAE,GAAA,MAAAT,GAAA,GAAAC,EAAAD,EAAA,GAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,GAAAS,EAAAT,GAAAS,EAAAuC,UAAA,SAAAhD,EAAAC,GAAA,GAAAD,IAAAC,EAAA,CAAA,GAAAK,GAAAL,EAAA,EAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAM,MAAAN,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,EAAA,OAAAD,IAAAS,EAAAwC,OAAA,SAAAjD,EAAAC,GAAA,GAAAK,GAAAL,EAAA,GAAAM,EAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAA5C,EAAAwC,EAAArC,EAAAF,CAAA,OAAA2C,IAAAA,EAAA,EAAAA,EAAAlD,EAAA,GAAA8C,EAAAI,EAAAlD,EAAA,IAAAO,EAAA2C,EAAAlD,EAAA,IAAAS,EAAAyC,EAAAlD,EAAA,GAAAM,EAAA4C,EAAAlD,GAAA,MAAAS,EAAA0C,QAAA,SAAAnD,EAAAC,GAAA,GAAAK,GAAAL,EAAA,EAAA,OAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,GAAAM,EAAAN,GAAAS,EAAA2C,YAAA,SAAApD,GAAA,MAAAA,GAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAS,EAAA4C,SAAA,SAAArD,EAAAC,EAAAK,GAAA,GAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAAhD,EAAA,GAAAiD,EAAAjD,EAAA,GAAAkD,EAAAlD,EAAA,GAAAmD,EAAAnD,EAAA,EAAA,OAAAN,GAAA,GAAAO,EAAA+C,EAAAR,EAAAS,EAAAvD,EAAA,GAAAS,EAAA6C,EAAAJ,EAAAK,EAAAvD,EAAA,GAAAO,EAAAiD,EAAAV,EAAAW,EAAAzD,EAAA,GAAAS,EAAA+C,EAAAN,EAAAO,EAAAzD,GAAAS,EAAAiD,IAAAjD,EAAA4C,SAAA5C,EAAAkD,OAAA,SAAA3D,EAAAC,EAAAK,GAAA,GAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAAxB,KAAA8B,IAAAtD,GAAAiD,EAAAzB,KAAA+B,IAAAvD,EAAA,OAAAN,GAAA,GAAAO,EAAAgD,EAAAT,EAAAQ,EAAAtD,EAAA,GAAAS,EAAA8C,EAAAL,EAAAI,EAAAtD,EAAA,GAAAO,GAAA+C,EAAAR,EAAAS,EAAAvD,EAAA,GAAAS,GAAA6C,EAAAJ,EAAAK,EAAAvD,GAAAS,EAAAqD,MAAA,SAAA9D,EAAAC,EAAAK,GAAA,GAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAAhD,EAAA,GAAAiD,EAAAjD,EAAA,EAAA,OAAAN,GAAA,GAAAO,EAAA+C,EAAAtD,EAAA,GAAAS,EAAA6C,EAAAtD,EAAA,GAAA8C,EAAAS,EAAAvD,EAAA,GAAAkD,EAAAK,EAAAvD,GAAAS,EAAAsD,aAAA,SAAA/D,EAAAC,GAAA,GAAAK,GAAAwB,KAAA8B,IAAA3D,GAAAM,EAAAuB,KAAA+B,IAAA5D,EAAA,OAAAD,GAAA,GAAAO,EAAAP,EAAA,GAAAM,EAAAN,EAAA,IAAAM,EAAAN,EAAA,GAAAO,EAAAP,GAAAS,EAAAuD,YAAA,SAAAhE,EAAAC,GAAA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAAC,EAAA,GAAAD,GAAAS,EAAAwD,IAAA,SAAAjE,GAAA,MAAA,QAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAS,EAAAyD,KAAA,SAAAlE,GAAA,MAAA8B,MAAAqC,KAAArC,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,KAAAS,EAAA4D,IAAA,SAAArE,EAAAC,EAAAK,EAAAC,GAAA,MAAAP,GAAA,GAAAO,EAAA,GAAAA,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAP,EAAA,GAAAM,EAAA,IAAAN,EAAAC,EAAAK,IAAAG,EAAA6D,IAAA,SAAAtE,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,GAAAS,EAAA8D,SAAA,SAAAvE,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,GAAAS,EAAA+D,IAAA/D,EAAA8D,SAAA9D,EAAAgE,YAAA,SAAAzE,EAAAC,GAAA,MAAAD,GAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAQ,EAAA6B,OAAA,SAAAtC,EAAAC,GAAA,GAAAK,GAAAN,EAAA,GAAAS,EAAAT,EAAA,GAAA8C,EAAA9C,EAAA,GAAAkD,EAAAlD,EAAA,GAAAsD,EAAArD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,EAAA,OAAA6B,MAAAS,IAAAjC,EAAAgD,IAAA/C,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAjC,GAAAwB,KAAAS,IAAAe,KAAAxB,KAAAS,IAAA9B,EAAA8C,IAAAhD,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAA9B,GAAAqB,KAAAS,IAAAgB,KAAAzB,KAAAS,IAAAO,EAAAU,IAAAjD,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAO,GAAAhB,KAAAS,IAAAiB,KAAA1B,KAAAS,IAAAW,EAAAO,IAAAlD,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAW,GAAApB,KAAAS,IAAAkB,KAAAhD,EAAAiE,eAAA,SAAA1E,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,GAAAS,EAAAkE,qBAAA,SAAA3E,EAAAC,EAAAK,EAAAC,GAAA,MAAAP,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,GAAAA,EAAAE,QAAAO,GAAA,SAAAT,EAAAC,EAAAK,GAAA,GAAAC,GAAAD,EAAA,GAAAG,IAAAA,GAAAgC,OAAA,WAAA,GAAAzC,GAAA,GAAAO,GAAAmB,WAAA,EAAA,OAAA1B,GAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,GAAAS,EAAAiC,MAAA,SAAA1C,GAAA,GAAAC,GAAA,GAAAM,GAAAmB,WAAA,EAAA,OAAAzB,GAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,GAAAQ,EAAAkC,KAAA,SAAA3C,EAAAC,GAAA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,GAAAS,EAAAmC,SAAA,SAAA5C,GAAA,MAAAA,GAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,GAAAS,EAAAoC,WAAA,SAAA7C,EAAAC,EAAAK,EAAAG,EAAAqC,EAAAI,GAAA,GAAAI,GAAA,GAAA/C,GAAAmB,WAAA,EAAA,OAAA4B,GAAA,GAAAtD,EAAAsD,EAAA,GAAArD,EAAAqD,EAAA,GAAAhD,EAAAgD,EAAA,GAAA7C,EAAA6C,EAAA,GAAAR,EAAAQ,EAAA,GAAAJ,EAAAI,GAAA7C,EAAAsC,IAAA,SAAA/C,EAAAC,EAAAK,EAAAC,EAAAE,EAAAqC,EAAAI,GAAA,MAAAlD,GAAA,GAAAC,EAAAD,EAAA,GAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,GAAAS,EAAAT,EAAA,GAAA8C,EAAA9C,EAAA,GAAAkD,EAAAlD,GAAAS,EAAAwC,OAAA,SAAAjD,EAAAC,GAAA,GAAAK,GAAAL,EAAA,GAAAM,EAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAArD,EAAA,GAAAsD,EAAAjD,EAAAwC,EAAAvC,EAAAE,CAAA,OAAA8C,IAAAA,EAAA,EAAAA,EAAAvD,EAAA,GAAA8C,EAAAS,EAAAvD,EAAA,IAAAO,EAAAgD,EAAAvD,EAAA,IAAAS,EAAA8C,EAAAvD,EAAA,GAAAM,EAAAiD,EAAAvD,EAAA,IAAAS,EAAA6C,EAAAR,EAAAI,GAAAK,EAAAvD,EAAA,IAAAO,EAAA2C,EAAA5C,EAAAgD,GAAAC,EAAAvD,GAAA,MAAAS,EAAA2C,YAAA,SAAApD,GAAA,MAAAA,GAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAS,EAAA4C,SAAA,SAAArD,EAAAC,EAAAK,GAAA,GAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAArD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAlD,EAAA,GAAAmD,EAAAnD,EAAA,GAAAQ,EAAAR,EAAA,GAAAsE,EAAAtE,EAAA,GAAAuE,EAAAvE,EAAA,GAAAwE,EAAAxE,EAAA,EAAA,OAAAN,GAAA,GAAAO,EAAAiD,EAAAV,EAAAW,EAAAzD,EAAA,GAAAS,EAAA+C,EAAAN,EAAAO,EAAAzD,EAAA,GAAAO,EAAAO,EAAAgC,EAAA8B,EAAA5E,EAAA,GAAAS,EAAAK,EAAAoC,EAAA0B,EAAA5E,EAAA,GAAAO,EAAAsE,EAAA/B,EAAAgC,EAAAxB,EAAAtD,EAAA,GAAAS,EAAAoE,EAAA3B,EAAA4B,EAAAvB,EAAAvD,GAAAS,EAAAiD,IAAAjD,EAAA4C,SAAA5C,EAAAkD,OAAA,SAAA3D,EAAAC,EAAAK,GAAA,GAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAArD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAA1B,KAAA8B,IAAAtD,GAAAmD,EAAA3B,KAAA+B,IAAAvD,EAAA,OAAAN,GAAA,GAAAO,EAAAkD,EAAAX,EAAAU,EAAAxD,EAAA,GAAAS,EAAAgD,EAAAP,EAAAM,EAAAxD,EAAA,GAAAO,GAAAiD,EAAAV,EAAAW,EAAAzD,EAAA,GAAAS,GAAA+C,EAAAN,EAAAO,EAAAzD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,GAAAS,EAAAqD,MAAA,SAAA9D,EAAAC,EAAAK,GAAA,GAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAArD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAlD,EAAA,GAAAmD,EAAAnD,EAAA,EAAA,OAAAN,GAAA,GAAAO,EAAAiD,EAAAxD,EAAA,GAAAS,EAAA+C,EAAAxD,EAAA,GAAA8C,EAAAW,EAAAzD,EAAA,GAAAkD,EAAAO,EAAAzD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,GAAAS,EAAAsE,UAAA,SAAA/E,EAAAC,EAAAK,GAAA,GAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAArD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAlD,EAAA,GAAAmD,EAAAnD,EAAA,EAAA,OAAAN,GAAA,GAAAO,EAAAP,EAAA,GAAAS,EAAAT,EAAA,GAAA8C,EAAA9C,EAAA,GAAAkD,EAAAlD,EAAA,GAAAO,EAAAiD,EAAAV,EAAAW,EAAAH,EAAAtD,EAAA,GAAAS,EAAA+C,EAAAN,EAAAO,EAAAF,EAAAvD,GAAAS,EAAAsD,aAAA,SAAA/D,EAAAC,GAAA,GAAAK,GAAAwB,KAAA8B,IAAA3D,GAAAM,EAAAuB,KAAA+B,IAAA5D,EAAA,OAAAD,GAAA,GAAAO,EAAAP,EAAA,GAAAM,EAAAN,EAAA,IAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,GAAAS,EAAAuD,YAAA,SAAAhE,EAAAC,GAAA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,GAAAS,EAAAuE,gBAAA,SAAAhF,EAAAC,GAAA,MAAAD,GAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,GAAAS,EAAAwD,IAAA,SAAAjE,GAAA,MAAA,SAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAS,EAAAyD,KAAA,SAAAlE,GAAA,MAAA8B,MAAAqC,KAAArC,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,GAAA,IAAAS,EAAA6D,IAAA,SAAAtE,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,GAAAS,EAAA8D,SAAA,SAAAvE,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,GAAAS,EAAA+D,IAAA/D,EAAA8D,SAAA9D,EAAAiE,eAAA,SAAA1E,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,GAAAS,EAAAkE,qBAAA,SAAA3E,EAAAC,EAAAK,EAAAC,GAAA,MAAAP,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,GAAAS,EAAAgE,YAAA,SAAAzE,EAAAC,GAAA,MAAAD,GAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAQ,EAAA6B,OAAA,SAAAtC,EAAAC,GAAA,GAAAK,GAAAN,EAAA,GAAAS,EAAAT,EAAA,GAAA8C,EAAA9C,EAAA,GAAAkD,EAAAlD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,GAAAa,EAAAb,EAAA,GAAA2E,EAAA3E,EAAA,GAAA4E,EAAA5E,EAAA,GAAA6E,EAAA7E,EAAA,EAAA,OAAA6B,MAAAS,IAAAjC,EAAAkD,IAAAjD,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAjC,GAAAwB,KAAAS,IAAAiB,KAAA1B,KAAAS,IAAA9B,EAAAgD,IAAAlD,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAA9B,GAAAqB,KAAAS,IAAAkB,KAAA3B,KAAAS,IAAAO,EAAAhC,IAAAP,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAO,GAAAhB,KAAAS,IAAAzB,KAAAgB,KAAAS,IAAAW,EAAA0B,IAAArE,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAW,GAAApB,KAAAS,IAAAqC,KAAA9C,KAAAS,IAAAe,EAAAuB,IAAAtE,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAe,GAAAxB,KAAAS,IAAAsC,KAAA/C,KAAAS,IAAAgB,EAAAuB,IAAAvE,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAgB,GAAAzB,KAAAS,IAAAuC,KAAA9E,EAAAE,QAAAO,GAAA,SAAAT,EAAAC,EAAAK,GAAA,GAAAC,GAAAD,EAAA,GAAAG,IAAAA,GAAAgC,OAAA,WAAA,GAAAzC,GAAA,GAAAO,GAAAmB,WAAA,EAAA,OAAA1B,GAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,GAAAS,EAAAwE,SAAA,SAAAjF,EAAAC,GAAA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAAAD,GAAAS,EAAAiC,MAAA,SAAA1C,GAAA,GAAAC,GAAA,GAAAM,GAAAmB,WAAA,EAAA,OAAAzB,GAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,GAAAQ,EAAAkC,KAAA,SAAA3C,EAAAC,GAAA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,GAAAS,EAAAoC,WAAA,SAAA7C,EAAAC,EAAAK,EAAAG,EAAAqC,EAAAI,EAAAI,EAAAC,EAAAC,GAAA,GAAAC,GAAA,GAAAlD,GAAAmB,WAAA,EAAA,OAAA+B,GAAA,GAAAzD,EAAAyD,EAAA,GAAAxD,EAAAwD,EAAA,GAAAnD,EAAAmD,EAAA,GAAAhD,EAAAgD,EAAA,GAAAX,EAAAW,EAAA,GAAAP,EAAAO,EAAA,GAAAH,EAAAG,EAAA,GAAAF,EAAAE,EAAA,GAAAD,EAAAC,GAAAhD,EAAAsC,IAAA,SAAA/C,EAAAC,EAAAK,EAAAC,EAAAE,EAAAqC,EAAAI,EAAAI,EAAAC,EAAAC,GAAA,MAAAxD,GAAA,GAAAC,EAAAD,EAAA,GAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,GAAAS,EAAAT,EAAA,GAAA8C,EAAA9C,EAAA,GAAAkD,EAAAlD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,GAAAS,EAAAmC,SAAA,SAAA5C,GAAA,MAAAA,GAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,GAAAS,EAAAuC,UAAA,SAAAhD,EAAAC,GAAA,GAAAD,IAAAC,EAAA,CAAA,GAAAK,GAAAL,EAAA,GAAAM,EAAAN,EAAA,GAAAQ,EAAAR,EAAA,EAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAM,EAAAN,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAO,EAAAP,EAAA,GAAAS,MAAAT,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,EAAA,OAAAD,IAAAS,EAAAwC,OAAA,SAAAjD,EAAAC,GAAA,GAAAK,GAAAL,EAAA,GAAAM,EAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAArD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,GAAAa,EAAA2C,EAAAP,EAAAI,EAAAE,EAAAoB,GAAAnB,EAAAX,EAAAQ,EAAAC,EAAAsB,EAAArB,EAAAV,EAAAI,EAAAK,EAAAuB,EAAAxE,EAAAQ,EAAAP,EAAAqE,EAAAnE,EAAAoE,CAAA,OAAAC,IAAAA,EAAA,EAAAA,EAAA9E,EAAA,GAAAc,EAAAgE,EAAA9E,EAAA,KAAAyD,EAAAlD,EAAAE,EAAA+C,GAAAsB,EAAA9E,EAAA,IAAAsD,EAAA/C,EAAAE,EAAAyC,GAAA4B,EAAA9E,EAAA,GAAA4E,EAAAE,EAAA9E,EAAA,IAAAyD,EAAAnD,EAAAG,EAAA8C,GAAAuB,EAAA9E,EAAA,KAAAsD,EAAAhD,EAAAG,EAAAqC,GAAAgC,EAAA9E,EAAA,GAAA6E,EAAAC,EAAA9E,EAAA,KAAAwD,EAAAlD,EAAAC,EAAAgD,GAAAuB,EAAA9E,EAAA,IAAAkD,EAAA5C,EAAAC,EAAAuC,GAAAgC,EAAA9E,GAAA,MAAAS,EAAA0C,QAAA,SAAAnD,EAAAC,GAAA,GAAAK,GAAAL,EAAA,GAAAM,EAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAArD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,EAAA,OAAAD,GAAA,GAAAkD,EAAAO,EAAAH,EAAAE,EAAAxD,EAAA,GAAAS,EAAA+C,EAAAjD,EAAAkD,EAAAzD,EAAA,GAAAO,EAAA+C,EAAA7C,EAAAyC,EAAAlD,EAAA,GAAAsD,EAAAC,EAAAT,EAAAW,EAAAzD,EAAA,GAAAM,EAAAmD,EAAAhD,EAAA8C,EAAAvD,EAAA,GAAAS,EAAAqC,EAAAxC,EAAAgD,EAAAtD,EAAA,GAAA8C,EAAAU,EAAAN,EAAAK,EAAAvD,EAAA,GAAAO,EAAAgD,EAAAjD,EAAAkD,EAAAxD,EAAA,GAAAM,EAAA4C,EAAA3C,EAAAuC,EAAA9C,GAAAS,EAAA2C,YAAA,SAAApD,GAAA,GAAAC,GAAAD,EAAA,GAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,GAAAS,EAAAT,EAAA,GAAA8C,EAAA9C,EAAA,GAAAkD,EAAAlD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,EAAA,OAAAC,IAAAuD,EAAAV,EAAAI,EAAAK,GAAAjD,IAAAkD,EAAA/C,EAAAyC,EAAAI,GAAA/C,GAAAgD,EAAA9C,EAAAqC,EAAAQ,IAAA7C,EAAA4C,SAAA,SAAArD,EAAAC,EAAAK,GAAA,GAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAArD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,GAAAa,EAAAb,EAAA,GAAA2E,EAAAtE,EAAA,GAAAuE,EAAAvE,EAAA,GAAAwE,EAAAxE,EAAA,GAAA4E,EAAA5E,EAAA,GAAA6E,EAAA7E,EAAA,GAAA8E,EAAA9E,EAAA,GAAA+E,EAAA/E,EAAA,GAAAO,EAAAP,EAAA,GAAAgF,EAAAhF,EAAA,EAAA,OAAAN,GAAA,GAAA4E,EAAArE,EAAAsE,EAAA3B,EAAA4B,EAAAtB,EAAAxD,EAAA,GAAA4E,EAAAnE,EAAAoE,EAAAvB,EAAAwB,EAAArB,EAAAzD,EAAA,GAAA4E,EAAA9B,EAAA+B,EAAAtB,EAAAuB,EAAAhE,EAAAd,EAAA,GAAAkF,EAAA3E,EAAA4E,EAAAjC,EAAAkC,EAAA5B,EAAAxD,EAAA,GAAAkF,EAAAzE,EAAA0E,EAAA7B,EAAA8B,EAAA3B,EAAAzD,EAAA,GAAAkF,EAAApC,EAAAqC,EAAA5B,EAAA6B,EAAAtE,EAAAd,EAAA,GAAAqF,EAAA9E,EAAAM,EAAAqC,EAAAoC,EAAA9B,EAAAxD,EAAA,GAAAqF,EAAA5E,EAAAI,EAAAyC,EAAAgC,EAAA7B,EAAAzD,EAAA,GAAAqF,EAAAvC,EAAAjC,EAAA0C,EAAA+B,EAAAxE,EAAAd,GAAAS,EAAAiD,IAAAjD,EAAA4C,SAAA5C,EAAAsE,UAAA,SAAA/E,EAAAC,EAAAK,GAAA,GAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAArD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,GAAAa,EAAAb,EAAA,GAAA2E,EAAAtE,EAAA,GAAAuE,EAAAvE,EAAA,EAAA,OAAAN,GAAA,GAAAO,EAAAP,EAAA,GAAAS,EAAAT,EAAA,GAAA8C,EAAA9C,EAAA,GAAAkD,EAAAlD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAA4E,EAAArE,EAAAsE,EAAA3B,EAAAM,EAAAxD,EAAA,GAAA4E,EAAAnE,EAAAoE,EAAAvB,EAAAG,EAAAzD,EAAA,GAAA4E,EAAA9B,EAAA+B,EAAAtB,EAAAzC,EAAAd,GAAAS,EAAAkD,OAAA,SAAA3D,EAAAC,EAAAK,GAAA,GAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAArD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,GAAAa,EAAAb,EAAA,GAAA2E,EAAA9C,KAAA8B,IAAAtD,GAAAuE,EAAA/C,KAAA+B,IAAAvD,EAAA,OAAAN,GAAA,GAAA6E,EAAAtE,EAAAqE,EAAA1B,EAAAlD,EAAA,GAAA6E,EAAApE,EAAAmE,EAAAtB,EAAAtD,EAAA,GAAA6E,EAAA/B,EAAA8B,EAAArB,EAAAvD,EAAA,GAAA6E,EAAA3B,EAAA0B,EAAArE,EAAAP,EAAA,GAAA6E,EAAAvB,EAAAsB,EAAAnE,EAAAT,EAAA,GAAA6E,EAAAtB,EAAAqB,EAAA9B,EAAA9C,EAAA,GAAAwD,EAAAxD,EAAA,GAAAyD,EAAAzD,EAAA,GAAAc,EAAAd,GAAAS,EAAAqD,MAAA,SAAA9D,EAAAC,EAAAK,GAAA,GAAAC,GAAAD,EAAA,GAAAG,EAAAH,EAAA,EAAA,OAAAN,GAAA,GAAAO,EAAAN,EAAA,GAAAD,EAAA,GAAAO,EAAAN,EAAA,GAAAD,EAAA,GAAAO,EAAAN,EAAA,GAAAD,EAAA,GAAAS,EAAAR,EAAA,GAAAD,EAAA,GAAAS,EAAAR,EAAA,GAAAD,EAAA,GAAAS,EAAAR,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,GAAAS,EAAAuE,gBAAA,SAAAhF,EAAAC,GAAA,MAAAD,GAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAA,EAAAA,GAAAS,EAAAsD,aAAA,SAAA/D,EAAAC,GAAA,GAAAK,GAAAwB,KAAA8B,IAAA3D,GAAAM,EAAAuB,KAAA+B,IAAA5D,EAAA,OAAAD,GAAA,GAAAO,EAAAP,EAAA,GAAAM,EAAAN,EAAA,GAAA,EAAAA,EAAA,IAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,GAAAS,EAAAuD,YAAA,SAAAhE,EAAAC,GAAA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,GAAAS,EAAA8E,UAAA,SAAAvF,EAAAC,GAAA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAA,EAAAA,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAA,EAAAA,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAA,EAAAA,GAAAS,EAAA+E,SAAA,SAAAxF,EAAAC,GAAA,GAAAK,GAAAL,EAAA,GAAAM,EAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAA5C,EAAAA,EAAAgD,EAAA/C,EAAAA,EAAAgD,EAAA9C,EAAAA,EAAA+C,EAAAlD,EAAA4C,EAAAO,EAAAlD,EAAA2C,EAAApC,EAAAP,EAAA+C,EAAAsB,EAAAnE,EAAAyC,EAAA2B,EAAApE,EAAA6C,EAAAwB,EAAArE,EAAA8C,EAAA2B,EAAApC,EAAAI,EAAAiC,EAAArC,EAAAQ,EAAA8B,EAAAtC,EAAAS,CAAA,OAAAvD,GAAA,GAAA,EAAAc,EAAAgE,EAAA9E,EAAA,GAAAyD,EAAA2B,EAAApF,EAAA,GAAA4E,EAAAO,EAAAnF,EAAA,GAAAyD,EAAA2B,EAAApF,EAAA,GAAA,EAAAwD,EAAAsB,EAAA9E,EAAA,GAAA6E,EAAAK,EAAAlF,EAAA,GAAA4E,EAAAO,EAAAnF,EAAA,GAAA6E,EAAAK,EAAAlF,EAAA,GAAA,EAAAwD,EAAA1C,EAAAd,GAAAS,EAAAgF,eAAA,SAAAzF,EAAAC,GAAA,GAAAK,GAAAL,EAAA,GAAAM,EAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAArD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,GAAAa,EAAAb,EAAA,GAAA2E,EAAA3E,EAAA,IAAA4E,EAAA5E,EAAA,IAAA6E,EAAA7E,EAAA,IAAAiF,EAAAjF,EAAA,IAAAkF,EAAAlF,EAAA,IAAAmF,EAAAnF,EAAA,IAAAoF,EAAA/E,EAAAgD,EAAA/C,EAAA2C,EAAArC,EAAAP,EAAAiD,EAAA9C,EAAAyC,EAAAoC,EAAAhF,EAAAkD,EAAAV,EAAAI,EAAAwC,EAAAnF,EAAAgD,EAAA9C,EAAA6C,EAAAqC,EAAApF,EAAAiD,EAAAV,EAAAQ,EAAAsC,EAAAnF,EAAA+C,EAAAV,EAAAS,EAAAxC,EAAA0C,EAAAyB,EAAApE,EAAAgE,EAAAe,EAAApC,EAAA0B,EAAAP,EAAAE,EAAAgB,EAAArC,EAAA2B,EAAAP,EAAAC,EAAAiB,EAAAjF,EAAAqE,EAAAP,EAAAM,EAAAc,EAAAlF,EAAAsE,EAAAP,EAAAK,EAAAe,EAAArB,EAAAQ,EAAAP,EAAAM,EAAAe,EAAAb,EAAAY,EAAApF,EAAAmF,EAAAV,EAAAS,EAAAL,EAAAI,EAAAH,EAAAE,EAAAD,EAAA7E,CAAA,OAAAmF,IAAAA,EAAA,EAAAA,EAAAlG,EAAA,IAAAsD,EAAA2C,EAAA1C,EAAAyC,EAAAxC,EAAAuC,GAAAG,EAAAlG,EAAA,IAAAuD,EAAAuC,EAAA5C,EAAA+C,EAAAzC,EAAAqC,GAAAK,EAAAlG,EAAA,IAAAkD,EAAA8C,EAAA1C,EAAAwC,EAAAtC,EAAAzC,GAAAmF,EAAAlG,EAAA,IAAAS,EAAAuF,EAAAzF,EAAA0F,EAAAnD,EAAAiD,GAAAG,EAAAlG,EAAA,IAAAM,EAAA2F,EAAAxF,EAAAqF,EAAAhD,EAAA+C,GAAAK,EAAAlG,EAAA,IAAAO,EAAAuF,EAAAxF,EAAA0F,EAAAlD,EAAA/B,GAAAmF,EAAAlG,EAAA,IAAAkF,EAAAU,EAAAT,EAAAQ,EAAAP,EAAAM,GAAAQ,EAAAlG,EAAA,IAAAmF,EAAAG,EAAAR,EAAAc,EAAAR,EAAAvE,GAAAqF,EAAAlG,EAAA,IAAA8E,EAAAa,EAAAT,EAAAI,EAAAF,EAAAC,GAAAa,EAAAlG,GAAA,MAAAS,EAAAwD,IAAA,SAAAjE,GAAA,MAAA,QAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAS,EAAAyD,KAAA,SAAAlE,GAAA,MAAA8B,MAAAqC,KAAArC,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,KAAAS,EAAA6D,IAAA,SAAAtE,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,GAAAS,EAAA8D,SAAA,SAAAvE,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,GAAAS,EAAA+D,IAAA/D,EAAA8D,SAAA9D,EAAAiE,eAAA,SAAA1E,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,GAAAS,EAAAkE,qBAAA,SAAA3E,EAAAC,EAAAK,EAAAC,GAAA,MAAAP,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,GAAAS,EAAAgE,YAAA,SAAAzE,EAAAC,GAAA,MAAAD,GAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAQ,EAAA6B,OAAA,SAAAtC,EAAAC,GAAA,GAAAK,GAAAN,EAAA,GAAAS,EAAAT,EAAA,GAAA8C,EAAA9C,EAAA,GAAAkD,EAAAlD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,GAAAyD,EAAAzD,EAAA,GAAAc,EAAAd,EAAA,GAAA4E,EAAA3E,EAAA,GAAA4E,EAAA5E,EAAA,GAAA6E,EAAA7E,EAAA,GAAAiF,EAAAjF,EAAA,GAAAkF,EAAAlF,EAAA,GAAAmF,EAAAnF,EAAA,GAAAoF,EAAArF,EAAA,GAAAa,EAAAZ,EAAA,GAAAqF,EAAArF,EAAA,EAAA,OAAA6B,MAAAS,IAAAjC,EAAAsE,IAAArE,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAjC,GAAAwB,KAAAS,IAAAqC,KAAA9C,KAAAS,IAAA9B,EAAAoE,IAAAtE,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAA9B,GAAAqB,KAAAS,IAAAsC,KAAA/C,KAAAS,IAAAO,EAAAgC,IAAAvE,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAO,GAAAhB,KAAAS,IAAAuC,KAAAhD,KAAAS,IAAAW,EAAAgC,IAAA3E,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAW,GAAApB,KAAAS,IAAA2C,KAAApD,KAAAS,IAAAe,EAAA6B,IAAA5E,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAe,GAAAxB,KAAAS,IAAA4C,KAAArD,KAAAS,IAAAgB,EAAA6B,IAAA7E,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAgB,GAAAzB,KAAAS,IAAA6C,KAAAtD,KAAAS,IAAAiB,EAAA6B,IAAA9E,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAiB,GAAA1B,KAAAS,IAAA8C,KAAAvD,KAAAS,IAAAkB,EAAA5C,IAAAN,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAkB,GAAA3B,KAAAS,IAAA1B,KAAAiB,KAAAS,IAAAzB,EAAAwE,IAAA/E,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAzB,GAAAgB,KAAAS,IAAA+C,KAAAtF,EAAAE,QAAAO,GAAA,SAAAT,EAAAC,EAAAK,GAAA,GAAAC,GAAAD,EAAA,GAAAG,GAAA0F,UAAAC,QAAA3F,GAAAgC,OAAA,WAAA,GAAAzC,GAAA,GAAAO,GAAAmB,WAAA,GAAA,OAAA1B,GAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,GAAAS,EAAAiC,MAAA,SAAA1C,GAAA,GAAAC,GAAA,GAAAM,GAAAmB,WAAA,GAAA,OAAAzB,GAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,GAAAQ,EAAAkC,KAAA,SAAA3C,EAAAC,GAAA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,GAAAS,EAAAoC,WAAA,SAAA7C,EAAAC,EAAAK,EAAAG,EAAAqC,EAAAI,EAAAI,EAAAC,EAAAC,EAAAC,EAAA3C,EAAA8D,EAAAC,EAAAC,EAAAI,EAAAC,GAAA,GAAAC,GAAA,GAAA7E,GAAAmB,WAAA,GAAA,OAAA0D,GAAA,GAAApF,EAAAoF,EAAA,GAAAnF,EAAAmF,EAAA,GAAA9E,EAAA8E,EAAA,GAAA3E,EAAA2E,EAAA,GAAAtC,EAAAsC,EAAA,GAAAlC,EAAAkC,EAAA,GAAA9B,EAAA8B,EAAA,GAAA7B,EAAA6B,EAAA,GAAA5B,EAAA4B,EAAA,GAAA3B,EAAA2B,EAAA,IAAAtE,EAAAsE,EAAA,IAAAR,EAAAQ,EAAA,IAAAP,EAAAO,EAAA,IAAAN,EAAAM,EAAA,IAAAF,EAAAE,EAAA,IAAAD,EAAAC,GAAA3E,EAAAsC,IAAA,SAAA/C,EAAAC,EAAAK,EAAAC,EAAAE,EAAAqC,EAAAI,EAAAI,EAAAC,EAAAC,EAAAC,EAAA3C,EAAA8D,EAAAC,EAAAC,EAAAI,EAAAC,GAAA,MAAAnF,GAAA,GAAAC,EAAAD,EAAA,GAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,GAAAS,EAAAT,EAAA,GAAA8C,EAAA9C,EAAA,GAAAkD,EAAAlD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,GAAAyD,EAAAzD,EAAA,IAAAc,EAAAd,EAAA,IAAA4E,EAAA5E,EAAA,IAAA6E,EAAA7E,EAAA,IAAA8E,EAAA9E,EAAA,IAAAkF,EAAAlF,EAAA,IAAAmF,EAAAnF,GAAAS,EAAAmC,SAAA,SAAA5C,GAAA,MAAAA,GAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,GAAAS,EAAA0F,OAAAnD,UAAA,SAAAhD,EAAAC,GAAA,GAAAD,IAAAC,EAAA,CAAA,GAAAK,GAAAL,EAAA,GAAAM,EAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAArD,EAAA,GAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAM,EAAAN,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAO,EAAAP,EAAA,GAAA8C,EAAA9C,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAS,EAAAT,EAAA,IAAAkD,EAAAlD,EAAA,IAAAsD,MAAAtD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,GAAA,OAAAD,IAAAS,EAAA2F,KAAApD,UAAA,SAAAhD,EAAAC,GAAA,GAAAK,GAAAC,EAAAE,EAAAqC,EAAAI,EAAAI,EAAAC,EAAAC,EAAAC,EAAA3C,CAAA,OAAAR,GAAA8F,KAAAC,UAAAC,KAAArG,EAAA,GAAAM,EAAA6F,KAAAC,UAAAC,KAAArG,EAAA,GAAAQ,EAAA2F,KAAAC,UAAAC,KAAArG,EAAA,GAAA6C,EAAAsD,KAAAC,UAAAC,KAAArG,EAAA,IAAAiD,EAAAkD,KAAAC,UAAAE,QAAAjG,EAAAC,EAAA,EAAA,EAAA,EAAA,GAAA+C,EAAA8C,KAAAC,UAAAE,QAAA9F,EAAAqC,EAAA,EAAA,EAAA,EAAA,GAAAS,EAAA6C,KAAAC,UAAAE,QAAArD,EAAAI,EAAA,EAAA,EAAA,EAAA,GAAAE,EAAA4C,KAAAC,UAAAE,QAAArD,EAAAI,EAAA,EAAA,EAAA,EAAA,GAAA8C,KAAAC,UAAAG,MAAAxG,EAAA,EAAAuD,GAAA6C,KAAAC,UAAAG,MAAAxG,EAAA,EAAAwD,GAAAN,EAAAkD,KAAAC,UAAAE,QAAAjG,EAAAC,EAAA,EAAA,EAAA,EAAA,GAAA+C,EAAA8C,KAAAC,UAAAE,QAAA9F,EAAAqC,EAAA,EAAA,EAAA,EAAA,GAAAW,EAAA2C,KAAAC,UAAAE,QAAArD,EAAAI,EAAA,EAAA,EAAA,EAAA,GAAAxC,EAAAsF,KAAAC,UAAAE,QAAArD,EAAAI,EAAA,EAAA,EAAA,EAAA,GAAA8C,KAAAC,UAAAG,MAAAxG,EAAA,EAAAyD,GAAA2C,KAAAC,UAAAG,MAAAxG,EAAA,GAAAc,GAAAd,GAAAS,EAAAuC,UAAAzC,EAAA2B,SAAAzB,EAAA2F,KAAApD,UAAAvC,EAAA0F,OAAAnD,UAAAvC,EAAA0F,OAAAlD,OAAA,SAAAjD,EAAAC,GAAA,GAAAK,GAAAL,EAAA,GAAAM,EAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAArD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,GAAAa,EAAAb,EAAA,GAAA2E,EAAA3E,EAAA,IAAA4E,EAAA5E,EAAA,IAAA6E,EAAA7E,EAAA,IAAAiF,EAAAjF,EAAA,IAAAkF,EAAAlF,EAAA,IAAAmF,EAAAnF,EAAA,IAAAoF,EAAA/E,EAAAgD,EAAA/C,EAAA2C,EAAArC,EAAAP,EAAAiD,EAAA9C,EAAAyC,EAAAoC,EAAAhF,EAAAkD,EAAAV,EAAAI,EAAAwC,EAAAnF,EAAAgD,EAAA9C,EAAA6C,EAAAqC,EAAApF,EAAAiD,EAAAV,EAAAQ,EAAAsC,EAAAnF,EAAA+C,EAAAV,EAAAS,EAAAxC,EAAA0C,EAAAyB,EAAApE,EAAAgE,EAAAe,EAAApC,EAAA0B,EAAAP,EAAAE,EAAAgB,EAAArC,EAAA2B,EAAAP,EAAAC,EAAAiB,EAAAjF,EAAAqE,EAAAP,EAAAM,EAAAc,EAAAlF,EAAAsE,EAAAP,EAAAK,EAAAe,EAAArB,EAAAQ,EAAAP,EAAAM,EAAAe,EAAAb,EAAAY,EAAApF,EAAAmF,EAAAV,EAAAS,EAAAL,EAAAI,EAAAH,EAAAE,EAAAD,EAAA7E,CAAA,OAAAmF,IAAAA,EAAA,EAAAA,EAAAlG,EAAA,IAAAsD,EAAA2C,EAAA1C,EAAAyC,EAAAxC,EAAAuC,GAAAG,EAAAlG,EAAA,IAAAS,EAAAuF,EAAAzF,EAAA0F,EAAAnD,EAAAiD,GAAAG,EAAAlG,EAAA,IAAAkF,EAAAU,EAAAT,EAAAQ,EAAAP,EAAAM,GAAAQ,EAAAlG,EAAA,IAAA4E,EAAAe,EAAA7E,EAAA8E,EAAAf,EAAAa,GAAAQ,EAAAlG,EAAA,IAAAuD,EAAAuC,EAAA5C,EAAA+C,EAAAzC,EAAAqC,GAAAK,EAAAlG,EAAA,IAAAM,EAAA2F,EAAAxF,EAAAqF,EAAAhD,EAAA+C,GAAAK,EAAAlG,EAAA,IAAAmF,EAAAG,EAAAR,EAAAc,EAAAR,EAAAvE,GAAAqF,EAAAlG,EAAA,IAAAyD,EAAAmC,EAAAhB,EAAAU,EAAAT,EAAAhE,GAAAqF,EAAAlG,EAAA,IAAAkD,EAAA8C,EAAA1C,EAAAwC,EAAAtC,EAAAzC,GAAAmF,EAAAlG,EAAA,IAAAO,EAAAuF,EAAAxF,EAAA0F,EAAAlD,EAAA/B,GAAAmF,EAAAlG,EAAA,KAAA8E,EAAAa,EAAAT,EAAAI,EAAAF,EAAAC,GAAAa,EAAAlG,EAAA,KAAAc,EAAAwE,EAAA7B,EAAAkC,EAAAd,EAAAQ,GAAAa,EAAAlG,EAAA,KAAAsD,EAAAuC,EAAA3C,EAAA6C,EAAAxC,EAAAxC,GAAAmF,EAAAlG,EAAA,KAAAM,EAAAyF,EAAAxF,EAAAsF,EAAApF,EAAAM,GAAAmF,EAAAlG,EAAA,KAAAkF,EAAArE,EAAAiE,EAAAY,EAAAP,EAAAE,GAAAa,EAAAlG,EAAA,KAAAyD,EAAAiC,EAAA5E,EAAAD,EAAA+D,EAAAS,GAAAa,EAAAlG,GAAA,MAAAS,EAAA2F,KAAAnD,OAAA,SAAAjD,EAAAC,GAAA,GAAAK,GAAAC,EAAAE,EAAAqC,EAAAI,EAAAI,EAAAC,EAAAC,EAAAC,EAAA3C,EAAA8D,EAAAwB,KAAAC,UAAAC,KAAArG,EAAA,GAAA4E,EAAAuB,KAAAC,UAAAC,KAAArG,EAAA,GAAA6E,EAAAsB,KAAAC,UAAAC,KAAArG,EAAA,GAAAiF,EAAAkB,KAAAC,UAAAC,KAAArG,EAAA,GAAA,OAAAiD,GAAAkD,KAAAC,UAAAE,QAAA3B,EAAAC,EAAA,EAAA,EAAA,EAAA,GAAAtE,EAAA6F,KAAAC,UAAAE,QAAAzB,EAAAI,EAAA,EAAA,EAAA,EAAA,GAAA5E,EAAA8F,KAAAC,UAAAE,QAAArD,EAAA3C,EAAA,EAAA,EAAA,EAAA,GAAAA,EAAA6F,KAAAC,UAAAE,QAAAhG,EAAA2C,EAAA,EAAA,EAAA,EAAA,GAAAA,EAAAkD,KAAAC,UAAAE,QAAA3B,EAAAC,EAAA,EAAA,EAAA,EAAA,GAAA/B,EAAAsD,KAAAC,UAAAE,QAAAzB,EAAAI,EAAA,EAAA,EAAA,EAAA,GAAAzE,EAAA2F,KAAAC,UAAAE,QAAArD,EAAAJ,EAAA,EAAA,EAAA,EAAA,GAAAA,EAAAsD,KAAAC,UAAAE,QAAAzD,EAAAI,EAAA,EAAA,EAAA,EAAA,GAAAA,EAAAkD,KAAAC,UAAA3C,IAAAjD,EAAAqC,GAAAI,EAAAkD,KAAAC,UAAAI,QAAAvD,EAAA,EAAA,EAAA,EAAA,GAAAI,EAAA8C,KAAAC,UAAA3C,IAAAnD,EAAA2C,GAAAK,EAAA6C,KAAAC,UAAA3C,IAAApD,EAAA4C,GAAAA,EAAAkD,KAAAC,UAAAI,QAAAvD,EAAA,EAAA,EAAA,EAAA,GAAAI,EAAA8C,KAAAC,UAAA7B,IAAA4B,KAAAC,UAAA3C,IAAAnD,EAAA2C,GAAAI,GAAAC,EAAA6C,KAAAC,UAAA7B,IAAA4B,KAAAC,UAAA3C,IAAApD,EAAA4C,GAAAK,GAAAA,EAAA6C,KAAAC,UAAAI,QAAAlD,EAAA,EAAA,EAAA,EAAA,GAAAL,EAAAkD,KAAAC,UAAA3C,IAAAnD,EAAAE,GAAAyC,EAAAkD,KAAAC,UAAAI,QAAAvD,EAAA,EAAA,EAAA,EAAA,GAAAI,EAAA8C,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAAZ,EAAAI,GAAAI,GAAAG,EAAA2C,KAAAC,UAAA3C,IAAApD,EAAA4C,GAAAA,EAAAkD,KAAAC,UAAAI,QAAAvD,EAAA,EAAA,EAAA,EAAA,GAAAI,EAAA8C,KAAAC,UAAA7B,IAAAlB,EAAA8C,KAAAC,UAAA3C,IAAAZ,EAAAI,IAAAO,EAAA2C,KAAAC,UAAA7B,IAAA4B,KAAAC,UAAA3C,IAAApD,EAAA4C,GAAAO,GAAAA,EAAA2C,KAAAC,UAAAI,QAAAhD,EAAA,EAAA,EAAA,EAAA,GAAAP,EAAAkD,KAAAC,UAAA3C,IAAA0C,KAAAC,UAAAI,QAAAlG,EAAA,EAAA,EAAA,EAAA,GAAAuC,GAAAI,EAAAkD,KAAAC,UAAAI,QAAAvD,EAAA,EAAA,EAAA,EAAA,GAAAzC,EAAA2F,KAAAC,UAAAI,QAAAhG,EAAA,EAAA,EAAA,EAAA,GAAA6C,EAAA8C,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAAjD,EAAAyC,GAAAI,GAAAE,EAAA4C,KAAAC,UAAA3C,IAAApD,EAAA4C,GAAAA,EAAAkD,KAAAC,UAAAI,QAAAvD,EAAA,EAAA,EAAA,EAAA,GAAAI,EAAA8C,KAAAC,UAAA7B,IAAAlB,EAAA8C,KAAAC,UAAA3C,IAAAjD,EAAAyC,IAAAM,EAAA4C,KAAAC,UAAA7B,IAAA4B,KAAAC,UAAA3C,IAAApD,EAAA4C,GAAAM,GAAAA,EAAA4C,KAAAC,UAAAI,QAAAjD,EAAA,EAAA,EAAA,EAAA,GAAAN,EAAAkD,KAAAC,UAAA3C,IAAApD,EAAAC,GAAA2C,EAAAkD,KAAAC,UAAAI,QAAAvD,EAAA,EAAA,EAAA,EAAA,GAAAM,EAAA4C,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAAZ,EAAAI,GAAAM,GAAAC,EAAA2C,KAAAC,UAAA7B,IAAA4B,KAAAC,UAAA3C,IAAAjD,EAAAyC,GAAAO,GAAAP,EAAAkD,KAAAC,UAAAI,QAAAvD,EAAA,EAAA,EAAA,EAAA,GAAAM,EAAA4C,KAAAC,UAAA7B,IAAA4B,KAAAC,UAAA3C,IAAAZ,EAAAI,GAAAM,GAAAC,EAAA2C,KAAAC,UAAA7B,IAAAf,EAAA2C,KAAAC,UAAA3C,IAAAjD,EAAAyC,IAAAA,EAAAkD,KAAAC,UAAA3C,IAAApD,EAAAwC,GAAAI,EAAAkD,KAAAC,UAAAI,QAAAvD,EAAA,EAAA,EAAA,EAAA,GAAAK,EAAA6C,KAAAC,UAAA7B,IAAAjB,EAAA6C,KAAAC,UAAA3C,IAAAjD,EAAAyC,IAAAM,EAAA4C,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAAnD,EAAA2C,GAAAM,GAAAN,EAAAkD,KAAAC,UAAAI,QAAAvD,EAAA,EAAA,EAAA,EAAA,GAAAK,EAAA6C,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAAjD,EAAAyC,GAAAK,GAAAC,EAAA4C,KAAAC,UAAA7B,IAAAhB,EAAA4C,KAAAC,UAAA3C,IAAAnD,EAAA2C,IAAAA,EAAAkD,KAAAC,UAAA3C,IAAApD,EAAAG,GAAAyC,EAAAkD,KAAAC,UAAAI,QAAAvD,EAAA,EAAA,EAAA,EAAA,GAAAK,EAAA6C,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAAZ,EAAAI,GAAAK,GAAAE,EAAA2C,KAAAC,UAAA7B,IAAAf,EAAA2C,KAAAC,UAAA3C,IAAAnD,EAAA2C,IAAAA,EAAAkD,KAAAC,UAAAI,QAAAvD,EAAA,EAAA,EAAA,EAAA,GAAAK,EAAA6C,KAAAC,UAAA7B,IAAAjB,EAAA6C,KAAAC,UAAA3C,IAAAZ,EAAAI,IAAAO,EAAA2C,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAAnD,EAAA2C,GAAAO,GAAA3C,EAAAsF,KAAAC,UAAA3C,IAAApD,EAAAgD,GAAAxC,EAAAsF,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAAI,QAAA3F,EAAA,EAAA,EAAA,EAAA,GAAAA,GAAAA,EAAAsF,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAAI,QAAA3F,EAAA,EAAA,EAAA,EAAA,GAAAA,GAAAoC,EAAAkD,KAAAC,UAAAK,wBAAA5F,GAAAA,EAAAsF,KAAAC,UAAA7B,IAAA4B,KAAAC,UAAA/B,IAAApB,EAAAA,GAAAkD,KAAAC,UAAA3C,IAAA5C,EAAAsF,KAAAC,UAAA3C,IAAAR,EAAAA,MAAApC,EAAAsF,KAAAC,UAAAI,QAAA3F,EAAA,EAAA,EAAA,EAAA,KAAAsF,KAAAC,UAAAG,MAAAxG,EAAA,EAAAoG,KAAAC,UAAA3C,IAAA5C,EAAAwC,IAAA8C,KAAAC,UAAAG,MAAAxG,EAAA,EAAAoG,KAAAC,UAAA3C,IAAA5C,EAAAyC,IAAA6C,KAAAC,UAAAG,MAAAxG,EAAA,EAAAoG,KAAAC,UAAA3C,IAAA5C,EAAA0C,IAAA4C,KAAAC,UAAAG,MAAAxG,EAAA,GAAAoG,KAAAC,UAAA3C,IAAA5C,EAAA2C,IAAAzD,GAAA,MAAAS,EAAAwC,OAAA1C,EAAA2B,SAAAzB,EAAA2F,KAAAnD,OAAAxC,EAAA0F,OAAAlD,OAAAxC,EAAA0F,OAAAhD,QAAA,SAAAnD,EAAAC,GAAA,GAAAK,GAAAL,EAAA,GAAAM,EAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAArD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,GAAAa,EAAAb,EAAA,GAAA2E,EAAA3E,EAAA,IAAA4E,EAAA5E,EAAA,IAAA6E,EAAA7E,EAAA,IAAAiF,EAAAjF,EAAA,IAAAkF,EAAAlF,EAAA,IAAAmF,EAAAnF,EAAA,GAAA,OAAAD,GAAA,GAAAsD,GAAAsB,EAAAQ,EAAAP,EAAAM,GAAArE,GAAAyC,EAAA6B,EAAA5B,EAAA2B,GAAAD,GAAA3B,EAAAsB,EAAArB,EAAAoB,GAAA5E,EAAA,KAAAO,GAAAqE,EAAAQ,EAAAP,EAAAM,GAAArE,GAAAL,EAAA2E,EAAAtC,EAAAqC,GAAAD,GAAAzE,EAAAoE,EAAA/B,EAAA8B,IAAA5E,EAAA,GAAAO,GAAAgD,EAAA6B,EAAA5B,EAAA2B,GAAA7B,GAAA7C,EAAA2E,EAAAtC,EAAAqC,GAAAD,GAAAzE,EAAA+C,EAAAV,EAAAS,GAAAvD,EAAA,KAAAO,GAAAgD,EAAAsB,EAAArB,EAAAoB,GAAAtB,GAAA7C,EAAAoE,EAAA/B,EAAA8B,GAAA9D,GAAAL,EAAA+C,EAAAV,EAAAS,IAAAvD,EAAA,KAAAkD,GAAA0B,EAAAQ,EAAAP,EAAAM,GAAA1B,GAAAF,EAAA6B,EAAA5B,EAAA2B,GAAAL,GAAAvB,EAAAsB,EAAArB,EAAAoB,IAAA5E,EAAA,GAAAM,GAAAsE,EAAAQ,EAAAP,EAAAM,GAAA1B,GAAAhD,EAAA2E,EAAAtC,EAAAqC,GAAAL,GAAArE,EAAAoE,EAAA/B,EAAA8B,GAAA5E,EAAA,KAAAM,GAAAiD,EAAA6B,EAAA5B,EAAA2B,GAAAjC,GAAAzC,EAAA2E,EAAAtC,EAAAqC,GAAAL,GAAArE,EAAA+C,EAAAV,EAAAS,IAAAvD,EAAA,GAAAM,GAAAiD,EAAAsB,EAAArB,EAAAoB,GAAA1B,GAAAzC,EAAAoE,EAAA/B,EAAA8B,GAAAnB,GAAAhD,EAAA+C,EAAAV,EAAAS,GAAAvD,EAAA,GAAAkD,GAAApC,EAAAsE,EAAAP,EAAAK,GAAAzB,GAAAH,EAAA8B,EAAA5B,EAAA0B,GAAAJ,GAAAxB,EAAAuB,EAAArB,EAAA1C,GAAAd,EAAA,KAAAM,GAAAQ,EAAAsE,EAAAP,EAAAK,GAAAzB,GAAAlD,EAAA6E,EAAAtC,EAAAoC,GAAAJ,GAAAvE,EAAAsE,EAAA/B,EAAAhC,IAAAd,EAAA,IAAAM,GAAAgD,EAAA8B,EAAA5B,EAAA0B,GAAAhC,GAAA3C,EAAA6E,EAAAtC,EAAAoC,GAAAJ,GAAAvE,EAAAiD,EAAAV,EAAAQ,GAAAtD,EAAA,MAAAM,GAAAgD,EAAAuB,EAAArB,EAAA1C,GAAAoC,GAAA3C,EAAAsE,EAAA/B,EAAAhC,GAAA2C,GAAAlD,EAAAiD,EAAAV,EAAAQ,IAAAtD,EAAA,MAAAkD,GAAApC,EAAAqE,EAAAP,EAAAM,GAAAzB,GAAAH,EAAA6B,EAAA5B,EAAA2B,GAAAJ,GAAAxB,EAAAsB,EAAArB,EAAAzC,IAAAd,EAAA,IAAAM,GAAAQ,EAAAqE,EAAAP,EAAAM,GAAAzB,GAAAlD,EAAA4E,EAAA1E,EAAAyE,GAAAJ,GAAAvE,EAAAqE,EAAAnE,EAAAK,GAAAd,EAAA,MAAAM,GAAAgD,EAAA6B,EAAA5B,EAAA2B,GAAAhC,GAAA3C,EAAA4E,EAAA1E,EAAAyE,GAAAJ,GAAAvE,EAAAgD,EAAA9C,EAAA6C,IAAAtD,EAAA,IAAAM,GAAAgD,EAAAsB,EAAArB,EAAAzC,GAAAoC,GAAA3C,EAAAqE,EAAAnE,EAAAK,GAAA2C,GAAAlD,EAAAgD,EAAA9C,EAAA6C,GAAAtD,GAAAS,EAAA2F,KAAAjD,QAAA,SAAAnD,EAAAC,GAAA,GAAAK,GAAAC,EAAAE,EAAAqC,EAAAI,EAAAI,EAAAC,EAAAC,EAAAC,EAAA3C,EAAA8D,EAAAC,EAAAC,EAAAxE,EAAA8F,KAAAC,UAAAC,KAAArG,EAAA,GAAAM,EAAA6F,KAAAC,UAAAC,KAAArG,EAAA,GAAAQ,EAAA2F,KAAAC,UAAAC,KAAArG,EAAA,GAAA6C,EAAAsD,KAAAC,UAAAC,KAAArG,EAAA,GAAA,OAAAwD,GAAA2C,KAAAC,UAAAE,QAAAjG,EAAAC,EAAA,EAAA,EAAA,EAAA,GAAA+C,EAAA8C,KAAAC,UAAAE,QAAA9F,EAAAqC,EAAA,EAAA,EAAA,EAAA,GAAAI,EAAAkD,KAAAC,UAAAE,QAAA9C,EAAAH,EAAA,EAAA,EAAA,EAAA,GAAAA,EAAA8C,KAAAC,UAAAE,QAAAjD,EAAAG,EAAA,EAAA,EAAA,EAAA,GAAAA,EAAA2C,KAAAC,UAAAE,QAAAjG,EAAAC,EAAA,EAAA,EAAA,EAAA,GAAAiD,EAAA4C,KAAAC,UAAAE,QAAA9F,EAAAqC,EAAA,EAAA,EAAA,EAAA,GAAAS,EAAA6C,KAAAC,UAAAE,QAAA9C,EAAAD,EAAA,EAAA,EAAA,EAAA,GAAAA,EAAA4C,KAAAC,UAAAE,QAAA/C,EAAAC,EAAA,EAAA,EAAA,EAAA,GAAAA,EAAA2C,KAAAC,UAAA3C,IAAAH,EAAAC,GAAAC,EAAA2C,KAAAC,UAAAI,QAAAhD,EAAA,EAAA,EAAA,EAAA,GAAA3C,EAAAsF,KAAAC,UAAA3C,IAAAJ,EAAAG,GAAAmB,EAAAwB,KAAAC,UAAA3C,IAAAR,EAAAO,GAAAA,EAAA2C,KAAAC,UAAAI,QAAAhD,EAAA,EAAA,EAAA,EAAA,GAAA3C,EAAAsF,KAAAC,UAAA7B,IAAA4B,KAAAC,UAAA3C,IAAAJ,EAAAG,GAAA3C,GAAA8D,EAAAwB,KAAAC,UAAA7B,IAAA4B,KAAAC,UAAA3C,IAAAR,EAAAO,GAAAmB,GAAAA,EAAAwB,KAAAC,UAAAI,QAAA7B,EAAA,EAAA,EAAA,EAAA,GAAAnB,EAAA2C,KAAAC,UAAA3C,IAAAJ,EAAAC,GAAAE,EAAA2C,KAAAC,UAAAI,QAAAhD,EAAA,EAAA,EAAA,EAAA,GAAA3C,EAAAsF,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAAF,EAAAC,GAAA3C,GAAAgE,EAAAsB,KAAAC,UAAA3C,IAAAR,EAAAO,GAAAA,EAAA2C,KAAAC,UAAAI,QAAAhD,EAAA,EAAA,EAAA,EAAA,GAAA3C,EAAAsF,KAAAC,UAAA7B,IAAA1D,EAAAsF,KAAAC,UAAA3C,IAAAF,EAAAC,IAAAqB,EAAAsB,KAAAC,UAAA7B,IAAA4B,KAAAC,UAAA3C,IAAAR,EAAAO,GAAAqB,GAAAA,EAAAsB,KAAAC,UAAAI,QAAA3B,EAAA,EAAA,EAAA,EAAA,GAAArB,EAAA2C,KAAAC,UAAA3C,IAAA0C,KAAAC,UAAAI,QAAAnD,EAAA,EAAA,EAAA,EAAA,GAAAE,GAAAC,EAAA2C,KAAAC,UAAAI,QAAAhD,EAAA,EAAA,EAAA,EAAA,GAAAF,EAAA6C,KAAAC,UAAAI,QAAAlD,EAAA,EAAA,EAAA,EAAA,GAAAzC,EAAAsF,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAAH,EAAAE,GAAA3C,GAAA+D,EAAAuB,KAAAC,UAAA3C,IAAAR,EAAAO,GAAAA,EAAA2C,KAAAC,UAAAI,QAAAhD,EAAA,EAAA,EAAA,EAAA,GAAA3C,EAAAsF,KAAAC,UAAA7B,IAAA1D,EAAAsF,KAAAC,UAAA3C,IAAAH,EAAAE,IAAAoB,EAAAuB,KAAAC,UAAA7B,IAAA4B,KAAAC,UAAA3C,IAAAR,EAAAO,GAAAoB,GAAAA,EAAAuB,KAAAC,UAAAI,QAAA5B,EAAA,EAAA,EAAA,EAAA,GAAApB,EAAA2C,KAAAC,UAAA3C,IAAAR,EAAAI,GAAAG,EAAA2C,KAAAC,UAAAI,QAAAhD,EAAA,EAAA,EAAA,EAAA,GAAAoB,EAAAuB,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAAF,EAAAC,GAAAoB,GAAAC,EAAAsB,KAAAC,UAAA7B,IAAA4B,KAAAC,UAAA3C,IAAAH,EAAAE,GAAAqB,GAAArB,EAAA2C,KAAAC,UAAAI,QAAAhD,EAAA,EAAA,EAAA,EAAA,GAAAoB,EAAAuB,KAAAC,UAAA7B,IAAA4B,KAAAC,UAAA3C,IAAAF,EAAAC,GAAAoB,GAAAC,EAAAsB,KAAAC,UAAA7B,IAAAM,EAAAsB,KAAAC,UAAA3C,IAAAH,EAAAE,IAAAA,EAAA2C,KAAAC,UAAA3C,IAAAR,EAAAM,GAAAC,EAAA2C,KAAAC,UAAAI,QAAAhD,EAAA,EAAA,EAAA,EAAA,GAAAmB,EAAAwB,KAAAC,UAAA7B,IAAAI,EAAAwB,KAAAC,UAAA3C,IAAAH,EAAAE,IAAAoB,EAAAuB,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAAJ,EAAAG,GAAAoB,GAAApB,EAAA2C,KAAAC,UAAAI,QAAAhD,EAAA,EAAA,EAAA,EAAA,GAAAmB,EAAAwB,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAAH,EAAAE,GAAAmB,GAAAC,EAAAuB,KAAAC,UAAA7B,IAAAK,EAAAuB,KAAAC,UAAA3C,IAAAJ,EAAAG,IAAAA,EAAA2C,KAAAC,UAAA3C,IAAAR,EAAAK,GAAAE,EAAA2C,KAAAC,UAAAI,QAAAhD,EAAA,EAAA,EAAA,EAAA,GAAAmB,EAAAwB,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAAF,EAAAC,GAAAmB,GAAAE,EAAAsB,KAAAC,UAAA7B,IAAAM,EAAAsB,KAAAC,UAAA3C,IAAAJ,EAAAG,IAAAA,EAAA2C,KAAAC,UAAAI,QAAAhD,EAAA,EAAA,EAAA,EAAA,GAAAmB,EAAAwB,KAAAC,UAAA7B,IAAAI,EAAAwB,KAAAC,UAAA3C,IAAAF,EAAAC,IAAAqB,EAAAsB,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAAJ,EAAAG,GAAAqB,GAAAsB,KAAAC,UAAAG,MAAAxG,EAAA,EAAAc,GAAAsF,KAAAC,UAAAG,MAAAxG,EAAA,EAAA4E,GAAAwB,KAAAC,UAAAG,MAAAxG,EAAA,EAAA6E,GAAAuB,KAAAC,UAAAG,MAAAxG,EAAA,GAAA8E,GAAA9E,GAAAS,EAAA0C,QAAA5C,EAAA2B,SAAAzB,EAAA2F,KAAAjD,QAAA1C,EAAA0F,OAAAhD,QAAA1C,EAAA2C,YAAA,SAAApD,GAAA,GAAAC,GAAAD,EAAA,GAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,GAAAS,EAAAT,EAAA,GAAA8C,EAAA9C,EAAA,GAAAkD,EAAAlD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,GAAAyD,EAAAzD,EAAA,GAAAc,EAAAd,EAAA,IAAA4E,EAAA5E,EAAA,IAAA6E,EAAA7E,EAAA,IAAA8E,EAAA9E,EAAA,IAAAkF,EAAAlF,EAAA,IAAAmF,EAAAnF,EAAA,IAAAoF,EAAAnF,EAAAiD,EAAA5C,EAAAwC,EAAAuC,EAAApF,EAAAqD,EAAA/C,EAAAuC,EAAAjC,EAAAZ,EAAAsD,EAAA9C,EAAAqC,EAAAwC,EAAAhF,EAAAgD,EAAA/C,EAAA2C,EAAAwC,EAAApF,EAAAiD,EAAA9C,EAAAyC,EAAAyC,EAAApF,EAAAgD,EAAA9C,EAAA6C,EAAAsC,EAAApC,EAAAsB,EAAArB,EAAAoB,EAAA9D,EAAAyC,EAAA0B,EAAApE,EAAA+D,EAAAgB,EAAArC,EAAA2B,EAAAP,EAAAC,EAAAiB,EAAArC,EAAAyB,EAAApE,EAAAgE,EAAAiB,EAAAtC,EAAA0B,EAAAP,EAAAE,EAAAkB,EAAAlF,EAAAqE,EAAAP,EAAAM,CAAA,OAAAE,GAAAY,EAAAX,EAAAU,EAAAlF,EAAAiF,EAAAR,EAAAO,EAAAH,EAAA3E,EAAA4E,EAAAC,GAAAnF,EAAA2F,KAAA/C,SAAA,SAAArD,EAAAC,EAAAK,GAAA,GAAAC,GAAA6F,KAAAC,UAAAC,KAAArG,EAAA,GAAAQ,EAAA2F,KAAAC,UAAAC,KAAArG,EAAA,GAAA6C,EAAAsD,KAAAC,UAAAC,KAAArG,EAAA,GAAAiD,EAAAkD,KAAAC,UAAAC,KAAArG,EAAA,IAAAqD,EAAA8C,KAAAC,UAAAC,KAAAhG,EAAA,GAAAiD,EAAA6C,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAA0C,KAAAC,UAAAI,QAAAnD,EAAA,EAAA,EAAA,EAAA,GAAA/C,GAAA6F,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAA0C,KAAAC,UAAAI,QAAAnD,EAAA,EAAA,EAAA,EAAA,GAAA7C,GAAA2F,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAA0C,KAAAC,UAAAI,QAAAnD,EAAA,EAAA,EAAA,EAAA,GAAAR,GAAAsD,KAAAC,UAAA3C,IAAA0C,KAAAC,UAAAI,QAAAnD,EAAA,EAAA,EAAA,EAAA,GAAAJ,KAAAkD,MAAAC,UAAAG,MAAAxG,EAAA,EAAAuD,EAAA,IAAAC,GAAA4C,KAAAC,UAAAC,KAAAhG,EAAA,GAAAmD,EAAA2C,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAA0C,KAAAC,UAAAI,QAAAjD,EAAA,EAAA,EAAA,EAAA,GAAAjD,GAAA6F,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAA0C,KAAAC,UAAAI,QAAAjD,EAAA,EAAA,EAAA,EAAA,GAAA/C,GAAA2F,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAA0C,KAAAC,UAAAI,QAAAjD,EAAA,EAAA,EAAA,EAAA,GAAAV,GAAAsD,KAAAC,UAAA3C,IAAA0C,KAAAC,UAAAI,QAAAjD,EAAA,EAAA,EAAA,EAAA,GAAAN,KAAAkD,MAAAC,UAAAG,MAAAxG,EAAA,EAAAyD,EAAA,IAAA3C,GAAAsF,KAAAC,UAAAC,KAAAhG,EAAA,GAAAsE,EAAAwB,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAA0C,KAAAC,UAAAI,QAAA3F,EAAA,EAAA,EAAA,EAAA,GAAAP,GAAA6F,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAA0C,KAAAC,UAAAI,QAAA3F,EAAA,EAAA,EAAA,EAAA,GAAAL,GAAA2F,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAA0C,KAAAC,UAAAI,QAAA3F,EAAA,EAAA,EAAA,EAAA,GAAAgC,GAAAsD,KAAAC,UAAA3C,IAAA0C,KAAAC,UAAAI,QAAA3F,EAAA,EAAA,EAAA,EAAA,GAAAoC,KAAAkD,MAAAC,UAAAG,MAAAxG,EAAA,EAAA4E,EAAA,IAAAC,GAAAuB,KAAAC,UAAAC,KAAAhG,EAAA,IAAAwE,EAAAsB,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAA0C,KAAAC,UAAAI,QAAA5B,EAAA,EAAA,EAAA,EAAA,GAAAtE,GAAA6F,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAA0C,KAAAC,UAAAI,QAAA5B,EAAA,EAAA,EAAA,EAAA,GAAApE,GAAA2F,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAA0C,KAAAC,UAAAI,QAAA5B,EAAA,EAAA,EAAA,EAAA,GAAA/B,GAAAsD,KAAAC,UAAA3C,IAAA0C,KAAAC,UAAAI,QAAA5B,EAAA,EAAA,EAAA,EAAA,GAAA3B,KAAA,OAAAkD,MAAAC,UAAAG,MAAAxG,EAAA,GAAA8E,GAAA9E,GAAAS,EAAA0F,OAAA9C,SAAA,SAAArD,EAAAC,EAAAK,GAAA,GAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAArD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,GAAAa,EAAAb,EAAA,GAAA2E,EAAA3E,EAAA,GAAA4E,EAAA5E,EAAA,IAAA6E,EAAA7E,EAAA,IAAAiF,EAAAjF,EAAA,IAAAkF,EAAAlF,EAAA,IAAAmF,EAAAnF,EAAA,IAAAoF,EAAApF,EAAA,IAAAY,EAAAP,EAAA,GAAAgF,EAAAhF,EAAA,GAAAoF,EAAApF,EAAA,GAAAqF,EAAArF,EAAA,EAAA,OAAAN,GAAA,GAAAa,EAAAN,EAAA+E,EAAAhC,EAAAoC,EAAA5E,EAAA6E,EAAAT,EAAAlF,EAAA,GAAAa,EAAAJ,EAAA6E,EAAA/B,EAAAmC,EAAAd,EAAAe,EAAAR,EAAAnF,EAAA,GAAAa,EAAAiC,EAAAwC,EAAA9B,EAAAkC,EAAAb,EAAAc,EAAAP,EAAApF,EAAA,GAAAa,EAAAqC,EAAAoC,EAAA7B,EAAAiC,EAAAZ,EAAAa,EAAAN,EAAAxE,EAAAP,EAAA,GAAAgF,EAAAhF,EAAA,GAAAoF,EAAApF,EAAA,GAAAqF,EAAArF,EAAA,GAAAN,EAAA,GAAAa,EAAAN,EAAA+E,EAAAhC,EAAAoC,EAAA5E,EAAA6E,EAAAT,EAAAlF,EAAA,GAAAa,EAAAJ,EAAA6E,EAAA/B,EAAAmC,EAAAd,EAAAe,EAAAR,EAAAnF,EAAA,GAAAa,EAAAiC,EAAAwC,EAAA9B,EAAAkC,EAAAb,EAAAc,EAAAP,EAAApF,EAAA,GAAAa,EAAAqC,EAAAoC,EAAA7B,EAAAiC,EAAAZ,EAAAa,EAAAN,EAAAxE,EAAAP,EAAA,GAAAgF,EAAAhF,EAAA,GAAAoF,EAAApF,EAAA,IAAAqF,EAAArF,EAAA,IAAAN,EAAA,GAAAa,EAAAN,EAAA+E,EAAAhC,EAAAoC,EAAA5E,EAAA6E,EAAAT,EAAAlF,EAAA,GAAAa,EAAAJ,EAAA6E,EAAA/B,EAAAmC,EAAAd,EAAAe,EAAAR,EAAAnF,EAAA,IAAAa,EAAAiC,EAAAwC,EAAA9B,EAAAkC,EAAAb,EAAAc,EAAAP,EAAApF,EAAA,IAAAa,EAAAqC,EAAAoC,EAAA7B,EAAAiC,EAAAZ,EAAAa,EAAAN,EAAAxE,EAAAP,EAAA,IAAAgF,EAAAhF,EAAA,IAAAoF,EAAApF,EAAA,IAAAqF,EAAArF,EAAA,IAAAN,EAAA,IAAAa,EAAAN,EAAA+E,EAAAhC,EAAAoC,EAAA5E,EAAA6E,EAAAT,EAAAlF,EAAA,IAAAa,EAAAJ,EAAA6E,EAAA/B,EAAAmC,EAAAd,EAAAe,EAAAR,EAAAnF,EAAA,IAAAa,EAAAiC,EAAAwC,EAAA9B,EAAAkC,EAAAb,EAAAc,EAAAP,EAAApF,EAAA,IAAAa,EAAAqC,EAAAoC,EAAA7B,EAAAiC,EAAAZ,EAAAa,EAAAN,EAAArF,GAAAS,EAAA4C,SAAA9C,EAAA2B,SAAAzB,EAAA2F,KAAA/C,SAAA5C,EAAA0F,OAAA9C,SAAA5C,EAAAiD,IAAAjD,EAAA4C,SAAA5C,EAAA0F,OAAApB,UAAA,SAAA/E,EAAAC,EAAAK,GAAA,GAAAC,GAAAE,EAAAqC,EAAAI,EAAAI,EAAAC,EAAAC,EAAAC,EAAA3C,EAAA8D,EAAAC,EAAAC,EAAAI,EAAA5E,EAAA,GAAA6E,EAAA7E,EAAA,GAAA8E,EAAA9E,EAAA,EAAA,OAAAL,KAAAD,GAAAA,EAAA,IAAAC,EAAA,GAAAiF,EAAAjF,EAAA,GAAAkF,EAAAlF,EAAA,GAAAmF,EAAAnF,EAAA,IAAAD,EAAA,IAAAC,EAAA,GAAAiF,EAAAjF,EAAA,GAAAkF,EAAAlF,EAAA,GAAAmF,EAAAnF,EAAA,IAAAD,EAAA,IAAAC,EAAA,GAAAiF,EAAAjF,EAAA,GAAAkF,EAAAlF,EAAA,IAAAmF,EAAAnF,EAAA,IAAAD,EAAA,IAAAC,EAAA,GAAAiF,EAAAjF,EAAA,GAAAkF,EAAAlF,EAAA,IAAAmF,EAAAnF,EAAA,MAAAM,EAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAArD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,GAAAa,EAAAb,EAAA,GAAA2E,EAAA3E,EAAA,GAAA4E,EAAA5E,EAAA,IAAA6E,EAAA7E,EAAA,IAAAD,EAAA,GAAAO,EAAAP,EAAA,GAAAS,EAAAT,EAAA,GAAA8C,EAAA9C,EAAA,GAAAkD,EAAAlD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,GAAAyD,EAAAzD,EAAA,GAAAc,EAAAd,EAAA,GAAA4E,EAAA5E,EAAA,IAAA6E,EAAA7E,EAAA,IAAA8E,EAAA9E,EAAA,IAAAO,EAAA2E,EAAA5B,EAAA6B,EAAArE,EAAAsE,EAAAnF,EAAA,IAAAD,EAAA,IAAAS,EAAAyE,EAAA3B,EAAA4B,EAAAP,EAAAQ,EAAAnF,EAAA,IAAAD,EAAA,IAAA8C,EAAAoC,EAAA1B,EAAA2B,EAAAN,EAAAO,EAAAnF,EAAA,IAAAD,EAAA,IAAAkD,EAAAgC,EAAAzB,EAAA0B,EAAAL,EAAAM,EAAAnF,EAAA,KAAAD,GAAAS,EAAA2F,KAAArB,UAAA,SAAA/E,EAAAC,EAAAK,GAAA,GAAAC,GAAA6F,KAAAC,UAAAC,KAAArG,EAAA,GAAAQ,EAAA2F,KAAAC,UAAAC,KAAArG,EAAA,GAAA6C,EAAAsD,KAAAC,UAAAC,KAAArG,EAAA,GAAAiD,EAAAkD,KAAAC,UAAAC,KAAArG,EAAA,IAAAqD,EAAA8C,KAAAC,UAAA/F,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAA,EAAAL,KAAAD,IAAAA,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,KAAAM,EAAA6F,KAAAC,UAAA3C,IAAAnD,EAAA6F,KAAAC,UAAAI,QAAAnD,EAAA,EAAA,EAAA,EAAA,IAAA7C,EAAA2F,KAAAC,UAAA3C,IAAAjD,EAAA2F,KAAAC,UAAAI,QAAAnD,EAAA,EAAA,EAAA,EAAA,IAAAR,EAAAsD,KAAAC,UAAA3C,IAAAZ,EAAAsD,KAAAC,UAAAI,QAAAnD,EAAA,EAAA,EAAA,EAAA,GAAA,IAAAC,GAAA6C,KAAAC,UAAA/B,IAAA/D,EAAA6F,KAAAC,UAAA/B,IAAA7D,EAAA2F,KAAAC,UAAA/B,IAAAxB,EAAAI,IAAA,OAAAkD,MAAAC,UAAAG,MAAAxG,EAAA,GAAAuD,GAAAvD,GAAAS,EAAAsE,UAAAxE,EAAA2B,SAAAzB,EAAA2F,KAAArB,UAAAtE,EAAA0F,OAAApB,UAAAtE,EAAA0F,OAAArC,MAAA,SAAA9D,EAAAC,EAAAK,GAAA,GAAAC,GAAAD,EAAA,GAAAG,EAAAH,EAAA,GAAAwC,EAAAxC,EAAA,EAAA,OAAAN,GAAA,GAAAC,EAAA,GAAAM,EAAAP,EAAA,GAAAC,EAAA,GAAAM,EAAAP,EAAA,GAAAC,EAAA,GAAAM,EAAAP,EAAA,GAAAC,EAAA,GAAAM,EAAAP,EAAA,GAAAC,EAAA,GAAAQ,EAAAT,EAAA,GAAAC,EAAA,GAAAQ,EAAAT,EAAA,GAAAC,EAAA,GAAAQ,EAAAT,EAAA,GAAAC,EAAA,GAAAQ,EAAAT,EAAA,GAAAC,EAAA,GAAA6C,EAAA9C,EAAA,GAAAC,EAAA,GAAA6C,EAAA9C,EAAA,IAAAC,EAAA,IAAA6C,EAAA9C,EAAA,IAAAC,EAAA,IAAA6C,EAAA9C,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,GAAAS,EAAA2F,KAAAtC,MAAA,SAAA9D,EAAAC,EAAAK,GAAA,GAAAC,GAAAE,EAAAqC,EAAAI,EAAAkD,KAAAC,UAAA/F,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAA,EAAA,OAAAC,GAAA6F,KAAAC,UAAAC,KAAArG,EAAA,GAAAmG,KAAAC,UAAAG,MAAAxG,EAAA,EAAAoG,KAAAC,UAAA3C,IAAAnD,EAAA6F,KAAAC,UAAAI,QAAAvD,EAAA,EAAA,EAAA,EAAA,KAAAzC,EAAA2F,KAAAC,UAAAC,KAAArG,EAAA,GAAAmG,KAAAC,UAAAG,MAAAxG,EAAA,EAAAoG,KAAAC,UAAA3C,IAAAjD,EAAA2F,KAAAC,UAAAI,QAAAvD,EAAA,EAAA,EAAA,EAAA,KAAAJ,EAAAsD,KAAAC,UAAAC,KAAArG,EAAA,GAAAmG,KAAAC,UAAAG,MAAAxG,EAAA,EAAAoG,KAAAC,UAAA3C,IAAAZ,EAAAsD,KAAAC,UAAAI,QAAAvD,EAAA,EAAA,EAAA,EAAA,KAAAlD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,GAAAS,EAAAqD,MAAAvD,EAAA2B,SAAAzB,EAAA2F,KAAAtC,MAAArD,EAAA0F,OAAArC,MAAArD,EAAAkD,OAAA,SAAA3D,EAAAC,EAAAK,EAAAG,GAAA,GAAAqC,GAAAI,EAAAI,EAAAC,EAAAC,EAAAC,EAAA3C,EAAA8D,EAAAC,EAAAC,EAAAI,EAAAC,EAAAC,EAAAC,EAAAxE,EAAAyE,EAAAI,EAAAC,EAAAC,EAAA7E,EAAA8E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxF,EAAA,GAAAyF,EAAAzF,EAAA,GAAAkG,EAAAlG,EAAA,GAAAmG,EAAA9E,KAAAqC,KAAA8B,EAAAA,EAAAC,EAAAA,EAAAS,EAAAA,EAAA,OAAA7E,MAAAS,IAAAqE,GAAArG,EAAAkB,QAAA,MAAAmF,EAAA,EAAAA,EAAAX,GAAAW,EAAAV,GAAAU,EAAAD,GAAAC,EAAA9D,EAAAhB,KAAA8B,IAAAtD,GAAA4C,EAAApB,KAAA+B,IAAAvD,GAAAgD,EAAA,EAAAJ,EAAAK,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,GAAAa,EAAAb,EAAA,GAAA2E,EAAA3E,EAAA,GAAA4E,EAAA5E,EAAA,GAAA6E,EAAA7E,EAAA,GAAAiF,EAAAjF,EAAA,GAAAkF,EAAAlF,EAAA,GAAAmF,EAAAnF,EAAA,GAAAoF,EAAApF,EAAA,IAAAY,EAAAZ,EAAA,IAAAqF,EAAAW,EAAAA,EAAA3C,EAAAJ,EAAAwC,EAAAQ,EAAAD,EAAA3C,EAAAqD,EAAA7D,EAAA6C,EAAAgB,EAAAV,EAAA3C,EAAA4C,EAAApD,EAAA8C,EAAAK,EAAAC,EAAA5C,EAAAqD,EAAA7D,EAAA/B,EAAAmF,EAAAA,EAAA5C,EAAAJ,EAAA2C,EAAAc,EAAAT,EAAA5C,EAAA2C,EAAAnD,EAAAgD,EAAAG,EAAAU,EAAArD,EAAA4C,EAAApD,EAAAiD,EAAAG,EAAAS,EAAArD,EAAA2C,EAAAnD,EAAAkD,EAAAW,EAAAA,EAAArD,EAAAJ,EAAAlD,EAAA,GAAAuD,EAAA+B,EAAAV,EAAAc,EAAAP,EAAAQ,EAAA3F,EAAA,GAAAwD,EAAA8B,EAAAT,EAAAa,EAAAN,EAAAO,EAAA3F,EAAA,GAAAyD,EAAA6B,EAAAR,EAAAY,EAAAL,EAAAM,EAAA3F,EAAA,GAAAc,EAAAwE,EAAAJ,EAAAQ,EAAA7E,EAAA8E,EAAA3F,EAAA,GAAAuD,EAAAqC,EAAAhB,EAAA7D,EAAAoE,EAAAU,EAAA7F,EAAA,GAAAwD,EAAAoC,EAAAf,EAAA9D,EAAAqE,EAAAS,EAAA7F,EAAA,GAAAyD,EAAAmC,EAAAd,EAAA/D,EAAAsE,EAAAQ,EAAA7F,EAAA,GAAAc,EAAA8E,EAAAV,EAAAnE,EAAAF,EAAAgF,EAAA7F,EAAA,GAAAuD,EAAAuC,EAAAlB,EAAAmB,EAAAZ,EAAAa,EAAAhG,EAAA,GAAAwD,EAAAsC,EAAAjB,EAAAkB,EAAAX,EAAAY,EAAAhG,EAAA,IAAAyD,EAAAqC,EAAAhB,EAAAiB,EAAAV,EAAAW,EAAAhG,EAAA,IAAAc,EAAAgF,EAAAZ,EAAAa,EAAAlF,EAAAmF,EAAA/F,IAAAD,IAAAA,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,KAAAD,IAAAS,EAAA0F,OAAAU,QAAA,SAAA7G,EAAAC,EAAAK,GAAA,GAAAC,GAAAuB,KAAA8B,IAAAtD,GAAAG,EAAAqB,KAAA+B,IAAAvD,GAAAwC,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAArD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,GAAAa,EAAAb,EAAA,IAAA2E,EAAA3E,EAAA,GAAA,OAAAA,KAAAD,IAAAA,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,KAAAD,EAAA,GAAA8C,EAAArC,EAAA+C,EAAAjD,EAAAP,EAAA,GAAAkD,EAAAzC,EAAAgD,EAAAlD,EAAAP,EAAA,GAAAsD,EAAA7C,EAAAK,EAAAP,EAAAP,EAAA,GAAAuD,EAAA9C,EAAAmE,EAAArE,EAAAP,EAAA,GAAAwD,EAAA/C,EAAAqC,EAAAvC,EAAAP,EAAA,GAAAyD,EAAAhD,EAAAyC,EAAA3C,EAAAP,EAAA,IAAAc,EAAAL,EAAA6C,EAAA/C,EAAAP,EAAA,IAAA4E,EAAAnE,EAAA8C,EAAAhD,EAAAP,GAAAS,EAAA2F,KAAAS,QAAA,SAAA7G,EAAAC,EAAAK,GAAA,GAAAC,GAAA6F,KAAAC,UAAAS,MAAAhF,KAAA8B,IAAAtD,IAAAG,EAAA2F,KAAAC,UAAAS,MAAAhF,KAAA+B,IAAAvD,GAAAL,KAAAD,IAAAA,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAA,IAAA6C,GAAAsD,KAAAC,UAAAC,KAAArG,EAAA,GAAAiD,EAAAkD,KAAAC,UAAAC,KAAArG,EAAA,EAAA,OAAAmG,MAAAC,UAAAG,MAAAxG,EAAA,EAAAoG,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAAZ,EAAArC,GAAA2F,KAAAC,UAAA3C,IAAAR,EAAA3C,KAAA6F,KAAAC,UAAAG,MAAAxG,EAAA,EAAAoG,KAAAC,UAAA7B,IAAA4B,KAAAC,UAAA3C,IAAAR,EAAAzC,GAAA2F,KAAAC,UAAA3C,IAAAZ,EAAAvC,KAAAP,GAAAS,EAAAoG,QAAAtG,EAAA2B,SAAAzB,EAAA2F,KAAAS,QAAApG,EAAA0F,OAAAU,QAAApG,EAAA0F,OAAAY,QAAA,SAAA/G,EAAAC,EAAAK,GAAA,GAAAC,GAAAuB,KAAA8B,IAAAtD,GAAAG,EAAAqB,KAAA+B,IAAAvD,GAAAwC,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAArD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,GAAAa,EAAAb,EAAA,IAAA2E,EAAA3E,EAAA,GAAA,OAAAA,KAAAD,IAAAA,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,KAAAD,EAAA,GAAA8C,EAAArC,EAAA+C,EAAAjD,EAAAP,EAAA,GAAAkD,EAAAzC,EAAAgD,EAAAlD,EAAAP,EAAA,GAAAsD,EAAA7C,EAAAK,EAAAP,EAAAP,EAAA,GAAAuD,EAAA9C,EAAAmE,EAAArE,EAAAP,EAAA,GAAA8C,EAAAvC,EAAAiD,EAAA/C,EAAAT,EAAA,GAAAkD,EAAA3C,EAAAkD,EAAAhD,EAAAT,EAAA,IAAAsD,EAAA/C,EAAAO,EAAAL,EAAAT,EAAA,IAAAuD,EAAAhD,EAAAqE,EAAAnE,EAAAT,GAAAS,EAAA2F,KAAAW,QAAA,SAAA/G,EAAAC,EAAAK,GAAA,GAAAC,GAAA6F,KAAAC,UAAAS,MAAAhF,KAAA8B,IAAAtD,IAAAG,EAAA2F,KAAAC,UAAAS,MAAAhF,KAAA+B,IAAAvD,GAAAL,KAAAD,IAAAA,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAA,IAAA6C,GAAAsD,KAAAC,UAAAC,KAAArG,EAAA,GAAAiD,EAAAkD,KAAAC,UAAAC,KAAArG,EAAA,EAAA,OAAAmG,MAAAC,UAAAG,MAAAxG,EAAA,EAAAoG,KAAAC,UAAA7B,IAAA4B,KAAAC,UAAA3C,IAAAZ,EAAArC,GAAA2F,KAAAC,UAAA3C,IAAAR,EAAA3C,KAAA6F,KAAAC,UAAAG,MAAAxG,EAAA,EAAAoG,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAAZ,EAAAvC,GAAA6F,KAAAC,UAAA3C,IAAAR,EAAAzC,KAAAT,GAAAS,EAAAsG,QAAAxG,EAAA2B,SAAAzB,EAAA2F,KAAAW,QAAAtG,EAAA0F,OAAAY,QAAAtG,EAAA0F,OAAAa,QAAA,SAAAhH,EAAAC,EAAAK,GAAA,GAAAC,GAAAuB,KAAA8B,IAAAtD,GAAAG,EAAAqB,KAAA+B,IAAAvD,GAAAwC,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAArD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,GAAAa,EAAAb,EAAA,GAAA2E,EAAA3E,EAAA,EAAA,OAAAA,KAAAD,IAAAA,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,KAAAD,EAAA,GAAA8C,EAAArC,EAAA+C,EAAAjD,EAAAP,EAAA,GAAAkD,EAAAzC,EAAAgD,EAAAlD,EAAAP,EAAA,GAAAsD,EAAA7C,EAAAK,EAAAP,EAAAP,EAAA,GAAAuD,EAAA9C,EAAAmE,EAAArE,EAAAP,EAAA,GAAAwD,EAAA/C,EAAAqC,EAAAvC,EAAAP,EAAA,GAAAyD,EAAAhD,EAAAyC,EAAA3C,EAAAP,EAAA,GAAAc,EAAAL,EAAA6C,EAAA/C,EAAAP,EAAA,GAAA4E,EAAAnE,EAAA8C,EAAAhD,EAAAP,GAAAS,EAAA2F,KAAAY,QAAA,SAAAhH,EAAAC,EAAAK,GAAA,GAAAC,GAAA6F,KAAAC,UAAAS,MAAAhF,KAAA8B,IAAAtD,IAAAG,EAAA2F,KAAAC,UAAAS,MAAAhF,KAAA+B,IAAAvD,GAAAL,KAAAD,IAAAA,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAA,IAAA6C,GAAAsD,KAAAC,UAAAC,KAAArG,EAAA,GAAAiD,EAAAkD,KAAAC,UAAAC,KAAArG,EAAA,EAAA,OAAAmG,MAAAC,UAAAG,MAAAxG,EAAA,EAAAoG,KAAAC,UAAA/B,IAAA8B,KAAAC,UAAA3C,IAAAZ,EAAArC,GAAA2F,KAAAC,UAAA3C,IAAAR,EAAA3C,KAAA6F,KAAAC,UAAAG,MAAAxG,EAAA,EAAAoG,KAAAC,UAAA7B,IAAA4B,KAAAC,UAAA3C,IAAAR,EAAAzC,GAAA2F,KAAAC,UAAA3C,IAAAZ,EAAAvC,KAAAP,GAAAS,EAAAuG,QAAAzG,EAAA2B,SAAAzB,EAAA2F,KAAAY,QAAAvG,EAAA0F,OAAAa,QAAAvG,EAAAuE,gBAAA,SAAAhF,EAAAC,GAAA,MAAAD,GAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAA;AAAAA,GAAAS,EAAAuD,YAAA,SAAAhE,EAAAC,GAAA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,GAAAS,EAAAsD,aAAA,SAAA/D,EAAAC,EAAAK,GAAA,GAAAG,GAAAqC,EAAAI,EAAAI,EAAAhD,EAAA,GAAAiD,EAAAjD,EAAA,GAAAkD,EAAAlD,EAAA,GAAAmD,EAAA3B,KAAAqC,KAAAb,EAAAA,EAAAC,EAAAA,EAAAC,EAAAA,EAAA,OAAA1B,MAAAS,IAAAkB,GAAAlD,EAAAkB,QAAA,MAAAgC,EAAA,EAAAA,EAAAH,GAAAG,EAAAF,GAAAE,EAAAD,GAAAC,EAAAhD,EAAAqB,KAAA8B,IAAA3D,GAAA6C,EAAAhB,KAAA+B,IAAA5D,GAAAiD,EAAA,EAAAJ,EAAA9C,EAAA,GAAAsD,EAAAA,EAAAJ,EAAAJ,EAAA9C,EAAA,GAAAuD,EAAAD,EAAAJ,EAAAM,EAAA/C,EAAAT,EAAA,GAAAwD,EAAAF,EAAAJ,EAAAK,EAAA9C,EAAAT,EAAA,GAAA,EAAAA,EAAA,GAAAsD,EAAAC,EAAAL,EAAAM,EAAA/C,EAAAT,EAAA,GAAAuD,EAAAA,EAAAL,EAAAJ,EAAA9C,EAAA,GAAAwD,EAAAD,EAAAL,EAAAI,EAAA7C,EAAAT,EAAA,GAAA,EAAAA,EAAA,GAAAsD,EAAAE,EAAAN,EAAAK,EAAA9C,EAAAT,EAAA,GAAAuD,EAAAC,EAAAN,EAAAI,EAAA7C,EAAAT,EAAA,IAAAwD,EAAAA,EAAAN,EAAAJ,EAAA9C,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,IAAAS,EAAAwG,cAAA,SAAAjH,EAAAC,GAAA,GAAAK,GAAAwB,KAAA8B,IAAA3D,GAAAM,EAAAuB,KAAA+B,IAAA5D,EAAA,OAAAD,GAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAAO,EAAAP,EAAA,GAAAM,EAAAN,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,IAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,GAAAS,EAAAyG,cAAA,SAAAlH,EAAAC,GAAA,GAAAK,GAAAwB,KAAA8B,IAAA3D,GAAAM,EAAAuB,KAAA+B,IAAA5D,EAAA,OAAAD,GAAA,GAAAO,EAAAP,EAAA,GAAA,EAAAA,EAAA,IAAAM,EAAAN,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAAM,EAAAN,EAAA,GAAA,EAAAA,EAAA,IAAAO,EAAAP,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,GAAAS,EAAA0G,cAAA,SAAAnH,EAAAC,GAAA,GAAAK,GAAAwB,KAAA8B,IAAA3D,GAAAM,EAAAuB,KAAA+B,IAAA5D,EAAA,OAAAD,GAAA,GAAAO,EAAAP,EAAA,GAAAM,EAAAN,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,IAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,GAAAS,EAAA2G,wBAAA,SAAApH,EAAAC,EAAAK,GAAA,GAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAA/C,EAAAA,EAAAgD,EAAA9C,EAAAA,EAAA+C,EAAAV,EAAAA,EAAAW,EAAAlD,EAAA+C,EAAAxC,EAAAP,EAAAgD,EAAAqB,EAAArE,EAAAiD,EAAAqB,EAAApE,EAAA8C,EAAAuB,EAAArE,EAAA+C,EAAA0B,EAAApC,EAAAU,EAAA2B,EAAAjC,EAAAI,EAAA8B,EAAAlC,EAAAK,EAAA8B,EAAAnC,EAAAM,CAAA,OAAAxD,GAAA,GAAA,GAAA6E,EAAAK,GAAAlF,EAAA,GAAAc,EAAAuE,EAAArF,EAAA,GAAA4E,EAAAQ,EAAApF,EAAA,GAAA,EAAAA,EAAA,GAAAc,EAAAuE,EAAArF,EAAA,GAAA,GAAAyD,EAAAyB,GAAAlF,EAAA,GAAA8E,EAAAK,EAAAnF,EAAA,GAAA,EAAAA,EAAA,GAAA4E,EAAAQ,EAAApF,EAAA,GAAA8E,EAAAK,EAAAnF,EAAA,IAAA,GAAAyD,EAAAoB,GAAA7E,EAAA,IAAA,EAAAA,EAAA,IAAAM,EAAA,GAAAN,EAAA,IAAAM,EAAA,GAAAN,EAAA,IAAAM,EAAA,GAAAN,EAAA,IAAA,EAAAA,GAAAS,EAAA4G,eAAA,SAAArH,EAAAC,GAAA,MAAAD,GAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,IAAAD,GAAAS,EAAA6G,YAAA,SAAAtH,EAAAC,GAAA,GAAAK,GAAAL,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAM,EAAA,CAAA,OAAAD,GAAA,GAAAC,EAAA,EAAAuB,KAAAqC,KAAA7D,EAAA,GAAAN,EAAA,GAAA,IAAAO,EAAAP,EAAA,IAAAC,EAAA,GAAAA,EAAA,IAAAM,EAAAP,EAAA,IAAAC,EAAA,GAAAA,EAAA,IAAAM,EAAAP,EAAA,IAAAC,EAAA,GAAAA,EAAA,IAAAM,GAAAN,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAAAM,EAAA,EAAAuB,KAAAqC,KAAA,EAAAlE,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAAAD,EAAA,IAAAC,EAAA,GAAAA,EAAA,IAAAM,EAAAP,EAAA,GAAA,IAAAO,EAAAP,EAAA,IAAAC,EAAA,GAAAA,EAAA,IAAAM,EAAAP,EAAA,IAAAC,EAAA,GAAAA,EAAA,IAAAM,GAAAN,EAAA,GAAAA,EAAA,KAAAM,EAAA,EAAAuB,KAAAqC,KAAA,EAAAlE,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAAAD,EAAA,IAAAC,EAAA,GAAAA,EAAA,IAAAM,EAAAP,EAAA,IAAAC,EAAA,GAAAA,EAAA,IAAAM,EAAAP,EAAA,GAAA,IAAAO,EAAAP,EAAA,IAAAC,EAAA,GAAAA,EAAA,IAAAM,IAAAA,EAAA,EAAAuB,KAAAqC,KAAA,EAAAlE,EAAA,IAAAA,EAAA,GAAAA,EAAA,IAAAD,EAAA,IAAAC,EAAA,GAAAA,EAAA,IAAAM,EAAAP,EAAA,IAAAC,EAAA,GAAAA,EAAA,IAAAM,EAAAP,EAAA,IAAAC,EAAA,GAAAA,EAAA,IAAAM,EAAAP,EAAA,GAAA,IAAAO,GAAAP,GAAAS,EAAA8G,6BAAA,SAAAvH,EAAAC,EAAAK,EAAAC,GAAA,GAAAE,GAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAArD,EAAA,GAAAsD,EAAA9C,EAAAA,EAAA+C,EAAAV,EAAAA,EAAAW,EAAAP,EAAAA,EAAApC,EAAAL,EAAA8C,EAAAqB,EAAAnE,EAAA+C,EAAAqB,EAAApE,EAAAgD,EAAAqB,EAAAhC,EAAAU,EAAA0B,EAAApC,EAAAW,EAAA0B,EAAAjC,EAAAO,EAAA2B,EAAA9B,EAAAC,EAAA8B,EAAA/B,EAAAE,EAAA3C,EAAAyC,EAAAG,EAAA6B,EAAA/E,EAAA,GAAAmF,EAAAnF,EAAA,GAAAoF,EAAApF,EAAA,EAAA,OAAAP,GAAA,IAAA,GAAA8E,EAAAK,IAAAG,EAAAtF,EAAA,IAAA4E,EAAA/D,GAAAyE,EAAAtF,EAAA,IAAA6E,EAAAQ,GAAAC,EAAAtF,EAAA,GAAA,EAAAA,EAAA,IAAA4E,EAAA/D,GAAA6E,EAAA1F,EAAA,IAAA,GAAAc,EAAAqE,IAAAO,EAAA1F,EAAA,IAAAkF,EAAAE,GAAAM,EAAA1F,EAAA,GAAA,EAAAA,EAAA,IAAA6E,EAAAQ,GAAAM,EAAA3F,EAAA,IAAAkF,EAAAE,GAAAO,EAAA3F,EAAA,KAAA,GAAAc,EAAAgE,IAAAa,EAAA3F,EAAA,IAAA,EAAAA,EAAA,IAAAM,EAAA,GAAAN,EAAA,IAAAM,EAAA,GAAAN,EAAA,IAAAM,EAAA,GAAAN,EAAA,IAAA,EAAAA,GAAAS,EAAA+G,mCAAA,SAAAxH,EAAAC,EAAAK,EAAAC,EAAAE,GACA,GAAAqC,GAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAArD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAV,EAAAA,EAAAW,EAAAP,EAAAA,EAAApC,EAAAwC,EAAAA,EAAAsB,EAAA9B,EAAAU,EAAAqB,EAAA/B,EAAAW,EAAAqB,EAAAhC,EAAAhC,EAAAoE,EAAAhC,EAAAO,EAAA0B,EAAAjC,EAAApC,EAAAsE,EAAA9B,EAAAxC,EAAAuE,EAAA9B,EAAAC,EAAA3C,EAAA0C,EAAAE,EAAA6B,EAAA/B,EAAAzC,EAAA4E,EAAAnF,EAAA,GAAAoF,EAAApF,EAAA,GAAAqF,EAAArF,EAAA,GAAAQ,EAAAN,EAAA,GAAAoF,EAAApF,EAAA,GAAAqF,EAAArF,EAAA,EAAA,OAAAT,GAAA,IAAA,GAAAkF,EAAAE,IAAAM,EAAA1F,EAAA,IAAA6E,EAAAS,GAAAI,EAAA1F,EAAA,IAAA8E,EAAAjE,GAAA6E,EAAA1F,EAAA,GAAA,EAAAA,EAAA,IAAA6E,EAAAS,GAAAK,EAAA3F,EAAA,IAAA,GAAA4E,EAAAQ,IAAAO,EAAA3F,EAAA,IAAAmF,EAAAE,GAAAM,EAAA3F,EAAA,GAAA,EAAAA,EAAA,IAAA8E,EAAAjE,GAAA+E,EAAA5F,EAAA,IAAAmF,EAAAE,GAAAO,EAAA5F,EAAA,KAAA,GAAA4E,EAAAM,IAAAU,EAAA5F,EAAA,IAAA,EAAAA,EAAA,IAAAM,EAAA,GAAAS,GAAAf,EAAA,GAAAe,EAAAf,EAAA,GAAA6F,EAAA7F,EAAA,GAAA8F,GAAA9F,EAAA,IAAAM,EAAA,GAAAuF,GAAA7F,EAAA,GAAAe,EAAAf,EAAA,GAAA6F,EAAA7F,EAAA,GAAA8F,GAAA9F,EAAA,IAAAM,EAAA,GAAAwF,GAAA9F,EAAA,GAAAe,EAAAf,EAAA,GAAA6F,EAAA7F,EAAA,IAAA8F,GAAA9F,EAAA,IAAA,EAAAA,GAAAS,EAAA+E,SAAA,SAAAxF,EAAAC,GAAA,GAAAK,GAAAL,EAAA,GAAAM,EAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAA5C,EAAAA,EAAAgD,EAAA/C,EAAAA,EAAAgD,EAAA9C,EAAAA,EAAA+C,EAAAlD,EAAA4C,EAAAO,EAAAlD,EAAA2C,EAAApC,EAAAP,EAAA+C,EAAAsB,EAAAnE,EAAAyC,EAAA2B,EAAApE,EAAA6C,EAAAwB,EAAArE,EAAA8C,EAAA2B,EAAApC,EAAAI,EAAAiC,EAAArC,EAAAQ,EAAA8B,EAAAtC,EAAAS,CAAA,OAAAvD,GAAA,GAAA,EAAAc,EAAAgE,EAAA9E,EAAA,GAAAyD,EAAA2B,EAAApF,EAAA,GAAA4E,EAAAO,EAAAnF,EAAA,GAAA,EAAAA,EAAA,GAAAyD,EAAA2B,EAAApF,EAAA,GAAA,EAAAwD,EAAAsB,EAAA9E,EAAA,GAAA6E,EAAAK,EAAAlF,EAAA,GAAA,EAAAA,EAAA,GAAA4E,EAAAO,EAAAnF,EAAA,GAAA6E,EAAAK,EAAAlF,EAAA,IAAA,EAAAwD,EAAA1C,EAAAd,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,GAAAS,EAAAgH,QAAA,SAAAzH,EAAAC,EAAAK,EAAAC,EAAAE,EAAAqC,EAAAI,GAAA,GAAAI,GAAA,GAAAhD,EAAAL,GAAAsD,EAAA,GAAA9C,EAAAF,GAAAiD,EAAA,GAAAV,EAAAI,EAAA,OAAAlD,GAAA,GAAA,EAAA8C,EAAAQ,EAAAtD,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAA8C,EAAAS,EAAAvD,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,IAAAM,EAAAL,GAAAqD,EAAAtD,EAAA,IAAAS,EAAAF,GAAAgD,EAAAvD,EAAA,KAAAkD,EAAAJ,GAAAU,EAAAxD,EAAA,OAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAAkD,EAAAJ,EAAA,EAAAU,EAAAxD,EAAA,IAAA,EAAAA,GAAAS,EAAAiH,YAAA,SAAA1H,EAAAC,EAAAK,EAAAC,EAAAE,GAAA,GAAAqC,GAAA,EAAAhB,KAAA6F,IAAA1H,EAAA,GAAAiD,EAAA,GAAA3C,EAAAE,EAAA,OAAAT,GAAA,GAAA8C,EAAAxC,EAAAN,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA8C,EAAA9C,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,KAAAS,EAAAF,GAAA2C,EAAAlD,EAAA,OAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAS,EAAAF,EAAA2C,EAAAlD,EAAA,IAAA,EAAAA,GAAAS,EAAAmH,2BAAA,SAAA5H,EAAAC,EAAAK,EAAAC,GAAA,GAAAE,GAAAqB,KAAA6F,IAAA1H,EAAA4H,UAAA/F,KAAAM,GAAA,KAAAU,EAAAhB,KAAA6F,IAAA1H,EAAA6H,YAAAhG,KAAAM,GAAA,KAAAc,EAAApB,KAAA6F,IAAA1H,EAAA8H,YAAAjG,KAAAM,GAAA,KAAAkB,EAAAxB,KAAA6F,IAAA1H,EAAA+H,aAAAlG,KAAAM,GAAA,KAAAmB,EAAA,GAAAL,EAAAI,GAAAE,EAAA,GAAA/C,EAAAqC,EAAA,OAAA9C,GAAA,GAAAuD,EAAAvD,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAAwD,EAAAxD,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,MAAAkD,EAAAI,GAAAC,EAAA,IAAAvD,EAAA,IAAAS,EAAAqC,GAAAU,EAAA,GAAAxD,EAAA,IAAAO,GAAAD,EAAAC,GAAAP,EAAA,OAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAAO,EAAAD,GAAAA,EAAAC,GAAAP,EAAA,IAAA,EAAAA,GAAAS,EAAAwH,MAAA,SAAAjI,EAAAC,EAAAK,EAAAC,EAAAE,EAAAqC,EAAAI,GAAA,GAAAI,GAAA,GAAArD,EAAAK,GAAAiD,EAAA,GAAAhD,EAAAE,GAAA+C,EAAA,GAAAV,EAAAI,EAAA,OAAAlD,GAAA,MAAAsD,EAAAtD,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,MAAAuD,EAAAvD,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,IAAA,EAAAwD,EAAAxD,EAAA,IAAA,EAAAA,EAAA,KAAAC,EAAAK,GAAAgD,EAAAtD,EAAA,KAAAS,EAAAF,GAAAgD,EAAAvD,EAAA,KAAAkD,EAAAJ,GAAAU,EAAAxD,EAAA,IAAA,EAAAA,GAAAS,EAAAyH,OAAA,SAAAlI,EAAAC,EAAAK,EAAAwC,GAAA,GAAAI,GAAAI,EAAAC,EAAAC,EAAAC,EAAA3C,EAAA8D,EAAAC,EAAAC,EAAAI,EAAAC,EAAAlF,EAAA,GAAAmF,EAAAnF,EAAA,GAAAoF,EAAApF,EAAA,GAAAY,EAAAiC,EAAA,GAAAwC,EAAAxC,EAAA,GAAA4C,EAAA5C,EAAA,GAAA6C,EAAArF,EAAA,GAAAsF,EAAAtF,EAAA,GAAAS,EAAAT,EAAA,EAAA,OAAAwB,MAAAS,IAAA4C,EAAAQ,GAAApF,EAAAkB,SAAAK,KAAAS,IAAA6C,EAAAQ,GAAArF,EAAAkB,SAAAK,KAAAS,IAAA8C,EAAAtE,GAAAR,EAAAkB,QAAAhB,EAAAmC,SAAA5C,IAAA4E,EAAAO,EAAAQ,EAAAd,EAAAO,EAAAQ,EAAAd,EAAAO,EAAAtE,EAAAmE,EAAA,EAAApD,KAAAqC,KAAAS,EAAAA,EAAAC,EAAAA,EAAAC,EAAAA,GAAAF,GAAAM,EAAAL,GAAAK,EAAAJ,GAAAI,EAAAhC,EAAAoC,EAAAR,EAAAY,EAAAb,EAAAvB,EAAAoC,EAAAd,EAAA/D,EAAAiE,EAAAvB,EAAA1C,EAAAgE,EAAAS,EAAAV,EAAAM,EAAApD,KAAAqC,KAAAjB,EAAAA,EAAAI,EAAAA,EAAAC,EAAAA,GAAA2B,GAAAA,EAAA,EAAAA,EAAAhC,GAAAgC,EAAA5B,GAAA4B,EAAA3B,GAAA2B,IAAAhC,EAAA,EAAAI,EAAA,EAAAC,EAAA,GAAAC,EAAAqB,EAAAtB,EAAAuB,EAAAxB,EAAAG,EAAAqB,EAAA5B,EAAA0B,EAAArB,EAAAzC,EAAA8D,EAAAtB,EAAAuB,EAAA3B,EAAAgC,EAAApD,KAAAqC,KAAAX,EAAAA,EAAAC,EAAAA,EAAA3C,EAAAA,GAAAoE,GAAAA,EAAA,EAAAA,EAAA1B,GAAA0B,EAAAzB,GAAAyB,EAAApE,GAAAoE,IAAA1B,EAAA,EAAAC,EAAA,EAAA3C,EAAA,GAAAd,EAAA,GAAAkD,EAAAlD,EAAA,GAAAwD,EAAAxD,EAAA,GAAA4E,EAAA5E,EAAA,GAAA,EAAAA,EAAA,GAAAsD,EAAAtD,EAAA,GAAAyD,EAAAzD,EAAA,GAAA6E,EAAA7E,EAAA,GAAA,EAAAA,EAAA,GAAAuD,EAAAvD,EAAA,GAAAc,EAAAd,EAAA,IAAA8E,EAAA9E,EAAA,IAAA,EAAAA,EAAA,MAAAkD,EAAAiC,EAAA7B,EAAA8B,EAAA7B,EAAA8B,GAAArF,EAAA,MAAAwD,EAAA2B,EAAA1B,EAAA2B,EAAAtE,EAAAuE,GAAArF,EAAA,MAAA4E,EAAAO,EAAAN,EAAAO,EAAAN,EAAAO,GAAArF,EAAA,IAAA,EAAAA,IAAAS,EAAAwD,IAAA,SAAAjE,GAAA,MAAA,QAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,IAAA,KAAAA,EAAA,IAAA,KAAAA,EAAA,IAAA,KAAAA,EAAA,IAAA,KAAAA,EAAA,IAAA,KAAAA,EAAA,IAAA,KAAAS,EAAAyD,KAAA,SAAAlE,GAAA,MAAA8B,MAAAqC,KAAArC,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,GAAA,GAAA8B,KAAAsC,IAAApE,EAAA,IAAA,GAAA8B,KAAAsC,IAAApE,EAAA,IAAA,GAAA8B,KAAAsC,IAAApE,EAAA,IAAA,GAAA8B,KAAAsC,IAAApE,EAAA,IAAA,GAAA8B,KAAAsC,IAAApE,EAAA,IAAA,GAAA8B,KAAAsC,IAAApE,EAAA,IAAA,KAAAS,EAAA6D,IAAA,SAAAtE,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,IAAAC,EAAA,IAAAK,EAAA,IAAAN,EAAA,IAAAC,EAAA,IAAAK,EAAA,IAAAN,EAAA,IAAAC,EAAA,IAAAK,EAAA,IAAAN,EAAA,IAAAC,EAAA,IAAAK,EAAA,IAAAN,EAAA,IAAAC,EAAA,IAAAK,EAAA,IAAAN,EAAA,IAAAC,EAAA,IAAAK,EAAA,IAAAN,GAAAS,EAAA8D,SAAA,SAAAvE,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,IAAAC,EAAA,IAAAK,EAAA,IAAAN,EAAA,IAAAC,EAAA,IAAAK,EAAA,IAAAN,EAAA,IAAAC,EAAA,IAAAK,EAAA,IAAAN,EAAA,IAAAC,EAAA,IAAAK,EAAA,IAAAN,EAAA,IAAAC,EAAA,IAAAK,EAAA,IAAAN,EAAA,IAAAC,EAAA,IAAAK,EAAA,IAAAN,GAAAS,EAAA+D,IAAA/D,EAAA8D,SAAA9D,EAAAiE,eAAA,SAAA1E,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,IAAAC,EAAA,IAAAK,EAAAN,EAAA,IAAAC,EAAA,IAAAK,EAAAN,EAAA,IAAAC,EAAA,IAAAK,EAAAN,EAAA,IAAAC,EAAA,IAAAK,EAAAN,EAAA,IAAAC,EAAA,IAAAK,EAAAN,EAAA,IAAAC,EAAA,IAAAK,EAAAN,GAAAS,EAAAkE,qBAAA,SAAA3E,EAAAC,EAAAK,EAAAC,GAAA,MAAAP,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,IAAAC,EAAA,IAAAK,EAAA,IAAAC,EAAAP,EAAA,IAAAC,EAAA,IAAAK,EAAA,IAAAC,EAAAP,EAAA,IAAAC,EAAA,IAAAK,EAAA,IAAAC,EAAAP,EAAA,IAAAC,EAAA,IAAAK,EAAA,IAAAC,EAAAP,EAAA,IAAAC,EAAA,IAAAK,EAAA,IAAAC,EAAAP,EAAA,IAAAC,EAAA,IAAAK,EAAA,IAAAC,EAAAP,GAAAS,EAAAgE,YAAA,SAAAzE,EAAAC,GAAA,MAAAD,GAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,MAAAC,EAAA,KAAAD,EAAA,MAAAC,EAAA,KAAAD,EAAA,MAAAC,EAAA,KAAAD,EAAA,MAAAC,EAAA,KAAAD,EAAA,MAAAC,EAAA,KAAAD,EAAA,MAAAC,EAAA,KAAAQ,EAAA6B,OAAA,SAAAtC,EAAAC,GAAA,GAAAK,GAAAN,EAAA,GAAAS,EAAAT,EAAA,GAAA8C,EAAA9C,EAAA,GAAAkD,EAAAlD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,GAAAyD,EAAAzD,EAAA,GAAAc,EAAAd,EAAA,GAAA4E,EAAA5E,EAAA,GAAA6E,EAAA7E,EAAA,IAAA8E,EAAA9E,EAAA,IAAAkF,EAAAlF,EAAA,IAAAmF,EAAAnF,EAAA,IAAAoF,EAAApF,EAAA,IAAAqF,EAAArF,EAAA,IAAAa,EAAAZ,EAAA,GAAAqF,EAAArF,EAAA,GAAAyF,EAAAzF,EAAA,GAAA0F,EAAA1F,EAAA,GAAA2F,EAAA3F,EAAA,GAAAc,EAAAd,EAAA,GAAA4F,EAAA5F,EAAA,GAAA6F,EAAA7F,EAAA,GAAA8F,EAAA9F,EAAA,GAAA+F,EAAA/F,EAAA,GAAAgG,EAAAhG,EAAA,IAAAiG,EAAAjG,EAAA,IAAA0G,EAAA1G,EAAA,IAAA2G,EAAA3G,EAAA,IAAAkI,EAAAlI,EAAA,IAAAmI,EAAAnI,EAAA,GAAA,OAAA6B,MAAAS,IAAAjC,EAAAO,IAAAN,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAjC,GAAAwB,KAAAS,IAAA1B,KAAAiB,KAAAS,IAAA9B,EAAA6E,IAAA/E,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAA9B,GAAAqB,KAAAS,IAAA+C,KAAAxD,KAAAS,IAAAO,EAAA4C,IAAAnF,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAO,GAAAhB,KAAAS,IAAAmD,KAAA5D,KAAAS,IAAAW,EAAAyC,IAAApF,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAW,GAAApB,KAAAS,IAAAoD,KAAA7D,KAAAS,IAAAe,EAAAsC,IAAArF,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAe,GAAAxB,KAAAS,IAAAqD,KAAA9D,KAAAS,IAAAgB,EAAAxC,IAAAR,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAgB,GAAAzB,KAAAS,IAAAxB,KAAAe,KAAAS,IAAAiB,EAAAqC,IAAAtF,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAiB,GAAA1B,KAAAS,IAAAsD,KAAA/D,KAAAS,IAAAkB,EAAAqC,IAAAvF,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAkB,GAAA3B,KAAAS,IAAAuD,KAAAhE,KAAAS,IAAAzB,EAAAiF,IAAAxF,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAzB,GAAAgB,KAAAS,IAAAwD,KAAAjE,KAAAS,IAAAqC,EAAAoB,IAAAzF,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAqC,GAAA9C,KAAAS,IAAAyD,KAAAlE,KAAAS,IAAAsC,EAAAoB,IAAA1F,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAsC,GAAA/C,KAAAS,IAAA0D,KAAAnE,KAAAS,IAAAuC,EAAAoB,IAAA3F,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAuC,GAAAhD,KAAAS,IAAA2D,KAAApE,KAAAS,IAAA2C,EAAAyB,IAAApG,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAA2C,GAAApD,KAAAS,IAAAoE,KAAA7E,KAAAS,IAAA4C,EAAAyB,IAAArG,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAA4C,GAAArD,KAAAS,IAAAqE,KAAA9E,KAAAS,IAAA6C,EAAA+C,IAAA5H,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAA6C,GAAAtD,KAAAS,IAAA4F,KAAArG,KAAAS,IAAA8C,EAAA+C,IAAA7H,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAA8C,GAAAvD,KAAAS,IAAA6F,KAAApI,EAAAE,QAAAO,GAAA,SAAAT,EAAAC,EAAAK,GAAA,GAAAC,GAAAD,EAAA,GAAAG,EAAAH,EAAA,GAAAwC,EAAAxC,EAAA,GAAA4C,EAAA5C,EAAA,GAAAgD,IAAAA,GAAAb,OAAA,WAAA,GAAAzC,GAAA,GAAAO,GAAAmB,WAAA,EAAA,OAAA1B,GAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,GAAAsD,EAAA+E,WAAA,WAAA,GAAArI,GAAA8C,EAAAL,SAAAxC,EAAA6C,EAAAD,WAAA,EAAA,EAAA,GAAAvC,EAAAwC,EAAAD,WAAA,EAAA,EAAA,EAAA,OAAA,UAAAtC,EAAAE,EAAAyC,GAAA,GAAAK,GAAAT,EAAAwF,IAAA7H,EAAAyC,EAAA,gBAAAK,GAAAT,EAAAyF,MAAAvI,EAAAC,EAAAQ,GAAAqC,EAAA0F,OAAAxI,GAAA,MAAA8C,EAAAyF,MAAAvI,EAAAM,EAAAG,GAAAqC,EAAA2F,UAAAzI,EAAAA,GAAAsD,EAAAoF,aAAAnI,EAAAP,EAAA8B,KAAAM,IAAA7B,GAAAgD,EAAA,SAAAhD,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,IAAAuC,EAAAyF,MAAAvI,EAAAS,EAAAyC,GAAA3C,EAAA,GAAAP,EAAA,GAAAO,EAAA,GAAAP,EAAA,GAAAO,EAAA,GAAAP,EAAA,GAAAO,EAAA,GAAA,EAAAgD,EAAAD,EAAAmF,UAAAlI,EAAAA,QAAA+C,EAAAqF,QAAA,WAAA,GAAA3I,GAAAS,EAAAgC,QAAA,OAAA,UAAAxC,EAAAK,EAAAC,EAAAE,GAAA,MAAAT,GAAA,GAAAO,EAAA,GAAAP,EAAA,GAAAO,EAAA,GAAAP,EAAA,GAAAO,EAAA,GAAAP,EAAA,GAAAS,EAAA,GAAAT,EAAA,GAAAS,EAAA,GAAAT,EAAA,GAAAS,EAAA,GAAAT,EAAA,IAAAM,EAAA,GAAAN,EAAA,IAAAM,EAAA,GAAAN,EAAA,IAAAM,EAAA,GAAAgD,EAAAmF,UAAAxI,EAAAqD,EAAAsF,SAAA3I,EAAAD,QAAAsD,EAAAZ,MAAAQ,EAAAR,MAAAY,EAAAT,WAAAK,EAAAL,WAAAS,EAAAX,KAAAO,EAAAP,KAAAW,EAAAP,IAAAG,EAAAH,IAAAO,EAAAV,SAAA,SAAA5C,GAAA,MAAAA,GAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,GAAAsD,EAAAoF,aAAA,SAAA1I,EAAAC,EAAAK,GAAAA,EAAA,GAAAA,CAAA,IAAAC,GAAAuB,KAAA8B,IAAAtD,EAAA,OAAAN,GAAA,GAAAO,EAAAN,EAAA,GAAAD,EAAA,GAAAO,EAAAN,EAAA,GAAAD,EAAA,GAAAO,EAAAN,EAAA,GAAAD,EAAA,GAAA8B,KAAA+B,IAAAvD,GAAAN,GAAAsD,EAAAuF,aAAA,SAAA7I,EAAAC,GAAA,GAAAK,GAAA,EAAAwB,KAAAgH,KAAA7I,EAAA,IAAAM,EAAAuB,KAAA8B,IAAAtD,EAAA,EAAA,OAAA,IAAAC,GAAAP,EAAA,GAAAC,EAAA,GAAAM,EAAAP,EAAA,GAAAC,EAAA,GAAAM,EAAAP,EAAA,GAAAC,EAAA,GAAAM,IAAAP,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,GAAAM,GAAAgD,EAAAgB,IAAApB,EAAAoB,IAAAhB,EAAAD,SAAA,SAAArD,EAAAC,EAAAK,GAAA,GAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAAhD,EAAA,GAAAiD,EAAAjD,EAAA,GAAAkD,EAAAlD,EAAA,GAAAmD,EAAAnD,EAAA,EAAA,OAAAN,GAAA,GAAAO,EAAAkD,EAAAP,EAAAI,EAAA7C,EAAA+C,EAAAV,EAAAS,EAAAvD,EAAA,GAAAS,EAAAgD,EAAAP,EAAAK,EAAAT,EAAAQ,EAAA/C,EAAAiD,EAAAxD,EAAA,GAAA8C,EAAAW,EAAAP,EAAAM,EAAAjD,EAAAgD,EAAA9C,EAAA6C,EAAAtD,EAAA,GAAAkD,EAAAO,EAAAlD,EAAA+C,EAAA7C,EAAA8C,EAAAT,EAAAU,EAAAxD,GAAAsD,EAAAI,IAAAJ,EAAAD,SAAAC,EAAAQ,MAAAZ,EAAAY,MAAAR,EAAAuD,QAAA,SAAA7G,EAAAC,EAAAK,GAAAA,GAAA,EAAA,IAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAAxB,KAAA8B,IAAAtD,GAAAiD,EAAAzB,KAAA+B,IAAAvD,EAAA,OAAAN,GAAA,GAAAO,EAAAgD,EAAAL,EAAAI,EAAAtD,EAAA,GAAAS,EAAA8C,EAAAT,EAAAQ,EAAAtD,EAAA,GAAA8C,EAAAS,EAAA9C,EAAA6C,EAAAtD,EAAA,GAAAkD,EAAAK,EAAAhD,EAAA+C,EAAAtD,GAAAsD,EAAAyD,QAAA,SAAA/G,EAAAC,EAAAK,GAAAA,GAAA,EAAA,IAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAAxB,KAAA8B,IAAAtD,GAAAiD,EAAAzB,KAAA+B,IAAAvD,EAAA,OAAAN,GAAA,GAAAO,EAAAgD,EAAAT,EAAAQ,EAAAtD,EAAA,GAAAS,EAAA8C,EAAAL,EAAAI,EAAAtD,EAAA,GAAA8C,EAAAS,EAAAhD,EAAA+C,EAAAtD,EAAA,GAAAkD,EAAAK,EAAA9C,EAAA6C,EAAAtD,GAAAsD,EAAA0D,QAAA,SAAAhH,EAAAC,EAAAK,GAAAA,GAAA,EAAA,IAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAAxB,KAAA8B,IAAAtD,GAAAiD,EAAAzB,KAAA+B,IAAAvD,EAAA,OAAAN,GAAA,GAAAO,EAAAgD,EAAA9C,EAAA6C,EAAAtD,EAAA,GAAAS,EAAA8C,EAAAhD,EAAA+C,EAAAtD,EAAA,GAAA8C,EAAAS,EAAAL,EAAAI,EAAAtD,EAAA,GAAAkD,EAAAK,EAAAT,EAAAQ,EAAAtD,GAAAsD,EAAAyF,WAAA,SAAA/I,EAAAC,GAAA,GAAAK,GAAAL,EAAA,GAAAM,EAAAN,EAAA,GAAAQ,EAAAR,EAAA,EAAA,OAAAD,GAAA,GAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,GAAAS,EAAAT,EAAA,GAAA8B,KAAAqC,KAAArC,KAAAS,IAAA,EAAAjC,EAAAA,EAAAC,EAAAA,EAAAE,EAAAA,IAAAT,GAAAsD,EAAAgF,IAAApF,EAAAoF,IAAAhF,EAAA0F,KAAA9F,EAAA8F,KAAA1F,EAAA2F,MAAA,SAAAjJ,EAAAC,EAAAK,EAAAC,GAAA,GAAAE,GAAAqC,EAAAI,EAAAI,EAAAC,EAAAC,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,GAAAa,EAAAb,EAAA,GAAA2E,EAAA3E,EAAA,GAAA4E,EAAAvE,EAAA,GAAAwE,EAAAxE,EAAA,GAAA4E,EAAA5E,EAAA,GAAA6E,EAAA7E,EAAA,EAAA,OAAAwC,GAAAU,EAAAqB,EAAApB,EAAAqB,EAAAhE,EAAAoE,EAAAN,EAAAO,EAAA,EAAArC,IAAAA,GAAAA,EAAA+B,GAAAA,EAAAC,GAAAA,EAAAI,GAAAA,EAAAC,GAAAA,GAAA,EAAArC,EAAA,MAAArC,EAAAqB,KAAAgH,KAAAhG,GAAAI,EAAApB,KAAA8B,IAAAnD,GAAA6C,EAAAxB,KAAA8B,KAAA,EAAArD,GAAAE,GAAAyC,EAAAK,EAAAzB,KAAA8B,IAAArD,EAAAE,GAAAyC,IAAAI,EAAA,EAAA/C,EAAAgD,EAAAhD,GAAAP,EAAA,GAAAsD,EAAAE,EAAAD,EAAAsB,EAAA7E,EAAA,GAAAsD,EAAAG,EAAAF,EAAAuB,EAAA9E,EAAA,GAAAsD,EAAAxC,EAAAyC,EAAA2B,EAAAlF,EAAA,GAAAsD,EAAAsB,EAAArB,EAAA4B,EAAAnF,GAAAsD,EAAA4F,OAAA,WAAA,GAAAlJ,GAAAsD,EAAAb,SAAAxC,EAAAqD,EAAAb,QAAA,OAAA,UAAAnC,EAAAC,EAAAE,EAAAqC,EAAAI,EAAAK,GAAA,MAAAD,GAAA2F,MAAAjJ,EAAAO,EAAA2C,EAAAK,GAAAD,EAAA2F,MAAAhJ,EAAAQ,EAAAqC,EAAAS,GAAAD,EAAA2F,MAAA3I,EAAAN,EAAAC,EAAA,EAAAsD,GAAA,EAAAA,IAAAjD,MAAAgD,EAAAL,OAAA,SAAAjD,EAAAC,GAAA,GAAAK,GAAAL,EAAA,GAAAM,EAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAA5C,EAAAA,EAAAC,EAAAA,EAAAE,EAAAA,EAAAqC,EAAAA,EAAAQ,EAAAJ,EAAA,EAAAA,EAAA,CAAA,OAAAlD,GAAA,IAAAM,EAAAgD,EAAAtD,EAAA,IAAAO,EAAA+C,EAAAtD,EAAA,IAAAS,EAAA6C,EAAAtD,EAAA,GAAA8C,EAAAQ,EAAAtD,GAAAsD,EAAA6F,UAAA,SAAAnJ,EAAAC,GAAA,MAAAD,GAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,GAAAsD,EAAAkF,OAAAtF,EAAAsF,OAAAlF,EAAA8F,IAAA9F,EAAAkF,OAAAlF,EAAA+F,cAAAnG,EAAAmG,cAAA/F,EAAAgG,OAAAhG,EAAA+F,cAAA/F,EAAAmF,UAAAvF,EAAAuF,UAAAnF,EAAAsF,SAAA,SAAA5I,EAAAC,GAAA,GAAAK,GAAAC,EAAAN,EAAA,GAAAA,EAAA,GAAAA,EAAA,EAAA,IAAAM,EAAA,EAAAD,EAAAwB,KAAAqC,KAAA5D,EAAA,GAAAP,EAAA,GAAA,GAAAM,EAAAA,EAAA,GAAAA,EAAAN,EAAA,IAAAC,EAAA,GAAAA,EAAA,IAAAK,EAAAN,EAAA,IAAAC,EAAA,GAAAA,EAAA,IAAAK,EAAAN,EAAA,IAAAC,EAAA,GAAAA,EAAA,IAAAK,MAAA,CAAA,GAAAG,GAAA,CAAAR,GAAA,GAAAA,EAAA,KAAAQ,EAAA,GAAAR,EAAA,GAAAA,EAAA,EAAAQ,EAAAA,KAAAA,EAAA,EAAA,IAAAqC,IAAArC,EAAA,GAAA,EAAAyC,GAAAzC,EAAA,GAAA,CAAAH,GAAAwB,KAAAqC,KAAAlE,EAAA,EAAAQ,EAAAA,GAAAR,EAAA,EAAA6C,EAAAA,GAAA7C,EAAA,EAAAiD,EAAAA,GAAA,GAAAlD,EAAAS,GAAA,GAAAH,EAAAA,EAAA,GAAAA,EAAAN,EAAA,IAAAC,EAAA,EAAA6C,EAAAI,GAAAjD,EAAA,EAAAiD,EAAAJ,IAAAxC,EAAAN,EAAA8C,IAAA7C,EAAA,EAAA6C,EAAArC,GAAAR,EAAA,EAAAQ,EAAAqC,IAAAxC,EAAAN,EAAAkD,IAAAjD,EAAA,EAAAiD,EAAAzC,GAAAR,EAAA,EAAAQ,EAAAyC,IAAA5C,EAAA,MAAAN,IAAAsD,EAAAW,IAAA,SAAAjE,GAAA,MAAA,QAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAsD,EAAAmB,YAAAvB,EAAAuB,YAAAnB,EAAAhB,OAAAY,EAAAZ,OAAAtC,EAAAE,QAAAoD,GAAA,SAAAtD,EAAAC,EAAAK,GAAA,GAAAC,GAAAD,EAAA,GAAAG,IAAAA,GAAAgC,OAAA,WAAA,GAAAzC,GAAA,GAAAO,GAAAmB,WAAA,EAAA,OAAA1B,GAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,GAAAS,EAAAiC,MAAA,SAAA1C,GAAA,GAAAC,GAAA,GAAAM,GAAAmB,WAAA,EAAA,OAAAzB,GAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,GAAAQ,EAAAoC,WAAA,SAAA7C,EAAAC,EAAAK,GAAA,GAAAG,GAAA,GAAAF,GAAAmB,WAAA,EAAA,OAAAjB,GAAA,GAAAT,EAAAS,EAAA,GAAAR,EAAAQ,EAAA,GAAAH,EAAAG,GAAAA,EAAAkC,KAAA,SAAA3C,EAAAC,GAAA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,GAAAS,EAAAsC,IAAA,SAAA/C,EAAAC,EAAAK,EAAAC,GAAA,MAAAP,GAAA,GAAAC,EAAAD,EAAA,GAAAM,EAAAN,EAAA,GAAAO,EAAAP,GAAAS,EAAA6D,IAAA,SAAAtE,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,GAAAS,EAAA8D,SAAA,SAAAvE,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,GAAAS,EAAA+D,IAAA/D,EAAA8D,SAAA9D,EAAA4C,SAAA,SAAArD,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,GAAAS,EAAAiD,IAAAjD,EAAA4C,SAAA5C,EAAA8I,OAAA,SAAAvJ,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,GAAAS,EAAA+I,IAAA/I,EAAA8I,OAAA9I,EAAAgJ,KAAA,SAAAzJ,EAAAC,GAAA,MAAAD,GAAA,GAAA8B,KAAA2H,KAAAxJ,EAAA,IAAAD,EAAA,GAAA8B,KAAA2H,KAAAxJ,EAAA,IAAAD,EAAA,GAAA8B,KAAA2H,KAAAxJ,EAAA,IAAAD,GAAAS,EAAAiJ,MAAA,SAAA1J,EAAAC,GAAA,MAAAD,GAAA,GAAA8B,KAAA4H,MAAAzJ,EAAA,IAAAD,EAAA,GAAA8B,KAAA4H,MAAAzJ,EAAA,IAAAD,EAAA,GAAA8B,KAAA4H,MAAAzJ,EAAA,IAAAD,GAAAS,EAAAkJ,IAAA,SAAA3J,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAA8B,KAAA6H,IAAA1J,EAAA,GAAAK,EAAA,IAAAN,EAAA,GAAA8B,KAAA6H,IAAA1J,EAAA,GAAAK,EAAA,IAAAN,EAAA,GAAA8B,KAAA6H,IAAA1J,EAAA,GAAAK,EAAA,IAAAN,GAAAS,EAAA+B,IAAA,SAAAxC,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAA8B,KAAAU,IAAAvC,EAAA,GAAAK,EAAA,IAAAN,EAAA,GAAA8B,KAAAU,IAAAvC,EAAA,GAAAK,EAAA,IAAAN,EAAA,GAAA8B,KAAAU,IAAAvC,EAAA,GAAAK,EAAA,IAAAN,GAAAS,EAAAmJ,MAAA,SAAA5J,EAAAC,GAAA,MAAAD,GAAA,GAAA8B,KAAA8H,MAAA3J,EAAA,IAAAD,EAAA,GAAA8B,KAAA8H,MAAA3J,EAAA,IAAAD,EAAA,GAAA8B,KAAA8H,MAAA3J,EAAA,IAAAD,GAAAS,EAAAqD,MAAA,SAAA9D,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,GAAAS,EAAAoJ,YAAA,SAAA7J,EAAAC,EAAAK,EAAAC,GAAA,MAAAP,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,GAAAS,EAAAqJ,SAAA,SAAA9J,EAAAC,GAAA,GAAAK,GAAAL,EAAA,GAAAD,EAAA,GAAAO,EAAAN,EAAA,GAAAD,EAAA,GAAAS,EAAAR,EAAA,GAAAD,EAAA,EAAA,OAAA8B,MAAAqC,KAAA7D,EAAAA,EAAAC,EAAAA,EAAAE,EAAAA,IAAAA,EAAAsJ,KAAAtJ,EAAAqJ,SAAArJ,EAAAuJ,gBAAA,SAAAhK,EAAAC,GAAA,GAAAK,GAAAL,EAAA,GAAAD,EAAA,GAAAO,EAAAN,EAAA,GAAAD,EAAA,GAAAS,EAAAR,EAAA,GAAAD,EAAA,EAAA,OAAAM,GAAAA,EAAAC,EAAAA,EAAAE,EAAAA,GAAAA,EAAAwJ,QAAAxJ,EAAAuJ,gBAAAvJ,EAAA+H,OAAA,SAAAxI,GAAA,GAAAC,GAAAD,EAAA,GAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,EAAA,OAAA8B,MAAAqC,KAAAlE,EAAAA,EAAAK,EAAAA,EAAAC,EAAAA,IAAAE,EAAA2I,IAAA3I,EAAA+H,OAAA/H,EAAA4I,cAAA,SAAArJ,GAAA,GAAAC,GAAAD,EAAA,GAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,EAAA,OAAAC,GAAAA,EAAAK,EAAAA,EAAAC,EAAAA,GAAAE,EAAA6I,OAAA7I,EAAA4I,cAAA5I,EAAAyJ,OAAA,SAAAlK,EAAAC,GAAA,MAAAD,GAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAAAD,GAAAS,EAAA0J,QAAA,SAAAnK,EAAAC,GAAA,MAAAD,GAAA,GAAA,EAAAC,EAAA,GAAAD,EAAA,GAAA,EAAAC,EAAA,GAAAD,EAAA,GAAA,EAAAC,EAAA,GAAAD,GAAAS,EAAAgI,UAAA,SAAAzI,EAAAC,GAAA,GAAAK,GAAAL,EAAA,GAAAM,EAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAAxC,EAAAA,EAAAC,EAAAA,EAAAE,EAAAA,CAAA,OAAAqC,GAAA,IAAAA,EAAA,EAAAhB,KAAAqC,KAAArB,GAAA9C,EAAA,GAAAC,EAAA,GAAA6C,EAAA9C,EAAA,GAAAC,EAAA,GAAA6C,EAAA9C,EAAA,GAAAC,EAAA,GAAA6C,GAAA9C,GAAAS,EAAA6H,IAAA,SAAAtI,EAAAC,GAAA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAAAQ,EAAA8H,MAAA,SAAAvI,EAAAC,EAAAK,GAAA,GAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAA5C,EAAA,GAAAgD,EAAAhD,EAAA,GAAAiD,EAAAjD,EAAA,EAAA,OAAAN,GAAA,GAAAS,EAAA8C,EAAAT,EAAAQ,EAAAtD,EAAA,GAAA8C,EAAAI,EAAA3C,EAAAgD,EAAAvD,EAAA,GAAAO,EAAA+C,EAAA7C,EAAAyC,EAAAlD,GAAAS,EAAAuI,KAAA,SAAAhJ,EAAAC,EAAAK,EAAAC,GAAA,GAAAE,GAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,EAAA,OAAAD,GAAA,GAAAS,EAAAF,GAAAD,EAAA,GAAAG,GAAAT,EAAA,GAAA8C,EAAAvC,GAAAD,EAAA,GAAAwC,GAAA9C,EAAA,GAAAkD,EAAA3C,GAAAD,EAAA,GAAA4C,GAAAlD,GAAAS,EAAA2J,QAAA,SAAApK,EAAAC,EAAAK,EAAAC,EAAAE,EAAAqC,GAAA,GAAAI,GAAAJ,EAAAA,EAAAQ,EAAAJ,GAAA,EAAAJ,EAAA,GAAA,EAAAS,EAAAL,GAAAJ,EAAA,GAAAA,EAAAU,EAAAN,GAAAJ,EAAA,GAAAW,EAAAP,GAAA,EAAA,EAAAJ,EAAA,OAAA9C,GAAA,GAAAC,EAAA,GAAAqD,EAAAhD,EAAA,GAAAiD,EAAAhD,EAAA,GAAAiD,EAAA/C,EAAA,GAAAgD,EAAAzD,EAAA,GAAAC,EAAA,GAAAqD,EAAAhD,EAAA,GAAAiD,EAAAhD,EAAA,GAAAiD,EAAA/C,EAAA,GAAAgD,EAAAzD,EAAA,GAAAC,EAAA,GAAAqD,EAAAhD,EAAA,GAAAiD,EAAAhD,EAAA,GAAAiD,EAAA/C,EAAA,GAAAgD,EAAAzD,GAAAS,EAAA4J,OAAA,SAAArK,EAAAC,EAAAK,EAAAC,EAAAE,EAAAqC,GAAA,GAAAI,GAAA,EAAAJ,EAAAQ,EAAAJ,EAAAA,EAAAK,EAAAT,EAAAA,EAAAU,EAAAF,EAAAJ,EAAAO,EAAA,EAAAX,EAAAQ,EAAAxC,EAAA,EAAAyC,EAAAL,EAAA0B,EAAArB,EAAAT,CAAA,OAAA9C,GAAA,GAAAC,EAAA,GAAAuD,EAAAlD,EAAA,GAAAmD,EAAAlD,EAAA,GAAAO,EAAAL,EAAA,GAAAmE,EAAA5E,EAAA,GAAAC,EAAA,GAAAuD,EAAAlD,EAAA,GAAAmD,EAAAlD,EAAA,GAAAO,EAAAL,EAAA,GAAAmE,EAAA5E,EAAA,GAAAC,EAAA,GAAAuD,EAAAlD,EAAA,GAAAmD,EAAAlD,EAAA,GAAAO,EAAAL,EAAA,GAAAmE,EAAA5E,GAAAS,EAAAsB,OAAA,SAAA/B,EAAAC,GAAAA,EAAAA,GAAA,CAAA,IAAAK,GAAA,EAAAC,EAAAsB,SAAAC,KAAAM,GAAA3B,EAAA,EAAAF,EAAAsB,SAAA,EAAAiB,EAAAhB,KAAAqC,KAAA,EAAA1D,EAAAA,GAAAR,CAAA,OAAAD,GAAA,GAAA8B,KAAA+B,IAAAvD,GAAAwC,EAAA9C,EAAA,GAAA8B,KAAA8B,IAAAtD,GAAAwC,EAAA9C,EAAA,GAAAS,EAAAR,EAAAD,GAAAS,EAAA6J,cAAA,SAAAtK,EAAAC,EAAAK,GAAA,GAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAA5C,EAAA,GAAAC,EAAAD,EAAA,GAAAG,EAAAH,EAAA,IAAAwC,EAAAxC,EAAA,GAAA,OAAA4C,GAAAA,GAAA,EAAAlD,EAAA,IAAAM,EAAA,GAAAC,EAAAD,EAAA,GAAAG,EAAAH,EAAA,GAAAwC,EAAAxC,EAAA,KAAA4C,EAAAlD,EAAA,IAAAM,EAAA,GAAAC,EAAAD,EAAA,GAAAG,EAAAH,EAAA,GAAAwC,EAAAxC,EAAA,KAAA4C,EAAAlD,EAAA,IAAAM,EAAA,GAAAC,EAAAD,EAAA,GAAAG,EAAAH,EAAA,IAAAwC,EAAAxC,EAAA,KAAA4C,EAAAlD,GAAAS,EAAA8J,cAAA,SAAAvK,EAAAC,EAAAK,GAAA,GAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,EAAA,OAAAD,GAAA,GAAAO,EAAAD,EAAA,GAAAG,EAAAH,EAAA,GAAAwC,EAAAxC,EAAA,GAAAN,EAAA,GAAAO,EAAAD,EAAA,GAAAG,EAAAH,EAAA,GAAAwC,EAAAxC,EAAA,GAAAN,EAAA,GAAAO,EAAAD,EAAA,GAAAG,EAAAH,EAAA,GAAAwC,EAAAxC,EAAA,GAAAN,GAAAS,EAAA+J,cAAA,SAAAxK,EAAAC,EAAAK,GAAA,GAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAA5C,EAAA,GAAAgD,EAAAhD,EAAA,GAAAiD,EAAAjD,EAAA,GAAAkD,EAAAlD,EAAA,GAAAmD,EAAAD,EAAAjD,EAAA+C,EAAAR,EAAAS,EAAA9C,EAAAK,EAAA0C,EAAA/C,EAAA8C,EAAAhD,EAAA2C,EAAAJ,EAAA8B,EAAApB,EAAAV,EAAAI,EAAAzC,EAAA6C,EAAA/C,EAAAsE,GAAA3B,EAAA3C,EAAA+C,EAAA7C,EAAA8C,EAAAT,CAAA,OAAA9C,GAAA,GAAAyD,EAAAD,EAAAqB,GAAA3B,EAAApC,GAAAyC,EAAAqB,GAAAtB,EAAAtD,EAAA,GAAAc,EAAA0C,EAAAqB,GAAAvB,EAAAsB,GAAA1B,EAAAO,GAAAF,EAAAvD,EAAA,GAAA4E,EAAApB,EAAAqB,GAAAtB,EAAAE,GAAAH,EAAAxC,GAAAoC,EAAAlD,GAAAS,EAAAoG,QAAA,SAAA7G,EAAAC,EAAAK,EAAAC,GAAA,GAAAE,MAAAqC,IAAA,OAAArC,GAAA,GAAAR,EAAA,GAAAK,EAAA,GAAAG,EAAA,GAAAR,EAAA,GAAAK,EAAA,GAAAG,EAAA,GAAAR,EAAA,GAAAK,EAAA,GAAAwC,EAAA,GAAArC,EAAA,GAAAqC,EAAA,GAAArC,EAAA,GAAAqB,KAAA+B,IAAAtD,GAAAE,EAAA,GAAAqB,KAAA8B,IAAArD,GAAAuC,EAAA,GAAArC,EAAA,GAAAqB,KAAA8B,IAAArD,GAAAE,EAAA,GAAAqB,KAAA+B,IAAAtD,GAAAP,EAAA,GAAA8C,EAAA,GAAAxC,EAAA,GAAAN,EAAA,GAAA8C,EAAA,GAAAxC,EAAA,GAAAN,EAAA,GAAA8C,EAAA,GAAAxC,EAAA,GAAAN,GAAAS,EAAAsG,QAAA,SAAA/G,EAAAC,EAAAK,EAAAC,GAAA,GAAAE,MAAAqC,IAAA,OAAArC,GAAA,GAAAR,EAAA,GAAAK,EAAA,GAAAG,EAAA,GAAAR,EAAA,GAAAK,EAAA,GAAAG,EAAA,GAAAR,EAAA,GAAAK,EAAA,GAAAwC,EAAA,GAAArC,EAAA,GAAAqB,KAAA8B,IAAArD,GAAAE,EAAA,GAAAqB,KAAA+B,IAAAtD,GAAAuC,EAAA,GAAArC,EAAA,GAAAqC,EAAA,GAAArC,EAAA,GAAAqB,KAAA+B,IAAAtD,GAAAE,EAAA,GAAAqB,KAAA8B,IAAArD,GAAAP,EAAA,GAAA8C,EAAA,GAAAxC,EAAA,GAAAN,EAAA,GAAA8C,EAAA,GAAAxC,EAAA,GAAAN,EAAA,GAAA8C,EAAA,GAAAxC,EAAA,GAAAN,GAAAS,EAAAuG,QAAA,SAAAhH,EAAAC,EAAAK,EAAAC,GAAA,GAAAE,MAAAqC,IAAA,OAAArC,GAAA,GAAAR,EAAA,GAAAK,EAAA,GAAAG,EAAA,GAAAR,EAAA,GAAAK,EAAA,GAAAG,EAAA,GAAAR,EAAA,GAAAK,EAAA,GAAAwC,EAAA,GAAArC,EAAA,GAAAqB,KAAA+B,IAAAtD,GAAAE,EAAA,GAAAqB,KAAA8B,IAAArD,GAAAuC,EAAA,GAAArC,EAAA,GAAAqB,KAAA8B,IAAArD,GAAAE,EAAA,GAAAqB,KAAA+B,IAAAtD,GAAAuC,EAAA,GAAArC,EAAA,GAAAT,EAAA,GAAA8C,EAAA,GAAAxC,EAAA,GAAAN,EAAA,GAAA8C,EAAA,GAAAxC,EAAA,GAAAN,EAAA,GAAA8C,EAAA,GAAAxC,EAAA,GAAAN,GAAAS,EAAAgK,QAAA,WAAA,GAAAzK,GAAAS,EAAAgC,QAAA,OAAA,UAAAxC,EAAAK,EAAAC,EAAAE,EAAAqC,EAAAI,GAAA,GAAAI,GAAAC,CAAA,KAAAjD,IAAAA,EAAA,GAAAC,IAAAA,EAAA,GAAAgD,EAAA9C,EAAAqB,KAAA6H,IAAAlJ,EAAAH,EAAAC,EAAAN,EAAAuI,QAAAvI,EAAAuI,OAAAlF,EAAA/C,EAAAgD,EAAAD,EAAAA,GAAAhD,EAAAN,EAAA,GAAAC,EAAAqD,GAAAtD,EAAA,GAAAC,EAAAqD,EAAA,GAAAtD,EAAA,GAAAC,EAAAqD,EAAA,GAAAR,EAAA9C,EAAAA,EAAAkD,GAAAjD,EAAAqD,GAAAtD,EAAA,GAAAC,EAAAqD,EAAA,GAAAtD,EAAA,GAAAC,EAAAqD,EAAA,GAAAtD,EAAA,EAAA,OAAAC,OAAAQ,EAAAiK,MAAA,SAAA1K,EAAAC,GAAA,GAAAK,GAAAG,EAAAoC,WAAA7C,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAO,EAAAE,EAAAoC,WAAA5C,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAQ,GAAAgI,UAAAnI,EAAAA,GAAAG,EAAAgI,UAAAlI,EAAAA,EAAA,IAAAuC,GAAArC,EAAA6H,IAAAhI,EAAAC,EAAA,OAAAuC,GAAA,EAAA,EAAAhB,KAAAgH,KAAAhG,IAAArC,EAAAwD,IAAA,SAAAjE,GAAA,MAAA,QAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAS,EAAAgE,YAAA,SAAAzE,EAAAC,GAAA,MAAAD,GAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAQ,EAAA6B,OAAA,SAAAtC,EAAAC,GAAA,GAAAK,GAAAN,EAAA,GAAAS,EAAAT,EAAA,GAAA8C,EAAA9C,EAAA,GAAAkD,EAAAjD,EAAA,GAAAqD,EAAArD,EAAA,GAAAsD,EAAAtD,EAAA,EAAA,OAAA6B,MAAAS,IAAAjC,EAAA4C,IAAA3C,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAjC,GAAAwB,KAAAS,IAAAW,KAAApB,KAAAS,IAAA9B,EAAA6C,IAAA/C,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAA9B,GAAAqB,KAAAS,IAAAe,KAAAxB,KAAAS,IAAAO,EAAAS,IAAAhD,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAO,GAAAhB,KAAAS,IAAAgB,KAAAvD,EAAAE,QAAAO,GAAA,SAAAT,EAAAC,EAAAK,GAAA,GAAAC,GAAAD,EAAA,GAAAG,IAAAA,GAAAgC,OAAA,WAAA,GAAAzC,GAAA,GAAAO,GAAAmB,WAAA,EAAA,OAAA1B,GAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,GAAAS,EAAAiC,MAAA,SAAA1C,GAAA,GAAAC,GAAA,GAAAM,GAAAmB,WAAA,EAAA,OAAAzB,GAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,GAAAQ,EAAAoC,WAAA,SAAA7C,EAAAC,EAAAK,EAAAG,GAAA,GAAAqC,GAAA,GAAAvC,GAAAmB,WAAA,EAAA,OAAAoB,GAAA,GAAA9C,EAAA8C,EAAA,GAAA7C,EAAA6C,EAAA,GAAAxC,EAAAwC,EAAA,GAAArC,EAAAqC,GAAArC,EAAAkC,KAAA,SAAA3C,EAAAC,GAAA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,GAAAS,EAAAsC,IAAA,SAAA/C,EAAAC,EAAAK,EAAAC,EAAAE,GAAA,MAAAT,GAAA,GAAAC,EAAAD,EAAA,GAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,GAAAS,EAAAT,GAAAS,EAAA6D,IAAA,SAAAtE,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,GAAAS,EAAA8D,SAAA,SAAAvE,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,GAAAS,EAAA+D,IAAA/D,EAAA8D,SAAA9D,EAAA4C,SAAA,SAAArD,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,GAAAS,EAAAiD,IAAAjD,EAAA4C,SAAA5C,EAAA8I,OAAA,SAAAvJ,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,GAAAS,EAAA+I,IAAA/I,EAAA8I,OAAA9I,EAAAgJ,KAAA,SAAAzJ,EAAAC,GAAA,MAAAD,GAAA,GAAA8B,KAAA2H,KAAAxJ,EAAA,IAAAD,EAAA,GAAA8B,KAAA2H,KAAAxJ,EAAA,IAAAD,EAAA,GAAA8B,KAAA2H,KAAAxJ,EAAA,IAAAD,EAAA,GAAA8B,KAAA2H,KAAAxJ,EAAA,IAAAD,GAAAS,EAAAiJ,MAAA,SAAA1J,EAAAC,GAAA,MAAAD,GAAA,GAAA8B,KAAA4H,MAAAzJ,EAAA,IAAAD,EAAA,GAAA8B,KAAA4H,MAAAzJ,EAAA,IAAAD,EAAA,GAAA8B,KAAA4H,MAAAzJ,EAAA,IAAAD,EAAA,GAAA8B,KAAA4H,MAAAzJ,EAAA,IAAAD,GAAAS,EAAAkJ,IAAA,SAAA3J,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAA8B,KAAA6H,IAAA1J,EAAA,GAAAK,EAAA,IAAAN,EAAA,GAAA8B,KAAA6H,IAAA1J,EAAA,GAAAK,EAAA,IAAAN,EAAA,GAAA8B,KAAA6H,IAAA1J,EAAA,GAAAK,EAAA,IAAAN,EAAA,GAAA8B,KAAA6H,IAAA1J,EAAA,GAAAK,EAAA,IAAAN,GAAAS,EAAA+B,IAAA,SAAAxC,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAA8B,KAAAU,IAAAvC,EAAA,GAAAK,EAAA,IAAAN,EAAA,GAAA8B,KAAAU,IAAAvC,EAAA,GAAAK,EAAA,IAAAN,EAAA,GAAA8B,KAAAU,IAAAvC,EAAA,GAAAK,EAAA,IAAAN,EAAA,GAAA8B,KAAAU,IAAAvC,EAAA,GAAAK,EAAA,IAAAN,GAAAS,EAAAmJ,MAAA,SAAA5J,EAAAC,GAAA,MAAAD,GAAA,GAAA8B,KAAA8H,MAAA3J,EAAA,IAAAD,EAAA,GAAA8B,KAAA8H,MAAA3J,EAAA,IAAAD,EAAA,GAAA8B,KAAA8H,MAAA3J,EAAA,IAAAD,EAAA,GAAA8B,KAAA8H,MAAA3J,EAAA,IAAAD,GAAAS,EAAAqD,MAAA,SAAA9D,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,GAAAS,EAAAoJ,YAAA,SAAA7J,EAAAC,EAAAK,EAAAC,GAAA,MAAAP,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,GAAAS,EAAAqJ,SAAA,SAAA9J,EAAAC,GAAA,GAAAK,GAAAL,EAAA,GAAAD,EAAA,GAAAO,EAAAN,EAAA,GAAAD,EAAA,GAAAS,EAAAR,EAAA,GAAAD,EAAA,GAAA8C,EAAA7C,EAAA,GAAAD,EAAA,EAAA,OAAA8B,MAAAqC,KAAA7D,EAAAA,EAAAC,EAAAA,EAAAE,EAAAA,EAAAqC,EAAAA,IAAArC,EAAAsJ,KAAAtJ,EAAAqJ,SAAArJ,EAAAuJ,gBAAA,SAAAhK,EAAAC,GAAA,GAAAK,GAAAL,EAAA,GAAAD,EAAA,GAAAO,EAAAN,EAAA,GAAAD,EAAA,GAAAS,EAAAR,EAAA,GAAAD,EAAA,GAAA8C,EAAA7C,EAAA,GAAAD,EAAA,EAAA,OAAAM,GAAAA,EAAAC,EAAAA,EAAAE,EAAAA,EAAAqC,EAAAA,GAAArC,EAAAwJ,QAAAxJ,EAAAuJ,gBAAAvJ,EAAA+H,OAAA,SAAAxI,GAAA,GAAAC,GAAAD,EAAA,GAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,GAAAS,EAAAT,EAAA,EAAA,OAAA8B,MAAAqC,KAAAlE,EAAAA,EAAAK,EAAAA,EAAAC,EAAAA,EAAAE,EAAAA,IAAAA,EAAA2I,IAAA3I,EAAA+H,OAAA/H,EAAA4I,cAAA,SAAArJ,GAAA,GAAAC,GAAAD,EAAA,GAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,GAAAS,EAAAT,EAAA,EAAA,OAAAC,GAAAA,EAAAK,EAAAA,EAAAC,EAAAA,EAAAE,EAAAA,GAAAA,EAAA6I,OAAA7I,EAAA4I,cAAA5I,EAAAyJ,OAAA,SAAAlK,EAAAC,GAAA,MAAAD,GAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAAAD,GAAAS,EAAA0J,QAAA,SAAAnK,EAAAC,GAAA,MAAAD,GAAA,GAAA,EAAAC,EAAA,GAAAD,EAAA,GAAA,EAAAC,EAAA,GAAAD,EAAA,GAAA,EAAAC,EAAA,GAAAD,EAAA,GAAA,EAAAC,EAAA,GAAAD,GAAAS,EAAAgI,UAAA,SAAAzI,EAAAC,GAAA,GAAAK,GAAAL,EAAA,GAAAM,EAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAA5C,EAAAA,EAAAC,EAAAA,EAAAE,EAAAA,EAAAqC,EAAAA,CAAA,OAAAI,GAAA,IAAAA,EAAA,EAAApB,KAAAqC,KAAAjB,GAAAlD,EAAA,GAAAM,EAAA4C,EAAAlD,EAAA,GAAAO,EAAA2C,EAAAlD,EAAA,GAAAS,EAAAyC,EAAAlD,EAAA,GAAA8C,EAAAI,GAAAlD,GAAAS,EAAA6H,IAAA,SAAAtI,EAAAC,GAAA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAAAQ,EAAAuI,KAAA,SAAAhJ,EAAAC,EAAAK,EAAAC,GAAA,GAAAE,GAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,GAAAqD,EAAArD,EAAA,EAAA,OAAAD,GAAA,GAAAS,EAAAF,GAAAD,EAAA,GAAAG,GAAAT,EAAA,GAAA8C,EAAAvC,GAAAD,EAAA,GAAAwC,GAAA9C,EAAA,GAAAkD,EAAA3C,GAAAD,EAAA,GAAA4C,GAAAlD,EAAA,GAAAsD,EAAA/C,GAAAD,EAAA,GAAAgD,GAAAtD,GAAAS,EAAAsB,OAAA,SAAA/B,EAAAC,GAAA,MAAAA,GAAAA,GAAA,EAAAD,EAAA,GAAAO,EAAAsB,SAAA7B,EAAA,GAAAO,EAAAsB,SAAA7B,EAAA,GAAAO,EAAAsB,SAAA7B,EAAA,GAAAO,EAAAsB,SAAApB,EAAAgI,UAAAzI,EAAAA,GAAAS,EAAAqD,MAAA9D,EAAAA,EAAAC,GAAAD,GAAAS,EAAA6J,cAAA,SAAAtK,EAAAC,EAAAK,GAAA,GAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,EAAA,OAAAD,GAAA,GAAAM,EAAA,GAAAC,EAAAD,EAAA,GAAAG,EAAAH,EAAA,GAAAwC,EAAAxC,EAAA,IAAA4C,EAAAlD,EAAA,GAAAM,EAAA,GAAAC,EAAAD,EAAA,GAAAG,EAAAH,EAAA,GAAAwC,EAAAxC,EAAA,IAAA4C,EAAAlD,EAAA,GAAAM,EAAA,GAAAC,EAAAD,EAAA,GAAAG,EAAAH,EAAA,IAAAwC,EAAAxC,EAAA,IAAA4C,EAAAlD,EAAA,GAAAM,EAAA,GAAAC,EAAAD,EAAA,GAAAG,EAAAH,EAAA,IAAAwC,EAAAxC,EAAA,IAAA4C,EAAAlD,GAAAS,EAAA+J,cAAA,SAAAxK,EAAAC,EAAAK,GAAA,GAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,GAAA6C,EAAA7C,EAAA,GAAAiD,EAAA5C,EAAA,GAAAgD,EAAAhD,EAAA,GAAAiD,EAAAjD,EAAA,GAAAkD,EAAAlD,EAAA,GAAAmD,EAAAD,EAAAjD,EAAA+C,EAAAR,EAAAS,EAAA9C,EAAAK,EAAA0C,EAAA/C,EAAA8C,EAAAhD,EAAA2C,EAAAJ,EAAA8B,EAAApB,EAAAV,EAAAI,EAAAzC,EAAA6C,EAAA/C,EAAAsE,GAAA3B,EAAA3C,EAAA+C,EAAA7C,EAAA8C,EAAAT,CAAA,OAAA9C,GAAA,GAAAyD,EAAAD,EAAAqB,GAAA3B,EAAApC,GAAAyC,EAAAqB,GAAAtB,EAAAtD,EAAA,GAAAc,EAAA0C,EAAAqB,GAAAvB,EAAAsB,GAAA1B,EAAAO,GAAAF,EAAAvD,EAAA,GAAA4E,EAAApB,EAAAqB,GAAAtB,EAAAE,GAAAH,EAAAxC,GAAAoC,EAAAlD,EAAA,GAAAC,EAAA,GAAAD,GAAAS,EAAAgK,QAAA,WAAA,GAAAzK,GAAAS,EAAAgC,QAAA,OAAA,UAAAxC,EAAAK,EAAAC,EAAAE,EAAAqC,EAAAI,GAAA,GAAAI,GAAAC,CAAA,KAAAjD,IAAAA,EAAA,GAAAC,IAAAA,EAAA,GAAAgD,EAAA9C,EAAAqB,KAAA6H,IAAAlJ,EAAAH,EAAAC,EAAAN,EAAAuI,QAAAvI,EAAAuI,OAAAlF,EAAA/C,EAAAgD,EAAAD,EAAAA,GAAAhD,EAAAN,EAAA,GAAAC,EAAAqD,GAAAtD,EAAA,GAAAC,EAAAqD,EAAA,GAAAtD,EAAA,GAAAC,EAAAqD,EAAA,GAAAtD,EAAA,GAAAC,EAAAqD,EAAA,GAAAR,EAAA9C,EAAAA,EAAAkD,GAAAjD,EAAAqD,GAAAtD,EAAA,GAAAC,EAAAqD,EAAA,GAAAtD,EAAA,GAAAC,EAAAqD,EAAA,GAAAtD,EAAA,GAAAC,EAAAqD,EAAA,GAAAtD,EAAA,EAAA,OAAAC,OAAAQ,EAAAwD,IAAA,SAAAjE,GAAA,MAAA,QAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAS,EAAAgE,YAAA,SAAAzE,EAAAC,GAAA,MAAAD,GAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAQ,EAAA6B,OAAA,SAAAtC,EAAAC,GAAA,GAAAK,GAAAN,EAAA,GAAAS,EAAAT,EAAA,GAAA8C,EAAA9C,EAAA,GAAAkD,EAAAlD,EAAA,GAAAsD,EAAArD,EAAA,GAAAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,EAAA,OAAA6B,MAAAS,IAAAjC,EAAAgD,IAAA/C,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAjC,GAAAwB,KAAAS,IAAAe,KAAAxB,KAAAS,IAAA9B,EAAA8C,IAAAhD,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAA9B,GAAAqB,KAAAS,IAAAgB,KAAAzB,KAAAS,IAAAO,EAAAU,IAAAjD,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAO,GAAAhB,KAAAS,IAAAiB,KAAA1B,KAAAS,IAAAW,EAAAO,IAAAlD,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAW,GAAApB,KAAAS,IAAAkB,KAAAzD,EAAAE,QAAAO,GAAA,SAAAT,EAAAC,EAAAK,GAAA,GAAAC,GAAAD,EAAA,GAAAG,IAAAA,GAAAgC,OAAA,WAAA,GAAAzC,GAAA,GAAAO,GAAAmB,WAAA,EAAA,OAAA1B,GAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,GAAAS,EAAAiC,MAAA,SAAA1C,GAAA,GAAAC,GAAA,GAAAM,GAAAmB,WAAA,EAAA,OAAAzB,GAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,GAAAQ,EAAAoC,WAAA,SAAA7C,EAAAC,GAAA,GAAAK,GAAA,GAAAC,GAAAmB,WAAA,EAAA,OAAApB,GAAA,GAAAN,EAAAM,EAAA,GAAAL,EAAAK,GAAAG,EAAAkC,KAAA,SAAA3C,EAAAC,GAAA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,GAAAS,EAAAsC,IAAA,SAAA/C,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAAD,EAAA,GAAAM,EAAAN,GAAAS,EAAA6D,IAAA,SAAAtE,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,GAAAS,EAAA8D,SAAA,SAAAvE,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,GAAAS,EAAA+D,IAAA/D,EAAA8D,SAAA9D,EAAA4C,SAAA,SAAArD,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,GAAAS,EAAAiD,IAAAjD,EAAA4C,SAAA5C,EAAA8I,OAAA,SAAAvJ,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAN,GAAAS,EAAA+I,IAAA/I,EAAA8I,OAAA9I,EAAAgJ,KAAA,SAAAzJ,EAAAC,GAAA,MAAAD,GAAA,GAAA8B,KAAA2H,KAAAxJ,EAAA,IAAAD,EAAA,GAAA8B,KAAA2H,KAAAxJ,EAAA,IAAAD,GAAAS,EAAAiJ,MAAA,SAAA1J,EAAAC,GAAA,MAAAD,GAAA,GAAA8B,KAAA4H,MAAAzJ,EAAA,IAAAD,EAAA,GAAA8B,KAAA4H,MAAAzJ,EAAA,IAAAD,GAAAS,EAAAkJ,IAAA,SAAA3J,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAA8B,KAAA6H,IAAA1J,EAAA,GAAAK,EAAA,IAAAN,EAAA,GAAA8B,KAAA6H,IAAA1J,EAAA,GAAAK,EAAA,IAAAN,GAAAS,EAAA+B,IAAA,SAAAxC,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAA8B,KAAAU,IAAAvC,EAAA,GAAAK,EAAA,IAAAN,EAAA,GAAA8B,KAAAU,IAAAvC,EAAA,GAAAK,EAAA,IAAAN,GAAAS,EAAAmJ,MAAA,SAAA5J,EAAAC,GAAA,MAAAD,GAAA,GAAA8B,KAAA8H,MAAA3J,EAAA,IAAAD,EAAA,GAAA8B,KAAA8H,MAAA3J,EAAA,IAAAD,GAAAS,EAAAqD,MAAA,SAAA9D,EAAAC,EAAAK,GAAA,MAAAN,GAAA,GAAAC,EAAA,GAAAK,EAAAN,EAAA,GAAAC,EAAA,GAAAK,EAAAN,GAAAS,EAAAoJ,YAAA,SAAA7J,EAAAC,EAAAK,EAAAC,GAAA,MAAAP,GAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,EAAA,GAAAC,EAAA,GAAAK,EAAA,GAAAC,EAAAP,GAAAS,EAAAqJ,SAAA,SAAA9J,EAAAC,GAAA,GAAAK,GAAAL,EAAA,GAAAD,EAAA,GAAAO,EAAAN,EAAA,GAAAD,EAAA,EAAA,OAAA8B,MAAAqC,KAAA7D,EAAAA,EAAAC,EAAAA,IAAAE,EAAAsJ,KAAAtJ,EAAAqJ,SAAArJ,EAAAuJ,gBAAA,SAAAhK,EAAAC,GAAA,GAAAK,GAAAL,EAAA,GAAAD,EAAA,GAAAO,EAAAN,EAAA,GAAAD,EAAA,EAAA,OAAAM,GAAAA,EAAAC,EAAAA,GAAAE,EAAAwJ,QAAAxJ,EAAAuJ,gBAAAvJ,EAAA+H,OAAA,SAAAxI,GAAA,GAAAC,GAAAD,EAAA,GAAAM,EAAAN,EAAA,EAAA,OAAA8B,MAAAqC,KAAAlE,EAAAA,EAAAK,EAAAA,IAAAG,EAAA2I,IAAA3I,EAAA+H,OAAA/H,EAAA4I,cAAA,SAAArJ,GAAA,GAAAC,GAAAD,EAAA,GAAAM,EAAAN,EAAA,EAAA,OAAAC,GAAAA,EAAAK,EAAAA,GAAAG,EAAA6I,OAAA7I,EAAA4I,cAAA5I,EAAAyJ,OAAA,SAAAlK,EAAAC,GAAA,MAAAD,GAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAAAD,GAAAS,EAAA0J,QAAA,SAAAnK,EAAAC,GAAA,MAAAD,GAAA,GAAA,EAAAC,EAAA,GAAAD,EAAA,GAAA,EAAAC,EAAA,GAAAD,GAAAS,EAAAgI,UAAA,SAAAzI,EAAAC,GAAA,GAAAK,GAAAL,EAAA,GAAAM,EAAAN,EAAA,GAAAQ,EAAAH,EAAAA,EAAAC,EAAAA,CAAA,OAAAE,GAAA,IAAAA,EAAA,EAAAqB,KAAAqC,KAAA1D,GAAAT,EAAA,GAAAC,EAAA,GAAAQ,EAAAT,EAAA,GAAAC,EAAA,GAAAQ,GAAAT,GAAAS,EAAA6H,IAAA,SAAAtI,EAAAC,GAAA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAAAQ,EAAA8H,MAAA,SAAAvI,EAAAC,EAAAK,GAAA,GAAAC,GAAAN,EAAA,GAAAK,EAAA,GAAAL,EAAA,GAAAK,EAAA,EAAA,OAAAN,GAAA,GAAAA,EAAA,GAAA,EAAAA,EAAA,GAAAO,EAAAP,GAAAS,EAAAuI,KAAA,SAAAhJ,EAAAC,EAAAK,EAAAC,GAAA,GAAAE,GAAAR,EAAA,GAAA6C,EAAA7C,EAAA,EAAA,OAAAD,GAAA,GAAAS,EAAAF,GAAAD,EAAA,GAAAG,GAAAT,EAAA,GAAA8C,EAAAvC,GAAAD,EAAA,GAAAwC,GAAA9C,GAAAS,EAAAsB,OAAA,SAAA/B,EAAAC,GAAAA,EAAAA,GAAA,CAAA,IAAAK,GAAA,EAAAC,EAAAsB,SAAAC,KAAAM,EAAA,OAAApC,GAAA,GAAA8B,KAAA+B,IAAAvD,GAAAL,EAAAD,EAAA,GAAA8B,KAAA8B,IAAAtD,GAAAL,EAAAD,GAAAS,EAAAkK,cAAA,SAAA3K,EAAAC,EAAAK,GAAA,GAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,EAAA,OAAAD,GAAA,GAAAM,EAAA,GAAAC,EAAAD,EAAA,GAAAG,EAAAT,EAAA,GAAAM,EAAA,GAAAC,EAAAD,EAAA,GAAAG,EAAAT,GAAAS,EAAAmK,eAAA,SAAA5K,EAAAC,EAAAK,GAAA,GAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,EAAA,OAAAD,GAAA,GAAAM,EAAA,GAAAC,EAAAD,EAAA,GAAAG,EAAAH,EAAA,GAAAN,EAAA,GAAAM,EAAA,GAAAC,EAAAD,EAAA,GAAAG,EAAAH,EAAA,GAAAN,GAAAS,EAAA8J,cAAA,SAAAvK,EAAAC,EAAAK,GAAA,GAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,EAAA,OAAAD,GAAA,GAAAM,EAAA,GAAAC,EAAAD,EAAA,GAAAG,EAAAH,EAAA,GAAAN,EAAA,GAAAM,EAAA,GAAAC,EAAAD,EAAA,GAAAG,EAAAH,EAAA,GAAAN,GAAAS,EAAA6J,cAAA,SAAAtK,EAAAC,EAAAK,GAAA,GAAAC,GAAAN,EAAA,GAAAQ,EAAAR,EAAA,EAAA,OAAAD,GAAA,GAAAM,EAAA,GAAAC,EAAAD,EAAA,GAAAG,EAAAH,EAAA,IAAAN,EAAA,GAAAM,EAAA,GAAAC,EAAAD,EAAA,GAAAG,EAAAH,EAAA,IAAAN,GAAAS,EAAAgK,QAAA,WAAA,GAAAzK,GAAAS,EAAAgC,QAAA,OAAA,UAAAxC,EAAAK,EAAAC,EAAAE,EAAAqC,EAAAI,GAAA,GAAAI,GAAAC,CAAA,KAAAjD,IAAAA,EAAA,GAAAC,IAAAA,EAAA,GAAAgD,EAAA9C,EAAAqB,KAAA6H,IAAAlJ,EAAAH,EAAAC,EAAAN,EAAAuI,QAAAvI,EAAAuI,OAAAlF,EAAA/C,EAAAgD,EAAAD,EAAAA,GAAAhD,EAAAN,EAAA,GAAAC,EAAAqD,GAAAtD,EAAA,GAAAC,EAAAqD,EAAA,GAAAR,EAAA9C,EAAAA,EAAAkD,GAAAjD,EAAAqD,GAAAtD,EAAA,GAAAC,EAAAqD,EAAA,GAAAtD,EAAA,EAAA,OAAAC,OAAAQ,EAAAwD,IAAA,SAAAjE,GAAA,MAAA,QAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAS,EAAAgE,YAAA,SAAAzE,EAAAC,GAAA,MAAAD,GAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAAAQ,EAAA6B,OAAA,SAAAtC,EAAAC,GAAA,GAAAK,GAAAN,EAAA,GAAAS,EAAAT,EAAA,GAAA8C,EAAA7C,EAAA,GAAAiD,EAAAjD,EAAA,EAAA,OAAA6B,MAAAS,IAAAjC,EAAAwC,IAAAvC,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAAjC,GAAAwB,KAAAS,IAAAO,KAAAhB,KAAAS,IAAA9B,EAAAyC,IAAA3C,EAAAkB,QAAAK,KAAAU,IAAA,EAAAV,KAAAS,IAAA9B,GAAAqB,KAAAS,IAAAW,KAAAlD,EAAAE,QAAAO,OC1BAZ,OAAAC,OAAAD,OAAAC,WAEAD,OAAAC,OAAA+K,GAAA,gVCFA,SAAAC,GAGA,GAAAC,IACAC,qBAAA,WACA,OAAAnL,OAAAoL,OAAAC,aAAArL,OAAAoL,OAAAE,gBACA,IAAA,oBACA,MAAA,GACA,KAAA,sBACA,SACA,KAAA,qBACA,MAAA,IACA,KAAA,mBACA,MAAA,GAEA,GAAAC,SAAAvL,OAAAqL,YACA,MAAArL,QAAAqL,aAIAG,iCAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAA3J,KAAA6F,IAAA2D,EAAAzD,UAAA/F,KAAAM,GAAA,KACAsJ,EAAA5J,KAAA6F,IAAA2D,EAAAxD,YAAAhG,KAAAM,GAAA,KACAuJ,EAAA7J,KAAA6F,IAAA2D,EAAAvD,YAAAjG,KAAAM,GAAA,KACAwJ,EAAA9J,KAAA6F,IAAA2D,EAAAtD,aAAAlG,KAAAM,GAAA,KAEAyJ,EAAA,GAAAF,EAAAC,GACAE,EAAA,GAAAL,EAAAC,GAEAK,EAAA,GAAApK,cAAA,GAqBA,OApBAoK,GAAA,GAAAF,EACAE,EAAA,GAAA,EACAA,EAAA,MAAAJ,EAAAC,GAAAC,EAAA,IACAE,EAAA,IAAA,EAEAA,EAAA,GAAA,EACAA,EAAA,GAAAD,EACAC,EAAA,IAAAN,EAAAC,GAAAI,EAAA,GACAC,EAAA,IAAA,EAEAA,EAAA,GAAA,EACAA,EAAA,GAAA,EACAA,EAAA,IAAAP,GAAAD,EAAAC,GACAO,EAAA,IAAAP,EAAAD,GAAAA,EAAAC,GAEAO,EAAA,GAAA,EACAA,EAAA,GAAA,EACAA,EAAA,OACAA,EAAA,IAAA,EAEAA,GAGAC,aAAA,WACA,MAAAC,UAAAC,mBAAAD,SAAAE,yBAAAF,SAAAG,sBAAAH,SAAAI,gCAGAC,cAAA,SAAAC,EAAAC,GACA,GAAAC,GAAAC,EACAC,EAAAC,MAAAC,cAAAF,KAKA,IAHAF,EAAA5M,OAAAiN,WACAJ,EAAA7M,OAAAkN,YAEAJ,GAAA,mBAAA5B,GAAAiB,gBAAAjB,EAAAiB,eAAA,CACA,GAAAgB,GAAAL,EAAAM,iBAAA,SAAAC,UACAX,GAAAY,MAAA,EAAAH,EAAAG,MACAZ,EAAAa,OAAAJ,EAAAI,WACA,CACA,GAAAC,GAAAxN,OAAAwN,kBAAA,EACAC,EAAAD,EAAAb,CAEAD,GAAAY,QAAAV,EAAAa,GAAAf,EAAAa,SAAAV,EAAAY,IACAf,EAAAY,MAAAV,EAAAa,EACAf,EAAAa,OAAAV,EAAAY,GAIAf,EAAAgB,MAAAJ,MAAA,OACAZ,EAAAgB,MAAAH,OAAA,QAGAI,aAAA,SAAAC,GACA,MAAAA,GAAAC,OAAAD,EAAAE,YAAA,KAAA,IAGAC,gBAAA,SAAAH,GACA,MAAAA,GAAAC,OAAAD,EAAAE,YAAA,KAAA,IAGAE,kBAAA,SAAAC,GACA,GAAAC,GAAAhD,EAAAyC,aAAAM,EACA,OAAA,QAAAC,GAAA,QAAAA,GAAA,SAAAA,GAGAC,cAAA,SAAAF,GACA,MAAA/C,GAAA8C,kBAAAC,GAAA/C,EAAA6C,gBAAAE,GAAAA,GAIAhD,GAAAC,KAAAA,GACAlL,OPrGA,IAAAoO,cAAA,WAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAA,GAAA3K,GAAA,EAAAA,EAAA2K,EAAA5F,OAAA/E,IAAA,CAAA,GAAA4K,GAAAD,EAAA3K,EAAA4K,GAAAC,WAAAD,EAAAC,aAAA,EAAAD,EAAAE,cAAA,EAAA,SAAAF,KAAAA,EAAAG,UAAA,GAAAC,OAAAC,eAAAP,EAAAE,EAAAM,IAAAN,IAAA,MAAA,UAAA1O,EAAAiP,EAAAC,GAAA,MAAAD,IAAAV,EAAAvO,EAAAmP,UAAAF,GAAAC,GAAAX,EAAAvO,EAAAkP,GAAAlP,OAIA,SAAAmL,GAGA,GAAAiE,GAAA,WACA,QAAAA,KACA,GAAAC,GAAAxO,IAEAf,iBAAAe,KAAAuO,GAEAvO,KAAAyO,YAAA,KACAzO,KAAA0O,YAAA,KACA1O,KAAA2O,WAAA,KAEAtP,OAAAuP,iBAAA,oBAAA,SAAAlE,GACA8D,EAAAC,YAAA/D,EAAAmE,MACAL,EAAAE,YAAAhE,EAAAoE,MACAN,EAAAG,WAAAjE,EAAAqE,OAwDA,MApDAtB,cAAAc,IACAJ,IAAA,yBACAa,MAAA,WACA,MAAA,QAAAhP,KAAAyO,eAGAN,IAAA,eACAa,MAAA,WACA,IAAAhP,KAAAiP,yBACA,MAAApO,MAAAoB,OAAA,EAAA,EAAA,EAAA,EAGA,IAAAiN,GAAA5N,KAAAM,GAAA,IACAwD,EAAApF,KAAAyO,YAAAS,EAAA,EACAvK,EAAA3E,KAAA2O,WAAAO,EAAA,EACAC,EAAAnP,KAAA0O,YAAAQ,EAAA,EACAE,EAAA9N,KAAA+B,IAAAsB,GACA0K,EAAA/N,KAAA+B,IAAA8L,GACAG,EAAAhO,KAAA+B,IAAA+B,GACAmK,EAAAjO,KAAA8B,IAAAuB,GACA6K,EAAAlO,KAAA8B,IAAA+L,GACAM,EAAAnO,KAAA8B,IAAAgC,GAGAC,EAAA+J,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CACA9K,GAAA4K,EAAAF,EAAAC,EAAAF,EAAAI,EAAAC,EACAN,EAAAC,EAAAI,EAAAF,EAAAC,EAAAF,EAAAI,EACArK,EAAAgK,EAAAC,EAAAI,EAAAF,EAAAC,EAAAF,CAEA,IAAAI,GAAA7O,KAAAwB,WAAAsC,EAAAwK,EAAA/J,EAAAC,GAGAsK,EAAApF,KAAAC,uBAAA0E,EAAA,EACAU,GAAA,EAAA,GAAAtO,KAAA8B,IAAAuM,GAAArO,KAAA+B,IAAAsM,IAEAE,EAAAhP,KAAAoB,QACApB,MAAAgC,SAAAgN,EAAAH,EAAAE,EASA,IAAAE,GAAAxO,KAAAqC,KAAA,GAGA,OAFA9C,MAAAgC,SAAAgN,EAAAhP,KAAAwB,YAAAyN,EAAA,EAAA,EAAAA,GAAAD,GAEAA,MAIAtB,IAGAjE,GAAAiE,QAAA,WACA,GAAArP,GAAA,MAEA,QACAmN,YAAA,WAIA,MAHAnN,KACAA,EAAA,GAAAqP,IAEArP,QAIAG,OC3FA,IAAAoO,cAAA,WAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAA,GAAA3K,GAAA,EAAAA,EAAA2K,EAAA5F,OAAA/E,IAAA,CAAA,GAAA4K,GAAAD,EAAA3K,EAAA4K,GAAAC,WAAAD,EAAAC,aAAA,EAAAD,EAAAE,cAAA,EAAA,SAAAF,KAAAA,EAAAG,UAAA,GAAAC,OAAAC,eAAAP,EAAAE,EAAAM,IAAAN,IAAA,MAAA,UAAA1O,EAAAiP,EAAAC,GAAA,MAAAD,IAAAV,EAAAvO,EAAAmP,UAAAF,GAAAC,GAAAX,EAAAvO,EAAAkP,GAAAlP,MAIA4Q,eAAA,WACA,QAAAA,GAAAhE,EAAAiE,GAqBA,QAAAC,KACA,GAAAC,GAAArP,KAAAoB,SACAkO,EAAA,GAAAhP,eAAA,EAAA,EAAA,GAGA,OAFAgP,GAAA,GAAA,IAAA7O,KAAA8O,KAAA,GAAAF,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAAA5O,KAAAM,GACAuO,EAAA,GAAA,IAAA7O,KAAA+O,MAAA,GAAAH,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAAA5O,KAAAM,GACAuO,EAzBAlR,gBAAAe,KAAA+P,GAEA/P,KAAA+L,OAAAA,EACA/L,KAAAgQ,aAAAA,EAAAA,EAAAjE,EACA/L,KAAAsQ,iBAAA,GAAAnP,eAAA,EAAA,EAAA,IACAnB,KAAAmQ,QAAAF,IACAjQ,KAAAuQ,eAAA1P,KAAAoB,SACAjC,KAAAwQ,gBACA/Q,GAAAgR,MAAA,EAAAC,KAAA,EAAAC,OAAA,GACA7L,GAAA2L,MAAA,EAAAC,QAAAC,OAAA,GACAtL,GAAAoL,MAAA,EAAAC,KAAA,EAAAC,OAAA,GACA3N,GAAAyN,MAAA,EAAAC,QAAAC,OAAA,IAEA3Q,KAAA4Q,WACAjM,EAAA,EACAwK,EAAA,GAGAnP,KAAA6Q,WAyGA,MA9FApD,cAAAsC,IACA5B,IAAA,WACAa,MAAA,WACAhP,KAAA8Q,WAAA9Q,KAAA8Q,WAAAC,KAAA/Q,MACAA,KAAAgR,YAAAhR,KAAAgR,YAAAD,KAAA/Q,MACAA,KAAAiR,YAAAjR,KAAAiR,YAAAF,KAAA/Q,MACAA,KAAAkR,UAAAlR,KAAAkR,UAAAH,KAAA/Q,MAEAyL,SAAAmD,iBAAA,UAAA5O,KAAA8Q,YACArF,SAAAmD,iBAAA,QAAA5O,KAAA8Q,YACArF,SAAAmD,iBAAA,UAAA5O,KAAAkR,WACAlR,KAAAgQ,aAAApB,iBAAA,YAAA5O,KAAAiR,gBAGA9C,IAAA,cACAa,MAAA,SAAAlM,GACA2I,SAAAmD,iBAAA,YAAA5O,KAAAgR,aACAhR,KAAA4Q,UAAAO,EAAArO,EAAAsO,QACApR,KAAA4Q,UAAAzB,EAAArM,EAAAuO,QACAvO,EAAAwO,oBAGAnD,IAAA,YACAa,MAAA,WACAvD,SAAA8F,oBAAA,YAAAvR,KAAAgR,aACAhR,KAAAsQ,iBAAAzP,KAAAoB,YAGAkM,IAAA,cACAa,MAAA,SAAAlM,GACA,GAAA0O,GAAA1O,EAAAsO,QAAApR,KAAA4Q,UAAAO,EACAM,EAAA3O,EAAAuO,QAAArR,KAAA4Q,UAAAzB,EACAhG,EAAA7H,KAAA6H,IAAAnJ,KAAA+L,OAAAY,MAAA3M,KAAA+L,OAAAa,OAEA5M,MAAAsQ,iBAAA,IAAA,GAAAmB,EAAAtI,EACAnJ,KAAAsQ,iBAAA,IAAA,GAAAkB,EAAArI,EAEAnJ,KAAA4Q,UAAAO,EAAArO,EAAAsO,QACApR,KAAA4Q,UAAAzB,EAAArM,EAAAuO,WAGAlD,IAAA,aACAa,MAAA,SAAA0C,GAeA,QAAAC,KACA,YAAAD,EAAAE,OAGAxF,MAAAC,cAAAwF,SACAzF,MAAAC,cAAAwF,SAAAC,aAEAjR,KAAA4B,OAAAsP,EAAAxB,eAAAhC,QAAAlC,cAAA2F,iBAIA,QAAA7D,GAAAuD,EAAAhB,GACA,GAAAuB,GAAAF,EAAAvB,eAAA0B,OAAAC,aAAAT,EAAAU,SAAAC,cACAJ,KAGA,IAAAvB,GAAAuB,EAAAtB,QAAAD,SAAAuB,EAAAtB,SAIAsB,EAAAtB,OAAA,IAAAD,EACAqB,EAAAzB,iBAAA2B,EAAAxB,QAAAC,EAAAuB,EAAAvB,OAnCA,GAAAqB,GAAA/R,IAEA,QAAAkS,OAAAC,aAAAT,EAAAY,WACA,IAAA,IAEAX,GACA,MAEA,SAEAxD,EAAAuD,EAAA,YAAAA,EAAAE,KAAA,UA6BAzD,IAAA,UACAa,MAAA,WACAvD,SAAA8F,oBAAA,UAAAvR,KAAA8Q,YACArF,SAAA8F,oBAAA,QAAAvR,KAAA8Q,YACArF,SAAA8F,oBAAA,UAAAvR,KAAAkR,WACAzF,SAAA8F,oBAAA,YAAAvR,KAAAgR,aACAhR,KAAAgQ,aAAAuB,oBAAA,YAAAvR,KAAAiR,aACAjR,KAAAgQ,aAAA,KACAhQ,KAAA+L,OAAA,SAIAgE,KCjIAtC,aAAA,WAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAA,GAAA3K,GAAA,EAAAA,EAAA2K,EAAA5F,OAAA/E,IAAA,CAAA,GAAA4K,GAAAD,EAAA3K,EAAA4K,GAAAC,WAAAD,EAAAC,aAAA,EAAAD,EAAAE,cAAA,EAAA,SAAAF,KAAAA,EAAAG,UAAA,GAAAC,OAAAC,eAAAP,EAAAE,EAAAM,IAAAN,IAAA,MAAA,UAAA1O,EAAAiP,EAAAC,GAAA,MAAAD,IAAAV,EAAAvO,EAAAmP,UAAAF,GAAAC,GAAAX,EAAAvO,EAAAkP,GAAAlP,MAIAoT,YAAA,WACA,QAAAA,GAAAC,EAAAzG,GAmCA,QAAA0G,KACA,MAAAV,GAAAhG,OAAA2G,WAAA,UAAAX,EAAAhG,OAAA2G,WAAA,sBAGA,QAAAC,KACAZ,EAAAa,GAAAC,WAAA,EAAA,EAAA,EAAA,GACAd,EAAAa,GAAAE,WAAA,GACAf,EAAAa,GAAAG,QAAAhB,EAAAa,GAAAI,YACAC,IAGA,QAAAA,KAEA,GAAAC,IACAC,mBAAA,KACAC,iBAAA,KACAC,YAAA,mBACAC,UAAA,WAAA,MAAA,aAAA,YAEAvB,GAAAwB,QAAAxB,EAAAa,GAAAY,gBAEAzB,EAAAa,GAAAa,aAAA1B,EAAAwB,QAAAxB,EAAA2B,gBAAAR,EAAAE,iBAAA,aACArB,EAAAa,GAAAa,aAAA1B,EAAAwB,QAAAxB,EAAA2B,gBAAAR,EAAAC,mBAAA,eACApB,EAAAa,GAAAe,YAAA5B,EAAAwB,SAEAxB,EAAAa,GAAAgB,oBAAA7B,EAAAwB,QAAAxB,EAAAa,GAAAiB,cACAC,MAAA,4CAAA/B,EAAAa,GAAAmB,kBAAAhC,EAAAwB,UAIAxB,EAAAa,GAAAoB,WAAAjC,EAAAwB,SAEAxB,EAAAsB,aACA,KAAA,GAAApQ,GAAA,EAAAA,EAAAiQ,EAAAG,WAAArL,OAAA/E,IAAA,CACA,GAAAgR,GAAAf,EAAAG,WAAApQ,EACA8O,GAAAsB,WAAAY,GAAAlC,EAAAa,GAAAsB,kBAAAnC,EAAAwB,QAAAU,GACAlC,EAAAa,GAAAuB,wBAAApC,EAAAsB,WAAAY,IAGAlC,EAAAuB,WACA,KAAA,GAAAc,GAAA,EAAAA,EAAAlB,EAAAI,SAAAtL,OAAAoM,IAAA,CACA,GAAAC,GAAAnB,EAAAI,SAAAc,EACArC,GAAAuB,SAAAe,GAAAtC,EAAAa,GAAA0B,mBAAAvC,EAAAwB,QAAAc,GACAtC,EAAAa,GAAAuB,wBAAApC,EAAAsB,WAAAgB,KA7EApV,gBAAAe,KAAAuS,EAEA,IAAAR,GAAA/R,IACAA,MAAAuU,SAAA,EACAvU,KAAAwS,MAAAA,EACAxS,KAAA+L,OAAAA,EACA/L,KAAA4S,GAAA,KACA5S,KAAAwU,gBAAA,KACAxU,KAAAyU,WAAA,EACAzU,KAAA0U,SAAA,KACA1U,KAAA2U,QAAA,KACA3U,KAAA4U,oBAAA,KACA5U,KAAA6U,QACAC,YAAA,EACAC,UAAA,EACAC,cAAA,EACAC,cAAA,EACAC,cAAA,EACAC,MAAA,EACAC,IAAA,EACAC,iBAAA,EAGA,KACArV,KAAA4S,GAAAH,IACA,MAAA3P,IAEA,MAAA9C,MAAA4S,OAKAD,SAJAmB,OAAA,gEAwTA,MAlQArG,cAAA8E,IACApE,IAAA,YACAa,MAAA,SAAA+F,GAkBA,GAjBA/U,KAAA6U,OAAAE,UAAAA,EACA/U,KAAA6U,OAAAC,aACA9U,KAAA6U,OAAAM,MAAAG,YAAAC,OAGAhL,KAAAuB,cAAA9L,KAAA+L,OAAA/L,KAAAwV,6BAEAxV,KAAA6U,OAAAC,aACA9U,KAAA6U,OAAAI,cAAAK,YAAAC,OAGAvV,KAAAyV,gBAEAzV,KAAA6U,OAAAC,aACA9U,KAAA6U,OAAAK,cAAAI,YAAAC,OAGAvV,KAAA6U,OAAAG,cAAA,CAEA,GAAAU,GAAA,MAAA1V,KAAA6U,OAAAE,UAAA/U,KAAA6U,OAAAG,cAEAhV,MAAA0U,SAAAvE,QAAA,IAAAnQ,KAAA0U,SAAApE,iBAAA,GAAAoF,EAAA,GACA1V,KAAA0U,SAAAvE,QAAA,IAAAnQ,KAAA0U,SAAApE,iBAAA,GAAAoF,EAAA,EAEA,IAAA5I,GAAAxL,KAAAM,GAAA,IAAA,EACA+T,EAAA9U,KAAAwB,WAAAf,KAAA+B,IAAAyJ,EAAA9M,KAAA0U,SAAAvE,QAAA,IAAA,GAAA7O,KAAA8B,IAAA0J,EAAA9M,KAAA0U,SAAAvE,QAAA,IAAA,GACAyF,EAAA/U,KAAAwB,WAAAf,KAAA+B,IAAAyJ,EAAA9M,KAAA0U,SAAAvE,QAAA,IAAA,EAAA,GAAA7O,KAAA8B,IAAA0J,EAAA9M,KAAA0U,SAAAvE,QAAA,IAGAtP,MAAAgC,SAAA7C,KAAA0U,SAAAnE,eAAAoF,EAAAC;CAMA,GAAAC,GAAAjV,KAAAqB,SACAkK,EAAAC,MAAAC,cAAAF,KAEA,IAAAA,EAAA,CACA,GAAA2J,GAAA3J,EAAAM,iBAAA,QACAsJ,EAAA5J,EAAAM,iBAAA,QACAoJ,GAAAtL,KAAAM,iCAAAiL,EAAAE,uBAAA,GAAA,IACAhW,KAAAiW,QAAA,OAAAJ,GACAA,EAAAtL,KAAAM,iCAAAkL,EAAAC,uBAAA,GAAA,IACAhW,KAAAiW,QAAA,QAAAJ,OACA,CACA,GAAAK,GAAA,MACA,KAAAlW,KAAAuU,UACA2B,EAAAlW,KAAA+L,OAAAY,MAAA,EAAA3M,KAAA+L,OAAAa,OACAhM,KAAAsG,YAAA2O,EAAAvU,KAAAM,GAAA,EAAAsU,EAAA,GAAA,IACAlW,KAAAiW,QAAA,OAAAJ,GACA7V,KAAAiW,QAAA,QAAAJ,KAEAK,EAAAlW,KAAA+L,OAAAY,MAAA3M,KAAA+L,OAAAa,OACAhM,KAAAsG,YAAA2O,EAAAvU,KAAAM,GAAA,EAAAsU,EAAA,GAAA,IACAlW,KAAAiW,QAAA,OAAAJ,IAIA7V,KAAA6U,OAAAC,aACA9U,KAAA4S,GAAAuD,SACAnW,KAAA6U,OAAAO,IAAAE,YAAAC,MACAvV,KAAA6U,OAAAO,IAAApV,KAAA6U,OAAAE,UAAA,IACAqB,QAAAC,IAAArW,KAAA6U,OAAAQ,iBAAA,iBAAArV,KAAA6U,OAAAM,MAAAnV,KAAA6U,OAAAE,WAAA,6BAAA/U,KAAA6U,OAAAI,cAAAjV,KAAA6U,OAAAM,OAAA,wBAAAnV,KAAA6U,OAAAK,cAAAlV,KAAA6U,OAAAI,eAAA,yBAAAjV,KAAA6U,OAAAO,IAAApV,KAAA6U,OAAAK,eAAA,SAAAlV,KAAA6U,OAAAO,IAAApV,KAAA6U,OAAAE,WAAA,MACA/U,KAAA6U,OAAAQ,iBAAA,GAEArV,KAAA6U,OAAAQ,oBAIArV,KAAAsW,OACAtW,KAAA6U,OAAAG,cAAAhV,KAAA6U,OAAAE,aAGA5G,IAAA,UACAa,MAAA,SAAAuH,EAAAC,GA6CA,QAAAC,KACA,GAAAC,GAAA7V,KAAAoB,SACA0U,EAAA9V,KAAAoB,QAEA,IAAAmK,MAAAC,cAAAwF,SAAA,CACA,GAAA+E,GAAAxK,MAAAC,cAAAwF,SAAAgF,UACA,QAAAD,GAAA,OAAAA,EAAAlM,aAAA,mBAAAkM,GAAAlM,aAAA,IAAAkM,EAAAlM,YAAA/F,GAAA,IAAAiS,EAAAlM,YAAAyE,GAAA,IAAAyH,EAAAlM,YAAAtF,GAAA,IAAAwR,EAAAlM,YAAArF,IACAsR,EAAA,GAAAxV,eAAAyV,EAAAlM,YAAA/F,EAAAiS,EAAAlM,YAAAyE,EAAAyH,EAAAlM,YAAAtF,EAAAwR,EAAAlM,YAAArF,SAGAsR,GAAApI,QAAAlC,cAAA2F,cAIA,OAFAnR,MAAAgC,SAAA6T,EAAA3E,EAAA2C,SAAAnE,eAAAoG,GAEAD,EA1DA,GAAA3E,GAAA/R,IACAA,MAAA4S,GAAAoB,WAAAhU,KAAAuT,SAEAvT,KAAA4S,GAAAkE,WAAA9W,KAAA4S,GAAAmE,aAAA/W,KAAAwU,iBACAxU,KAAA4S,GAAAoE,oBAAAhX,KAAAqT,WAAA4D,gBAAA,EAAAjX,KAAA4S,GAAAsE,OAAA,EAAA,EAAA,GAGAlX,KAAA4S,GAAAuE,cAAAnX,KAAA4S,GAAAwE,UACApX,KAAA4S,GAAAyE,YAAArX,KAAA4S,GAAA0E,WAAAtX,KAAA2U,SACA3U,KAAA4S,GAAA2E,UAAAvX,KAAAsT,SAAAkE,SAAA,GAEAxX,KAAA4S,GAAA6E,UAAAzX,KAAAsT,SAAAiD,IAAA,UAAAA,EAAA,EAAA,GACAvW,KAAA4S,GAAA6E,UAAAzX,KAAAsT,SAAAmB,WAAAzU,KAAAyU,WAEA,IAAAiD,GAAA9W,KAAAqB,SACAyU,EAAAD,GACA7V,MAAAoE,SAAA0S,EAAAhB,EAEA,IAAAiB,GAAA/W,KAAAqB,QACArB,MAAA6B,OAAAkV,EAAAnB,EACA,IAAAoB,GAAAhX,KAAAqB,QACArB,MAAAiC,SAAA+U,EAAAF,EAAAC,GAEA3X,KAAA4S,GAAAiF,iBAAA7X,KAAAsT,SAAAwE,UAAA,EAAAF,GAEA,SAAArB,GAEAvW,KAAA4S,GAAAmF,SAAA,EAAA,EAAA/X,KAAA+L,OAAAY,MAAA,EAAA3M,KAAA+L,OAAAa,QAGA,UAAA2J,GAEAvW,KAAA4S,GAAAmF,SAAA/X,KAAA+L,OAAAY,MAAA,EAAA,EAAA3M,KAAA+L,OAAAY,MAAA,EAAA3M,KAAA+L,OAAAa,QAGA,SAAA2J,GAEAvW,KAAA4S,GAAAmF,SAAA,EAAA,EAAA/X,KAAA+L,OAAAY,MAAA3M,KAAA+L,OAAAa,QAIA5M,KAAA4S,GAAAkE,WAAA9W,KAAA4S,GAAAoF,qBAAAhY,KAAA4U,qBACA5U,KAAA4S,GAAAqF,aAAAjY,KAAA4S,GAAAsF,UAAA,EAAAlY,KAAA4S,GAAAuF,eAAA,MAoBAhK,IAAA,OACAa,MAAA,WACA,GAAAR,GAAAxO,IAEAA,MAAAoY,eAAAC,sBAAA,SAAAtD,GACAvG,EAAA8J,UAAAvD,QAIA5G,IAAA,OACAa,MAAA,WACAuJ,qBAAAvY,KAAAoY,mBAGAjK,IAAA,4BACAa,MAAA,WACA,MAAAhP,MAAA4S,GAAA4F,8BAAAxY,KAAA4S,GAAA6F,2BAAAzY,KAAA4S,GAAA8F,0BAAA1Y,KAAA4S,GAAA+F,yBAAA3Y,KAAA4S,GAAA5G,wBAAA,KAGAmC,IAAA,cACAa,MAAA,WACAhP,KAAAwU,gBAAAxU,KAAA4S,GAAAgG,eACA5Y,KAAA4S,GAAAkE,WAAA9W,KAAA4S,GAAAmE,aAAA/W,KAAAwU,gBACA,IAAAqE,UAAA,KAAA,EAAA,KAAA,EACA7Y,MAAA4S,GAAAkG,WAAA9Y,KAAA4S,GAAAmE,aAAA,GAAA5V,cAAA0X,GAAA7Y,KAAA4S,GAAAmG,aAEA/Y,KAAA4U,oBAAA5U,KAAA4S,GAAAgG,eACA5Y,KAAA4S,GAAAkE,WAAA9W,KAAA4S,GAAAoF,qBAAAhY,KAAA4U,oBACA,IAAAoE,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACAhZ,MAAA4S,GAAAkG,WAAA9Y,KAAA4S,GAAAoF,qBAAA,GAAAiB,aAAAD,GAAAhZ,KAAA4S,GAAAmG,gBAGA5K,IAAA,eACAa,MAAA,WACAhP,KAAA2U,QAAA3U,KAAA4S,GAAAsG,gBACAlZ,KAAA4S,GAAAyE,YAAArX,KAAA4S,GAAA0E,WAAAtX,KAAA2U,SACA3U,KAAA4S,GAAAuG,cAAAnZ,KAAA4S,GAAA0E,WAAAtX,KAAA4S,GAAAwG,mBAAApZ,KAAA4S,GAAAyG,QACArZ,KAAA4S,GAAAuG,cAAAnZ,KAAA4S,GAAA0E,WAAAtX,KAAA4S,GAAA0G,mBAAAtZ,KAAA4S,GAAAyG,QACArZ,KAAA4S,GAAAuG,cAAAnZ,KAAA4S,GAAA0E,WAAAtX,KAAA4S,GAAA2G,eAAAvZ,KAAA4S,GAAA4G,eACAxZ,KAAA4S,GAAAuG,cAAAnZ,KAAA4S,GAAA0E,WAAAtX,KAAA4S,GAAA6G,eAAAzZ,KAAA4S,GAAA4G,eACAxZ,KAAA4S,GAAAyE,YAAArX,KAAA4S,GAAA0E,WAAA,SAGAnJ,IAAA,gBACAa,MAAA,WACAhP,KAAA4S,GAAAyE,YAAArX,KAAA4S,GAAA0E,WAAAtX,KAAA2U,SACA3U,KAAA4S,GAAA8G,YAAA1Z,KAAA4S,GAAA+G,qBAAA,GACA3Z,KAAA4S,GAAAgH,WAAA5Z,KAAA4S,GAAA0E,WAAA,EAAAtX,KAAA4S,GAAAiH,IAAA7Z,KAAA4S,GAAAiH,IAAA7Z,KAAA4S,GAAAkH,cAAA9Z,KAAAwS,OACAxS,KAAA4S,GAAAyE,YAAArX,KAAA4S,GAAA0E,WAAA,SAGAnJ,IAAA,gBACAa,MAAA,SAAAyF,GAGA,QAAAsF,GAAAtF,GACA,OAAAA,EAAApC,eACA,IAAA,OACA,IAAA,KACA,IAAA,IACA,IAAA,kBACA,MAAA,EAEA,SACA,MAAA,IAXArS,KAAAyU,WAAAsF,EAAAtF,MAgBAtG,IAAA,cACAa,MAAA,SAAA0F,GACA1U,KAAA0U,SAAAA,KAGAvG,IAAA,cACAa,MAAA,SAAAuF,GACAvU,KAAAuU,SAAAA,KAGApG,IAAA,kBACAa,MAAA,SAAAgL,EAAApI,GACA,GAAAqI,GAAA,EAEA,KAAA5a,OAAAC,SAAAD,OAAAC,OAAA0a,GACA,MAAA,KAGA,IAAAE,GAAA7a,OAAAC,OAAA0a,EAEA,IAAA,eAAApI,EACAqI,EAAAja,KAAA4S,GAAAuH,aAAAna,KAAA4S,GAAAwH,qBACA,CAAA,GAAA,aAAAxI,EAGA,MAAA,KAFAqI,GAAAja,KAAA4S,GAAAuH,aAAAna,KAAA4S,GAAAyH,eAQA,MAHAra,MAAA4S,GAAA0H,aAAAL,EAAAC,GACAla,KAAA4S,GAAA2H,cAAAN,GAEAja,KAAA4S,GAAA4H,mBAAAP,EAAAja,KAAA4S,GAAA6H,gBAKAR,GAJAnG,MAAA,4CAAA9T,KAAA4S,GAAA8H,iBAAAT,IACA,SAMA9L,IAAA,UACAa,MAAA,WACAhP,KAAA2a,OACA3a,KAAAwS,MAAA,KACAxS,KAAA+L,OAAA,KACA/L,KAAA0U,SAAA,SAIAnC,MCxVA,SAAAjI,GAGA,GAAAsQ,GAAA,QAAAA,KACA3b,gBAAAe,KAAA4a,EAGA5a,MAAAmM,MAAA,KACAnM,KAAA6R,SAAA,KAEAgJ,UAAAC,cACAD,UAAAC,eAAAC,KAAA3O,MAAA4O,kBA+BA1Q,GAAA8B,MAAA,WACA,GAAAlN,GAAA,MAEA,QACAmN,YAAA,WAIA,MAHAnN,KACAA,EAAA,GAAA0b,IAEA1b,QAIAG,OCxDA,IAAAoO,cAAA,WAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAA,GAAA3K,GAAA,EAAAA,EAAA2K,EAAA5F,OAAA/E,IAAA,CAAA,GAAA4K,GAAAD,EAAA3K,EAAA4K,GAAAC,WAAAD,EAAAC,aAAA,EAAAD,EAAAE,cAAA,EAAA,SAAAF,KAAAA,EAAAG,UAAA,GAAAC,OAAAC,eAAAP,EAAAE,EAAAM,IAAAN,IAAA,MAAA,UAAA1O,EAAAiP,EAAAC,GAAA,MAAAD,IAAAV,EAAAvO,EAAAmP,UAAAF,GAAAC,GAAAX,EAAAvO,EAAAkP,GAAAlP,MAiBA8b,YAAA,WACA,QAAAA,GAAAC,GACA,GAAA1M,GAAAxO,KAEAmb,EAAAC,UAAApT,QAAA,GAAA4C,SAAAwQ,UAAA,MAAAA,UAAA,EAEAnc,iBAAAe,KAAAib,GAEAjb,KAAAwS,MAAA0I,EACAlb,KAAA+L,OAAAN,SAAA4P,cAAA,UACArb,KAAA+L,OAAAuP,UAAAtb,KAAAwS,MAAA8I,UACAtb,KAAA+L,OAAAuP,UAAAxX,IAAA,SACA9D,KAAA+L,OAAAgB,MAAAwO,QAAA,OAEAvb,KAAAwS,MAAAgJ,WAAAC,aAAAzb,KAAA+L,OAAA/L,KAAAwS,OACAxS,KAAA0b,MAAA,GAAAnJ,aAAAvS,KAAAwS,MAAAxS,KAAA+L,QAEA/L,KAAA0b,MAAA9I,KAIArI,KAAAuB,cAAA9L,KAAA+L,OAAA/L,KAAA0b,MAAAlG,6BAEAxV,KAAA0U,SAAA,GAAA3E,gBAAA/P,KAAA+L,OAAAoP,EAAAnL,cACAhQ,KAAA0b,MAAAC,YAAA3b,KAAA0U,UACA1U,KAAA0b,MAAAE,cACA5b,KAAA0b,MAAAG,eAEA7b,KAAAmV,MAAAnV,KAAAmV,MAAApE,KAAA/Q,MACAA,KAAAwS,MAAA5D,iBAAA,UAAA5O,KAAAmV,OAEAnV,KAAA8b,YAAA,SAAAvH,GACA,MAAA/F,GAAAkN,MAAAI,YAAAvH,KA0BA,MAtBA9G,cAAAwN,IACA9M,IAAA,QACAa,MAAA,WACAhP,KAAA0b,MAAApF,OACAtW,KAAA+L,OAAAgB,MAAAwO,QAAA,GACAvb,KAAAwS,MAAAzF,MAAAwO,QAAA,OACAvb,KAAAwS,MAAAjB,oBAAA,UAAAvR,KAAAmV,UAGAhH,IAAA,UACAa,MAAA,WACAhP,KAAA0b,MAAAK,UACA/b,KAAA0U,SAAAqH,UAEA/b,KAAAwS,MAAAgJ,WAAAQ,YAAAhc,KAAA+L,QACA/L,KAAA+L,OAAA,KAEA/L,KAAAwS,MAAAzF,MAAAwO,QAAA,GACAvb,KAAAwS,MAAA,SAIAyI,IAGA5b,QAAA4b,YAAAA","file":"player.min.js","sourcesContent":["\"use strict\";\n\nwindow.shader = window.shader || {};\n\nwindow.shader.fs = \"\\n  varying mediump vec3 vDirection;\\n  uniform mediump float eye;\\n  uniform mediump float projection;\\n\\n  uniform sampler2D uSampler;\\n\\n  #define PI 3.1415926535897932384626433832795\\n\\n  mediump vec4 directionToColor(mediump vec3 direction, mediump float eye, mediump float projection) {\\n    /*\\n    * Input: a direction.  +x = right, +y = up, +z = backward.\\n    *        an eye. left = 0, right = 1.\\n    *        a projection. see ProjectionEnum in JS file for enum\\n    * Output: a color from the video\\n    *\\n    * Bug alert: the control flow here may screw up texture filtering.\\n    */\\n\\n    mediump float theta = atan(direction.x, -1.0 * direction.z);\\n    mediump float phi = atan(direction.y, length(direction.xz));\\n\\n    /*\\n    * The Nexus 7 and the Moto X (and possibly many others) have\\n    * a buggy atan2 implementation that screws up when the numerator\\n    * (the first argument) is too close to zero.  (The 1e-4 is carefully\\n    * chosen: 1e-5 doesn't fix the problem.\\n    */\\n    if (abs(direction.x) < 1e-4 * abs(direction.z))\\n    theta = 0.5*PI * (1.0 - sign(-1.0 * direction.z));\\n    if (abs(direction.y) < 1e-4 * length(direction.xz))\\n    phi = 0.0;\\n\\n    // Uncomment to debug the transformations.\\n    // return vec4(theta / (2. * PI) + 0.5, phi / (2. * PI) + 0.5, 0., 0.);\\n\\n    if (projection == 0.) {\\n      // Projection == 0: equirectangular projection\\n      return texture2D(uSampler, vec2(mod(theta / (2.0*PI), 1.0), phi / PI + 0.5));\\n    } else {\\n      // Projection == 1: equirectangular top/bottom 3D projection\\n      eye = 1. - eye;\\n      return texture2D(uSampler, vec2(mod(theta / (2.0*PI), 1.0), ((phi / PI + 0.5) + eye)/ 2.));\\n    }\\n  }\\n\\n  void main(void) {\\n    gl_FragColor = directionToColor(vDirection, eye, projection);\\n  }\\n\";","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n(function (global) {\n  'use strict';\n\n  var PhoneVR = function () {\n    function PhoneVR() {\n      var _this = this;\n\n      _classCallCheck(this, PhoneVR);\n\n      this.deviceAlpha = null;\n      this.deviceGamma = null;\n      this.deviceBeta = null;\n\n      window.addEventListener('deviceorientation', function (orientation) {\n        _this.deviceAlpha = orientation.alpha;\n        _this.deviceGamma = orientation.gamma;\n        _this.deviceBeta = orientation.beta;\n      });\n    }\n\n    _createClass(PhoneVR, [{\n      key: 'orientationIsAvailable',\n      value: function orientationIsAvailable() {\n        return this.deviceAlpha !== null;\n      }\n    }, {\n      key: 'rotationQuat',\n      value: function rotationQuat() {\n        if (!this.orientationIsAvailable()) {\n          return quat.create(1, 0, 0, 0);\n        }\n\n        var degtorad = Math.PI / 180; // Degree-to-Radian conversion\n        var z = this.deviceAlpha * degtorad / 2;\n        var x = this.deviceBeta * degtorad / 2;\n        var y = this.deviceGamma * degtorad / 2;\n        var cX = Math.cos(x);\n        var cY = Math.cos(y);\n        var cZ = Math.cos(z);\n        var sX = Math.sin(x);\n        var sY = Math.sin(y);\n        var sZ = Math.sin(z);\n\n        // ZXY quaternion construction.\n        var w = cX * cY * cZ - sX * sY * sZ;\n        x = sX * cY * cZ - cX * sY * sZ;\n        y = cX * sY * cZ + sX * cY * sZ;\n        z = cX * cY * sZ + sX * sY * cZ;\n\n        var deviceQuaternion = quat.fromValues(x, y, z, w);\n\n        // Correct for the screen orientation.\n        var screenOrientation = util.getScreenOrientation() * degtorad / 2;\n        var screenTransform = [0, 0, -Math.sin(screenOrientation), Math.cos(screenOrientation)];\n\n        var deviceRotation = quat.create();\n        quat.multiply(deviceRotation, deviceQuaternion, screenTransform);\n\n        // deviceRotation is the quaternion encoding of the transformation\n        // from camera coordinates to world coordinates.  The problem is that\n        // our shader uses conventional OpenGL coordinates\n        // (+x = right, +y = up, +z = backward), but the DeviceOrientation\n        // spec uses different coordinates (+x = East, +y = North, +z = up).\n        // To fix the mismatch, we need to fix this.  We'll arbitrarily choose\n        // North to correspond to -z (the default camera direction).\n        var r22 = Math.sqrt(0.5);\n        quat.multiply(deviceRotation, quat.fromValues(-r22, 0, 0, r22), deviceRotation);\n\n        return deviceRotation;\n      }\n    }]);\n\n    return PhoneVR;\n  }();\n\n  global.PhoneVR = function () {\n    var instance = void 0;\n\n    return {\n      getInstance: function getInstance() {\n        if (!instance) {\n          instance = new PhoneVR();\n        }\n        return instance;\n      }\n    };\n  }();\n})(window);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PlayerControls = function () {\n  function PlayerControls(canvas, controlLayer) {\n    _classCallCheck(this, PlayerControls);\n\n    this.canvas = canvas;\n    this.controlLayer = controlLayer ? controlLayer : canvas;\n    this.manualRotateRate = new Float32Array([0, 0, 0]); // Vector, camera-relative\n    this.latlong = getLatlong();\n    this.manualRotation = quat.create();\n    this.manualControls = {\n      a: { index: 1, sign: 1, active: 0 },\n      d: { index: 1, sign: -1, active: 0 },\n      w: { index: 0, sign: 1, active: 0 },\n      s: { index: 0, sign: -1, active: 0 }\n    };\n    this.mouseMove = {\n      x: 0,\n      y: 0\n    };\n\n    this.initKeys();\n\n    function getLatlong() {\n      var originRotation = quat.create();\n      var latlong = new Float32Array([0, 0, 0]);\n      latlong[0] = Math.asin(2 * (originRotation[0] * originRotation[2] - originRotation[1] * originRotation[3])) * 180 / Math.PI;\n      latlong[1] = Math.atan2(2 * (originRotation[0] * originRotation[1] + originRotation[2] * originRotation[3]), 1 - 2 * (originRotation[1] * originRotation[1] + originRotation[2] * originRotation[2])) * 180 / Math.PI;\n      return latlong;\n    }\n  }\n\n  _createClass(PlayerControls, [{\n    key: 'initKeys',\n    value: function initKeys() {\n      this.onKeyPress = this.onKeyPress.bind(this);\n      this.onMouseMove = this.onMouseMove.bind(this);\n      this.onMouseDown = this.onMouseDown.bind(this);\n      this.onMouseUp = this.onMouseUp.bind(this);\n\n      document.addEventListener('keydown', this.onKeyPress);\n      document.addEventListener('keyup', this.onKeyPress);\n      document.addEventListener('mouseup', this.onMouseUp);\n      this.controlLayer.addEventListener('mousedown', this.onMouseDown);\n    }\n  }, {\n    key: 'onMouseDown',\n    value: function onMouseDown(e) {\n      document.addEventListener('mousemove', this.onMouseMove);\n      this.mouseMove.X = e.clientX;\n      this.mouseMove.y = e.clientY;\n      e.preventDefault();\n    }\n  }, {\n    key: 'onMouseUp',\n    value: function onMouseUp() {\n      document.removeEventListener('mousemove', this.onMouseMove);\n      this.manualRotateRate = quat.create();\n    }\n  }, {\n    key: 'onMouseMove',\n    value: function onMouseMove(e) {\n      var delX = e.clientX - this.mouseMove.X;\n      var delY = e.clientY - this.mouseMove.y;\n      var min = Math.min(this.canvas.width, this.canvas.height);\n\n      this.manualRotateRate[0] += -delY * 2 / min;\n      this.manualRotateRate[1] += -delX * 2 / min;\n\n      this.mouseMove.X = e.clientX;\n      this.mouseMove.y = e.clientY;\n    }\n  }, {\n    key: 'onKeyPress',\n    value: function onKeyPress(event) {\n      var self = this;\n\n      switch (String.fromCharCode(event.charCode)) {\n        case 'z':\n          {\n            resetSensor();\n            break;\n          }\n        default:\n          {\n            key(event, event.type === 'keydown' ? 1 : -1);\n          }\n      }\n\n      function resetSensor() {\n        if (event.type === 'keydown') {\n          return;\n        }\n        if (!!webVR.getInstance().vrSensor) {\n          webVR.getInstance().vrSensor.zeroSensor();\n        } else {\n          quat.invert(self.manualRotation, PhoneVR.getInstance().rotationQuat());\n        }\n      }\n\n      function key(event, sign) {\n        var control = self.manualControls[String.fromCharCode(event.keyCode).toLowerCase()];\n        if (!control) {\n          return;\n        }\n        if (sign === 1 && control.active || sign === -1 && !control.active) {\n          return;\n        }\n\n        control.active = sign === 1;\n        self.manualRotateRate[control.index] += sign * control.sign;\n      }\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      document.removeEventListener('keydown', this.onKeyPress);\n      document.removeEventListener('keyup', this.onKeyPress);\n      document.removeEventListener('mouseup', this.onMouseUp);\n      document.removeEventListener('mousemove', this.onMouseMove);\n      this.controlLayer.removeEventListener('mousedown', this.onMouseDown);\n      this.controlLayer = null;\n      this.canvas = null;\n    }\n  }]);\n\n  return PlayerControls;\n}();","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PlayerWebGL = function () {\n  function PlayerWebGL(video, canvas) {\n    _classCallCheck(this, PlayerWebGL);\n\n    var self = this;\n    this.eyeCount = 1;\n    this.video = video;\n    this.canvas = canvas;\n    this.gl = null;\n    this.positionsBuffer = null;\n    this.projection = 0;\n    this.controls = null;\n    this.texture = null;\n    this.verticesIndexBuffer = null;\n    this.timing = {\n      showTiming: false, // Switch to true to show frame times in the console\n      frameTime: 0,\n      prevFrameTime: 0,\n      canvasResized: 0,\n      textureLoaded: 0,\n      start: 0,\n      end: 0,\n      framesSinceIssue: 0\n    };\n\n    try {\n      this.gl = getWebGLContext();\n    } catch (e) {}\n\n    if (!this.gl) {\n      alert('Unable to initialize WebGL. Your browser may not support it.');\n      return;\n    }\n\n    init();\n\n    function getWebGLContext() {\n      return self.canvas.getContext('webgl') || self.canvas.getContext('experimental-webgl');\n    }\n\n    function init() {\n      self.gl.clearColor(0.0, 0.0, 0.0, 0.0);\n      self.gl.clearDepth(1.0);\n      self.gl.disable(self.gl.DEPTH_TEST);\n      loadShader();\n    }\n\n    function loadShader() {\n      // Todo extract\n      var params = {\n        fragmentShaderName: 'fs',\n        vertexShaderName: 'vs',\n        attributes: ['aVertexPosition'],\n        uniforms: ['uSampler', 'eye', 'projection', 'proj_inv']\n      };\n      self.program = self.gl.createProgram();\n\n      self.gl.attachShader(self.program, self.getShaderByName(params.vertexShaderName, 'x-vertex'));\n      self.gl.attachShader(self.program, self.getShaderByName(params.fragmentShaderName, 'x-fragment'));\n      self.gl.linkProgram(self.program);\n\n      if (!self.gl.getProgramParameter(self.program, self.gl.LINK_STATUS)) {\n        alert('Unable to initialize the shader program: ' + self.gl.getProgramInfoLog(self.program));\n        //  Todo return?\n      }\n\n      self.gl.useProgram(self.program);\n\n      self.attributes = {};\n      for (var i = 0; i < params.attributes.length; i++) {\n        var attributeName = params.attributes[i];\n        self.attributes[attributeName] = self.gl.getAttribLocation(self.program, attributeName);\n        self.gl.enableVertexAttribArray(self.attributes[attributeName]);\n      }\n\n      self.uniforms = {};\n      for (var _i = 0; _i < params.uniforms.length; _i++) {\n        var uniformName = params.uniforms[_i];\n        self.uniforms[uniformName] = self.gl.getUniformLocation(self.program, uniformName);\n        self.gl.enableVertexAttribArray(self.attributes[uniformName]);\n      }\n    }\n  }\n\n  _createClass(PlayerWebGL, [{\n    key: 'drawScene',\n    value: function drawScene(frameTime) {\n      this.timing.frameTime = frameTime;\n      if (this.timing.showTiming) {\n        this.timing.start = performance.now();\n      }\n\n      util.setCanvasSize(this.canvas, this.getBackingStorePixelRatio());\n\n      if (this.timing.showTiming) {\n        this.timing.canvasResized = performance.now();\n      }\n\n      this.updateTexture();\n\n      if (this.timing.showTiming) {\n        this.timing.textureLoaded = performance.now();\n      }\n\n      if (this.timing.prevFrameTime) {\n        // Apply manual controls.\n        var interval = (this.timing.frameTime - this.timing.prevFrameTime) * 0.001;\n\n        this.controls.latlong[0] += this.controls.manualRotateRate[0] * interval * 90;\n        this.controls.latlong[1] += this.controls.manualRotateRate[1] * interval * 90;\n\n        var ratio = Math.PI / 180 / 2;\n        var yaw = quat.fromValues(Math.cos(ratio * this.controls.latlong[1]), 0, -Math.sin(ratio * this.controls.latlong[1]), 0);\n        var pitch = quat.fromValues(Math.cos(ratio * this.controls.latlong[0]), 0, 0, -Math.sin(ratio * this.controls.latlong[0]));\n\n        // this works but then the originRotation is not applied\n        quat.multiply(this.controls.manualRotation, yaw, pitch);\n\n        // FIXME: trying to do quat.multiply with originRotation (to apply original offset)\n        // literally makes the world spin; need to get latlong from originRotation\n      }\n\n      var perspectiveMatrix = mat4.create();\n      var vrHMD = webVR.getInstance().vrHMD;\n\n      if (!!vrHMD) {\n        var leftParams = vrHMD.getEyeParameters('left');\n        var rightParams = vrHMD.getEyeParameters('right');\n        perspectiveMatrix = util.mat4PerspectiveFromVRFieldOfView(leftParams.recommendedFieldOfView, 0.1, 10);\n        this.drawEye('left', perspectiveMatrix);\n        perspectiveMatrix = util.mat4PerspectiveFromVRFieldOfView(rightParams.recommendedFieldOfView, 0.1, 10);\n        this.drawEye('right', perspectiveMatrix);\n      } else {\n        var _ratio = void 0;\n        if (this.eyeCount === 2) {\n          _ratio = this.canvas.width / 2 / this.canvas.height;\n          mat4.perspective(perspectiveMatrix, Math.PI / 2, _ratio, 0.1, 10);\n          this.drawEye('left', perspectiveMatrix);\n          this.drawEye('right', perspectiveMatrix);\n        } else {\n          _ratio = this.canvas.width / this.canvas.height;\n          mat4.perspective(perspectiveMatrix, Math.PI / 2, _ratio, 0.1, 10);\n          this.drawEye('both', perspectiveMatrix);\n        }\n      }\n\n      if (this.timing.showTiming) {\n        this.gl.finish();\n        this.timing.end = performance.now();\n        if (this.timing.end - this.timing.frameTime > 20) {\n          console.log(this.timing.framesSinceIssue + ' Frame time: ' + (this.timing.start - this.timing.frameTime) + 'ms animation frame lag + ' + (this.timing.canvasResized - this.timing.start) + 'ms canvas resized + ' + (this.timing.textureLoaded - this.timing.canvasResized) + 'ms to load texture + ' + (this.timing.end - this.timing.textureLoaded) + 'ms = ' + (this.timing.end - this.timing.frameTime) + 'ms');\n          this.timing.framesSinceIssue = 0;\n        } else {\n          this.timing.framesSinceIssue++;\n        }\n      }\n\n      this.play();\n      this.timing.prevFrameTime = this.timing.frameTime;\n    }\n  }, {\n    key: 'drawEye',\n    value: function drawEye(eye, projectionMatrix) {\n      var self = this;\n      this.gl.useProgram(this.program);\n\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.positionsBuffer);\n      this.gl.vertexAttribPointer(this.attributes.aVertexPosition, 2, this.gl.FLOAT, false, 0, 0);\n\n      // Specify the texture to map onto the faces.\n      this.gl.activeTexture(this.gl.TEXTURE0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\n      this.gl.uniform1i(this.uniforms.uSampler, 0);\n\n      this.gl.uniform1f(this.uniforms.eye, eye === 'right' ? 1 : 0);\n      this.gl.uniform1f(this.uniforms.projection, this.projection);\n\n      var rotation = mat4.create();\n      var totalRotation = getTotalRotation();\n      mat4.fromQuat(rotation, totalRotation);\n\n      var projectionInverse = mat4.create();\n      mat4.invert(projectionInverse, projectionMatrix);\n      var inv = mat4.create();\n      mat4.multiply(inv, rotation, projectionInverse);\n\n      this.gl.uniformMatrix4fv(this.uniforms.proj_inv, false, inv);\n\n      if (eye === 'left') {\n        // Left eye\n        this.gl.viewport(0, 0, this.canvas.width / 2, this.canvas.height);\n      }\n\n      if (eye === 'right') {\n        // Right eye\n        this.gl.viewport(this.canvas.width / 2, 0, this.canvas.width / 2, this.canvas.height);\n      }\n\n      if (eye === 'both') {\n        // Both eyes\n        this.gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n      }\n\n      // Draw\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.verticesIndexBuffer);\n      this.gl.drawElements(this.gl.TRIANGLES, 6, this.gl.UNSIGNED_SHORT, 0);\n\n      function getTotalRotation() {\n        var totalRotation = quat.create();\n        var sensorOrientation = quat.create();\n\n        if (!!webVR.getInstance().vrSensor) {\n          var state = webVR.getInstance().vrSensor.getState();\n          if (state !== null && state.orientation !== null && typeof state.orientation !== 'undefined' && state.orientation.x !== 0 && state.orientation.y !== 0 && state.orientation.z !== 0 && state.orientation.w !== 0) {\n            sensorOrientation = new Float32Array([state.orientation.x, state.orientation.y, state.orientation.z, state.orientation.w]);\n          }\n        } else {\n          sensorOrientation = PhoneVR.getInstance().rotationQuat();\n        }\n        quat.multiply(totalRotation, self.controls.manualRotation, sensorOrientation);\n\n        return totalRotation;\n      }\n    }\n  }, {\n    key: 'play',\n    value: function play() {\n      var _this = this;\n\n      this.reqAnimFrameID = requestAnimationFrame(function (frameTime) {\n        _this.drawScene(frameTime);\n      });\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      cancelAnimationFrame(this.reqAnimFrameID);\n    }\n  }, {\n    key: 'getBackingStorePixelRatio',\n    value: function getBackingStorePixelRatio() {\n      return this.gl.webkitBackingStorePixelRatio || this.gl.mozBackingStorePixelRatio || this.gl.msBackingStorePixelRatio || this.gl.oBackingStorePixelRatio || this.gl.backingStorePixelRatio || 1;\n    }\n  }, {\n    key: 'initBuffers',\n    value: function initBuffers() {\n      this.positionsBuffer = this.gl.createBuffer();\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.positionsBuffer);\n      var positions = [-1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0];\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(positions), this.gl.STATIC_DRAW);\n\n      this.verticesIndexBuffer = this.gl.createBuffer();\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.verticesIndexBuffer);\n      var vertexIndices = [0, 1, 2, 0, 2, 3];\n      this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(vertexIndices), this.gl.STATIC_DRAW);\n    }\n  }, {\n    key: 'initTextures',\n    value: function initTextures() {\n      this.texture = this.gl.createTexture();\n      this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n    }\n  }, {\n    key: 'updateTexture',\n    value: function updateTexture() {\n      this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\n      this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, true);\n      this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGB, this.gl.RGB, this.gl.UNSIGNED_BYTE, this.video);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n    }\n  }, {\n    key: 'setProjection',\n    value: function setProjection(projection) {\n      this.projection = getCustomProjection(projection);\n\n      function getCustomProjection(projection) {\n        switch (projection.toLowerCase()) {\n          case 'mono':\n          case '2d':\n          case '0':\n          case 'equirectangular':\n            return 0;\n          // Otherwise, it could be 'stereo', '3d', '1', 'equirectangular 3d', etc.\n          default:\n            return 1;\n        }\n      }\n    }\n  }, {\n    key: 'setControls',\n    value: function setControls(controls) {\n      this.controls = controls;\n    }\n  }, {\n    key: 'setEyeCount',\n    value: function setEyeCount(eyeCount) {\n      this.eyeCount = eyeCount;\n    }\n  }, {\n    key: 'getShaderByName',\n    value: function getShaderByName(name, type) {\n      var result = '';\n\n      if (!window.shader || !window.shader[name]) {\n        return null;\n      }\n\n      var theSource = window.shader[name];\n\n      if (type === 'x-fragment') {\n        result = this.gl.createShader(this.gl.FRAGMENT_SHADER);\n      } else if (type === 'x-vertex') {\n        result = this.gl.createShader(this.gl.VERTEX_SHADER);\n      } else {\n        return null; // Unknown shader type\n      }\n\n      this.gl.shaderSource(result, theSource);\n      this.gl.compileShader(result);\n\n      if (!this.gl.getShaderParameter(result, this.gl.COMPILE_STATUS)) {\n        alert('An error occurred compiling the shaders: ' + this.gl.getShaderInfoLog(result));\n        return null;\n      }\n\n      return result;\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.stop();\n      this.video = null;\n      this.canvas = null;\n      this.controls = null;\n    }\n  }]);\n\n  return PlayerWebGL;\n}();","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n(function (global) {\n  'use strict';\n\n  var WebVr = function WebVr() {\n    _classCallCheck(this, WebVr);\n\n    var self = this;\n    this.vrHMD = null;\n    this.vrSensor = null;\n\n    if (navigator.getVRDevices) {\n      navigator.getVRDevices().then(webVR.vrDeviceCallback);\n    }\n\n    function vrDeviceCallback(vrdevs) {\n      for (var i = 0; i < vrdevs.length; ++i) {\n        // Todo _.find\n        if (vrdevs[i] instanceof HMDVRDevice) {\n          self.vrHMD = vrdevs[i];\n          break;\n        }\n      }\n\n      if (!self.vrHMD) {\n        return;\n      }\n\n      // Then, find that HMD's position sensor\n      for (var _i = 0; _i < vrdevs.length; ++_i) {\n        // Todo _.find\n        if (vrdevs[_i] instanceof PositionSensorVRDevice && vrdevs[_i].hardwareUnitId === self.vrHMD.hardwareUnitId) {\n          self.vrSensor = vrdevs[_i];\n          break;\n        }\n      }\n\n      if (!self.vrSensor) {\n        alert('Found an HMD, but didn\\'t find its orientation sensor?');\n      }\n    }\n  };\n\n  global.webVR = function () {\n    var instance = void 0;\n\n    return {\n      getInstance: function getInstance() {\n        if (!instance) {\n          instance = new WebVr();\n        }\n        return instance;\n      }\n    };\n  }();\n})(window);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * eleVR Web Player: A web player for 360 video on the Oculus\n * Copyright (C) 2014 Andrea Hawksley and Andrew Lutomirski\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the Mozilla Public License; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n */\n\nvar EleVRPlayer = function () {\n  function EleVRPlayer(sourceVideo) {\n    var _this = this;\n\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    _classCallCheck(this, EleVRPlayer);\n\n    this.video = sourceVideo;\n    this.canvas = document.createElement('canvas');\n    this.canvas.classList = this.video.classList;\n    this.canvas.classList.add('elevr');\n    this.canvas.style.display = 'none';\n\n    this.video.parentNode.insertBefore(this.canvas, this.video);\n    this.webGL = new PlayerWebGL(this.video, this.canvas);\n\n    if (!this.webGL.gl) {\n      return;\n    }\n\n    util.setCanvasSize(this.canvas, this.webGL.getBackingStorePixelRatio());\n\n    this.controls = new PlayerControls(this.canvas, options.controlLayer);\n    this.webGL.setControls(this.controls);\n    this.webGL.initBuffers();\n    this.webGL.initTextures();\n\n    this.start = this.start.bind(this);\n    this.video.addEventListener('playing', this.start);\n\n    this.setEyeCount = function (eyeCount) {\n      return _this.webGL.setEyeCount(eyeCount);\n    };\n  }\n\n  _createClass(EleVRPlayer, [{\n    key: 'start',\n    value: function start() {\n      this.webGL.play();\n      this.canvas.style.display = '';\n      this.video.style.display = 'none';\n      this.video.removeEventListener('playing', this.start);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.webGL.destroy();\n      this.controls.destroy();\n\n      this.video.parentNode.removeChild(this.canvas);\n      this.canvas = null;\n\n      this.video.style.display = '';\n      this.video = null;\n    }\n  }]);\n\n  return EleVRPlayer;\n}();\n\nwindow.EleVRPlayer = EleVRPlayer;","/**\n * @fileoverview gl-matrix - High performance matrix and vector operations\n * @author Brandon Jones\n * @author Colin MacKenzie IV\n * @version 2.3.2\n */\n\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n!function(t,a){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var n=a();for(var r in n)(\"object\"==typeof exports?exports:t)[r]=n[r]}}(this,function(){return function(t){function a(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return t[r].call(o.exports,o,o.exports,a),o.loaded=!0,o.exports}var n={};return a.m=t,a.c=n,a.p=\"\",a(0)}([function(t,a,n){a.glMatrix=n(1),a.mat2=n(2),a.mat2d=n(3),a.mat3=n(4),a.mat4=n(5),a.quat=n(6),a.vec2=n(9),a.vec3=n(7),a.vec4=n(8)},function(t,a){var n={};n.EPSILON=1e-6,n.ARRAY_TYPE=\"undefined\"!=typeof Float32Array?Float32Array:Array,n.RANDOM=Math.random,n.ENABLE_SIMD=!1,n.SIMD_AVAILABLE=n.ARRAY_TYPE===Float32Array&&\"SIMD\"in this,n.USE_SIMD=n.ENABLE_SIMD&&n.SIMD_AVAILABLE,n.setMatrixArrayType=function(t){n.ARRAY_TYPE=t};var r=Math.PI/180;n.toRadian=function(t){return t*r},n.equals=function(t,a){return Math.abs(t-a)<=n.EPSILON*Math.max(1,Math.abs(t),Math.abs(a))},t.exports=n},function(t,a,n){var r=n(1),o={};o.create=function(){var t=new r.ARRAY_TYPE(4);return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t},o.clone=function(t){var a=new r.ARRAY_TYPE(4);return a[0]=t[0],a[1]=t[1],a[2]=t[2],a[3]=t[3],a},o.copy=function(t,a){return t[0]=a[0],t[1]=a[1],t[2]=a[2],t[3]=a[3],t},o.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t},o.fromValues=function(t,a,n,o){var u=new r.ARRAY_TYPE(4);return u[0]=t,u[1]=a,u[2]=n,u[3]=o,u},o.set=function(t,a,n,r,o){return t[0]=a,t[1]=n,t[2]=r,t[3]=o,t},o.transpose=function(t,a){if(t===a){var n=a[1];t[1]=a[2],t[2]=n}else t[0]=a[0],t[1]=a[2],t[2]=a[1],t[3]=a[3];return t},o.invert=function(t,a){var n=a[0],r=a[1],o=a[2],u=a[3],l=n*u-o*r;return l?(l=1/l,t[0]=u*l,t[1]=-r*l,t[2]=-o*l,t[3]=n*l,t):null},o.adjoint=function(t,a){var n=a[0];return t[0]=a[3],t[1]=-a[1],t[2]=-a[2],t[3]=n,t},o.determinant=function(t){return t[0]*t[3]-t[2]*t[1]},o.multiply=function(t,a,n){var r=a[0],o=a[1],u=a[2],l=a[3],e=n[0],M=n[1],s=n[2],i=n[3];return t[0]=r*e+u*M,t[1]=o*e+l*M,t[2]=r*s+u*i,t[3]=o*s+l*i,t},o.mul=o.multiply,o.rotate=function(t,a,n){var r=a[0],o=a[1],u=a[2],l=a[3],e=Math.sin(n),M=Math.cos(n);return t[0]=r*M+u*e,t[1]=o*M+l*e,t[2]=r*-e+u*M,t[3]=o*-e+l*M,t},o.scale=function(t,a,n){var r=a[0],o=a[1],u=a[2],l=a[3],e=n[0],M=n[1];return t[0]=r*e,t[1]=o*e,t[2]=u*M,t[3]=l*M,t},o.fromRotation=function(t,a){var n=Math.sin(a),r=Math.cos(a);return t[0]=r,t[1]=n,t[2]=-n,t[3]=r,t},o.fromScaling=function(t,a){return t[0]=a[0],t[1]=0,t[2]=0,t[3]=a[1],t},o.str=function(t){return\"mat2(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\", \"+t[3]+\")\"},o.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2))},o.LDU=function(t,a,n,r){return t[2]=r[2]/r[0],n[0]=r[0],n[1]=r[1],n[3]=r[3]-t[2]*n[1],[t,a,n]},o.add=function(t,a,n){return t[0]=a[0]+n[0],t[1]=a[1]+n[1],t[2]=a[2]+n[2],t[3]=a[3]+n[3],t},o.subtract=function(t,a,n){return t[0]=a[0]-n[0],t[1]=a[1]-n[1],t[2]=a[2]-n[2],t[3]=a[3]-n[3],t},o.sub=o.subtract,o.exactEquals=function(t,a){return t[0]===a[0]&&t[1]===a[1]&&t[2]===a[2]&&t[3]===a[3]},o.equals=function(t,a){var n=t[0],o=t[1],u=t[2],l=t[3],e=a[0],M=a[1],s=a[2],i=a[3];return Math.abs(n-e)<=r.EPSILON*Math.max(1,Math.abs(n),Math.abs(e))&&Math.abs(o-M)<=r.EPSILON*Math.max(1,Math.abs(o),Math.abs(M))&&Math.abs(u-s)<=r.EPSILON*Math.max(1,Math.abs(u),Math.abs(s))&&Math.abs(l-i)<=r.EPSILON*Math.max(1,Math.abs(l),Math.abs(i))},o.multiplyScalar=function(t,a,n){return t[0]=a[0]*n,t[1]=a[1]*n,t[2]=a[2]*n,t[3]=a[3]*n,t},o.multiplyScalarAndAdd=function(t,a,n,r){return t[0]=a[0]+n[0]*r,t[1]=a[1]+n[1]*r,t[2]=a[2]+n[2]*r,t[3]=a[3]+n[3]*r,t},t.exports=o},function(t,a,n){var r=n(1),o={};o.create=function(){var t=new r.ARRAY_TYPE(6);return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t},o.clone=function(t){var a=new r.ARRAY_TYPE(6);return a[0]=t[0],a[1]=t[1],a[2]=t[2],a[3]=t[3],a[4]=t[4],a[5]=t[5],a},o.copy=function(t,a){return t[0]=a[0],t[1]=a[1],t[2]=a[2],t[3]=a[3],t[4]=a[4],t[5]=a[5],t},o.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t},o.fromValues=function(t,a,n,o,u,l){var e=new r.ARRAY_TYPE(6);return e[0]=t,e[1]=a,e[2]=n,e[3]=o,e[4]=u,e[5]=l,e},o.set=function(t,a,n,r,o,u,l){return t[0]=a,t[1]=n,t[2]=r,t[3]=o,t[4]=u,t[5]=l,t},o.invert=function(t,a){var n=a[0],r=a[1],o=a[2],u=a[3],l=a[4],e=a[5],M=n*u-r*o;return M?(M=1/M,t[0]=u*M,t[1]=-r*M,t[2]=-o*M,t[3]=n*M,t[4]=(o*e-u*l)*M,t[5]=(r*l-n*e)*M,t):null},o.determinant=function(t){return t[0]*t[3]-t[1]*t[2]},o.multiply=function(t,a,n){var r=a[0],o=a[1],u=a[2],l=a[3],e=a[4],M=a[5],s=n[0],i=n[1],c=n[2],h=n[3],S=n[4],I=n[5];return t[0]=r*s+u*i,t[1]=o*s+l*i,t[2]=r*c+u*h,t[3]=o*c+l*h,t[4]=r*S+u*I+e,t[5]=o*S+l*I+M,t},o.mul=o.multiply,o.rotate=function(t,a,n){var r=a[0],o=a[1],u=a[2],l=a[3],e=a[4],M=a[5],s=Math.sin(n),i=Math.cos(n);return t[0]=r*i+u*s,t[1]=o*i+l*s,t[2]=r*-s+u*i,t[3]=o*-s+l*i,t[4]=e,t[5]=M,t},o.scale=function(t,a,n){var r=a[0],o=a[1],u=a[2],l=a[3],e=a[4],M=a[5],s=n[0],i=n[1];return t[0]=r*s,t[1]=o*s,t[2]=u*i,t[3]=l*i,t[4]=e,t[5]=M,t},o.translate=function(t,a,n){var r=a[0],o=a[1],u=a[2],l=a[3],e=a[4],M=a[5],s=n[0],i=n[1];return t[0]=r,t[1]=o,t[2]=u,t[3]=l,t[4]=r*s+u*i+e,t[5]=o*s+l*i+M,t},o.fromRotation=function(t,a){var n=Math.sin(a),r=Math.cos(a);return t[0]=r,t[1]=n,t[2]=-n,t[3]=r,t[4]=0,t[5]=0,t},o.fromScaling=function(t,a){return t[0]=a[0],t[1]=0,t[2]=0,t[3]=a[1],t[4]=0,t[5]=0,t},o.fromTranslation=function(t,a){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=a[0],t[5]=a[1],t},o.str=function(t){return\"mat2d(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\", \"+t[3]+\", \"+t[4]+\", \"+t[5]+\")\"},o.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+1)},o.add=function(t,a,n){return t[0]=a[0]+n[0],t[1]=a[1]+n[1],t[2]=a[2]+n[2],t[3]=a[3]+n[3],t[4]=a[4]+n[4],t[5]=a[5]+n[5],t},o.subtract=function(t,a,n){return t[0]=a[0]-n[0],t[1]=a[1]-n[1],t[2]=a[2]-n[2],t[3]=a[3]-n[3],t[4]=a[4]-n[4],t[5]=a[5]-n[5],t},o.sub=o.subtract,o.multiplyScalar=function(t,a,n){return t[0]=a[0]*n,t[1]=a[1]*n,t[2]=a[2]*n,t[3]=a[3]*n,t[4]=a[4]*n,t[5]=a[5]*n,t},o.multiplyScalarAndAdd=function(t,a,n,r){return t[0]=a[0]+n[0]*r,t[1]=a[1]+n[1]*r,t[2]=a[2]+n[2]*r,t[3]=a[3]+n[3]*r,t[4]=a[4]+n[4]*r,t[5]=a[5]+n[5]*r,t},o.exactEquals=function(t,a){return t[0]===a[0]&&t[1]===a[1]&&t[2]===a[2]&&t[3]===a[3]&&t[4]===a[4]&&t[5]===a[5]},o.equals=function(t,a){var n=t[0],o=t[1],u=t[2],l=t[3],e=t[4],M=t[5],s=a[0],i=a[1],c=a[2],h=a[3],S=a[4],I=a[5];return Math.abs(n-s)<=r.EPSILON*Math.max(1,Math.abs(n),Math.abs(s))&&Math.abs(o-i)<=r.EPSILON*Math.max(1,Math.abs(o),Math.abs(i))&&Math.abs(u-c)<=r.EPSILON*Math.max(1,Math.abs(u),Math.abs(c))&&Math.abs(l-h)<=r.EPSILON*Math.max(1,Math.abs(l),Math.abs(h))&&Math.abs(e-S)<=r.EPSILON*Math.max(1,Math.abs(e),Math.abs(S))&&Math.abs(M-I)<=r.EPSILON*Math.max(1,Math.abs(M),Math.abs(I))},t.exports=o},function(t,a,n){var r=n(1),o={};o.create=function(){var t=new r.ARRAY_TYPE(9);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},o.fromMat4=function(t,a){return t[0]=a[0],t[1]=a[1],t[2]=a[2],t[3]=a[4],t[4]=a[5],t[5]=a[6],t[6]=a[8],t[7]=a[9],t[8]=a[10],t},o.clone=function(t){var a=new r.ARRAY_TYPE(9);return a[0]=t[0],a[1]=t[1],a[2]=t[2],a[3]=t[3],a[4]=t[4],a[5]=t[5],a[6]=t[6],a[7]=t[7],a[8]=t[8],a},o.copy=function(t,a){return t[0]=a[0],t[1]=a[1],t[2]=a[2],t[3]=a[3],t[4]=a[4],t[5]=a[5],t[6]=a[6],t[7]=a[7],t[8]=a[8],t},o.fromValues=function(t,a,n,o,u,l,e,M,s){var i=new r.ARRAY_TYPE(9);return i[0]=t,i[1]=a,i[2]=n,i[3]=o,i[4]=u,i[5]=l,i[6]=e,i[7]=M,i[8]=s,i},o.set=function(t,a,n,r,o,u,l,e,M,s){return t[0]=a,t[1]=n,t[2]=r,t[3]=o,t[4]=u,t[5]=l,t[6]=e,t[7]=M,t[8]=s,t},o.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},o.transpose=function(t,a){if(t===a){var n=a[1],r=a[2],o=a[5];t[1]=a[3],t[2]=a[6],t[3]=n,t[5]=a[7],t[6]=r,t[7]=o}else t[0]=a[0],t[1]=a[3],t[2]=a[6],t[3]=a[1],t[4]=a[4],t[5]=a[7],t[6]=a[2],t[7]=a[5],t[8]=a[8];return t},o.invert=function(t,a){var n=a[0],r=a[1],o=a[2],u=a[3],l=a[4],e=a[5],M=a[6],s=a[7],i=a[8],c=i*l-e*s,h=-i*u+e*M,S=s*u-l*M,I=n*c+r*h+o*S;return I?(I=1/I,t[0]=c*I,t[1]=(-i*r+o*s)*I,t[2]=(e*r-o*l)*I,t[3]=h*I,t[4]=(i*n-o*M)*I,t[5]=(-e*n+o*u)*I,t[6]=S*I,t[7]=(-s*n+r*M)*I,t[8]=(l*n-r*u)*I,t):null},o.adjoint=function(t,a){var n=a[0],r=a[1],o=a[2],u=a[3],l=a[4],e=a[5],M=a[6],s=a[7],i=a[8];return t[0]=l*i-e*s,t[1]=o*s-r*i,t[2]=r*e-o*l,t[3]=e*M-u*i,t[4]=n*i-o*M,t[5]=o*u-n*e,t[6]=u*s-l*M,t[7]=r*M-n*s,t[8]=n*l-r*u,t},o.determinant=function(t){var a=t[0],n=t[1],r=t[2],o=t[3],u=t[4],l=t[5],e=t[6],M=t[7],s=t[8];return a*(s*u-l*M)+n*(-s*o+l*e)+r*(M*o-u*e)},o.multiply=function(t,a,n){var r=a[0],o=a[1],u=a[2],l=a[3],e=a[4],M=a[5],s=a[6],i=a[7],c=a[8],h=n[0],S=n[1],I=n[2],f=n[3],x=n[4],D=n[5],F=n[6],m=n[7],d=n[8];return t[0]=h*r+S*l+I*s,t[1]=h*o+S*e+I*i,t[2]=h*u+S*M+I*c,t[3]=f*r+x*l+D*s,t[4]=f*o+x*e+D*i,t[5]=f*u+x*M+D*c,t[6]=F*r+m*l+d*s,t[7]=F*o+m*e+d*i,t[8]=F*u+m*M+d*c,t},o.mul=o.multiply,o.translate=function(t,a,n){var r=a[0],o=a[1],u=a[2],l=a[3],e=a[4],M=a[5],s=a[6],i=a[7],c=a[8],h=n[0],S=n[1];return t[0]=r,t[1]=o,t[2]=u,t[3]=l,t[4]=e,t[5]=M,t[6]=h*r+S*l+s,t[7]=h*o+S*e+i,t[8]=h*u+S*M+c,t},o.rotate=function(t,a,n){var r=a[0],o=a[1],u=a[2],l=a[3],e=a[4],M=a[5],s=a[6],i=a[7],c=a[8],h=Math.sin(n),S=Math.cos(n);return t[0]=S*r+h*l,t[1]=S*o+h*e,t[2]=S*u+h*M,t[3]=S*l-h*r,t[4]=S*e-h*o,t[5]=S*M-h*u,t[6]=s,t[7]=i,t[8]=c,t},o.scale=function(t,a,n){var r=n[0],o=n[1];return t[0]=r*a[0],t[1]=r*a[1],t[2]=r*a[2],t[3]=o*a[3],t[4]=o*a[4],t[5]=o*a[5],t[6]=a[6],t[7]=a[7],t[8]=a[8],t},o.fromTranslation=function(t,a){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=a[0],t[7]=a[1],t[8]=1,t},o.fromRotation=function(t,a){var n=Math.sin(a),r=Math.cos(a);return t[0]=r,t[1]=n,t[2]=0,t[3]=-n,t[4]=r,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},o.fromScaling=function(t,a){return t[0]=a[0],t[1]=0,t[2]=0,t[3]=0,t[4]=a[1],t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},o.fromMat2d=function(t,a){return t[0]=a[0],t[1]=a[1],t[2]=0,t[3]=a[2],t[4]=a[3],t[5]=0,t[6]=a[4],t[7]=a[5],t[8]=1,t},o.fromQuat=function(t,a){var n=a[0],r=a[1],o=a[2],u=a[3],l=n+n,e=r+r,M=o+o,s=n*l,i=r*l,c=r*e,h=o*l,S=o*e,I=o*M,f=u*l,x=u*e,D=u*M;return t[0]=1-c-I,t[3]=i-D,t[6]=h+x,t[1]=i+D,t[4]=1-s-I,t[7]=S-f,t[2]=h-x,t[5]=S+f,t[8]=1-s-c,t},o.normalFromMat4=function(t,a){var n=a[0],r=a[1],o=a[2],u=a[3],l=a[4],e=a[5],M=a[6],s=a[7],i=a[8],c=a[9],h=a[10],S=a[11],I=a[12],f=a[13],x=a[14],D=a[15],F=n*e-r*l,m=n*M-o*l,d=n*s-u*l,b=r*M-o*e,v=r*s-u*e,z=o*s-u*M,p=i*f-c*I,w=i*x-h*I,E=i*D-S*I,A=c*x-h*f,P=c*D-S*f,L=h*D-S*x,q=F*L-m*P+d*A+b*E-v*w+z*p;return q?(q=1/q,t[0]=(e*L-M*P+s*A)*q,t[1]=(M*E-l*L-s*w)*q,t[2]=(l*P-e*E+s*p)*q,t[3]=(o*P-r*L-u*A)*q,t[4]=(n*L-o*E+u*w)*q,t[5]=(r*E-n*P-u*p)*q,t[6]=(f*z-x*v+D*b)*q,t[7]=(x*d-I*z-D*m)*q,t[8]=(I*v-f*d+D*F)*q,t):null},o.str=function(t){return\"mat3(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\", \"+t[3]+\", \"+t[4]+\", \"+t[5]+\", \"+t[6]+\", \"+t[7]+\", \"+t[8]+\")\"},o.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+Math.pow(t[6],2)+Math.pow(t[7],2)+Math.pow(t[8],2))},o.add=function(t,a,n){return t[0]=a[0]+n[0],t[1]=a[1]+n[1],t[2]=a[2]+n[2],t[3]=a[3]+n[3],t[4]=a[4]+n[4],t[5]=a[5]+n[5],t[6]=a[6]+n[6],t[7]=a[7]+n[7],t[8]=a[8]+n[8],t},o.subtract=function(t,a,n){return t[0]=a[0]-n[0],t[1]=a[1]-n[1],t[2]=a[2]-n[2],t[3]=a[3]-n[3],t[4]=a[4]-n[4],t[5]=a[5]-n[5],t[6]=a[6]-n[6],t[7]=a[7]-n[7],t[8]=a[8]-n[8],t},o.sub=o.subtract,o.multiplyScalar=function(t,a,n){return t[0]=a[0]*n,t[1]=a[1]*n,t[2]=a[2]*n,t[3]=a[3]*n,t[4]=a[4]*n,t[5]=a[5]*n,t[6]=a[6]*n,t[7]=a[7]*n,t[8]=a[8]*n,t},o.multiplyScalarAndAdd=function(t,a,n,r){return t[0]=a[0]+n[0]*r,t[1]=a[1]+n[1]*r,t[2]=a[2]+n[2]*r,t[3]=a[3]+n[3]*r,t[4]=a[4]+n[4]*r,t[5]=a[5]+n[5]*r,t[6]=a[6]+n[6]*r,t[7]=a[7]+n[7]*r,t[8]=a[8]+n[8]*r,t},o.exactEquals=function(t,a){return t[0]===a[0]&&t[1]===a[1]&&t[2]===a[2]&&t[3]===a[3]&&t[4]===a[4]&&t[5]===a[5]&&t[6]===a[6]&&t[7]===a[7]&&t[8]===a[8]},o.equals=function(t,a){var n=t[0],o=t[1],u=t[2],l=t[3],e=t[4],M=t[5],s=t[6],i=t[7],c=t[8],h=a[0],S=a[1],I=a[2],f=a[3],x=a[4],D=a[5],F=t[6],m=a[7],d=a[8];return Math.abs(n-h)<=r.EPSILON*Math.max(1,Math.abs(n),Math.abs(h))&&Math.abs(o-S)<=r.EPSILON*Math.max(1,Math.abs(o),Math.abs(S))&&Math.abs(u-I)<=r.EPSILON*Math.max(1,Math.abs(u),Math.abs(I))&&Math.abs(l-f)<=r.EPSILON*Math.max(1,Math.abs(l),Math.abs(f))&&Math.abs(e-x)<=r.EPSILON*Math.max(1,Math.abs(e),Math.abs(x))&&Math.abs(M-D)<=r.EPSILON*Math.max(1,Math.abs(M),Math.abs(D))&&Math.abs(s-F)<=r.EPSILON*Math.max(1,Math.abs(s),Math.abs(F))&&Math.abs(i-m)<=r.EPSILON*Math.max(1,Math.abs(i),Math.abs(m))&&Math.abs(c-d)<=r.EPSILON*Math.max(1,Math.abs(c),Math.abs(d))},t.exports=o},function(t,a,n){var r=n(1),o={scalar:{},SIMD:{}};o.create=function(){var t=new r.ARRAY_TYPE(16);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},o.clone=function(t){var a=new r.ARRAY_TYPE(16);return a[0]=t[0],a[1]=t[1],a[2]=t[2],a[3]=t[3],a[4]=t[4],a[5]=t[5],a[6]=t[6],a[7]=t[7],a[8]=t[8],a[9]=t[9],a[10]=t[10],a[11]=t[11],a[12]=t[12],a[13]=t[13],a[14]=t[14],a[15]=t[15],a},o.copy=function(t,a){return t[0]=a[0],t[1]=a[1],t[2]=a[2],t[3]=a[3],t[4]=a[4],t[5]=a[5],t[6]=a[6],t[7]=a[7],t[8]=a[8],t[9]=a[9],t[10]=a[10],t[11]=a[11],t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15],t},o.fromValues=function(t,a,n,o,u,l,e,M,s,i,c,h,S,I,f,x){var D=new r.ARRAY_TYPE(16);return D[0]=t,D[1]=a,D[2]=n,D[3]=o,D[4]=u,D[5]=l,D[6]=e,D[7]=M,D[8]=s,D[9]=i,D[10]=c,D[11]=h,D[12]=S,D[13]=I,D[14]=f,D[15]=x,D},o.set=function(t,a,n,r,o,u,l,e,M,s,i,c,h,S,I,f,x){return t[0]=a,t[1]=n,t[2]=r,t[3]=o,t[4]=u,t[5]=l,t[6]=e,t[7]=M,t[8]=s,t[9]=i,t[10]=c,t[11]=h,t[12]=S,t[13]=I,t[14]=f,t[15]=x,t},o.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},o.scalar.transpose=function(t,a){if(t===a){var n=a[1],r=a[2],o=a[3],u=a[6],l=a[7],e=a[11];t[1]=a[4],t[2]=a[8],t[3]=a[12],t[4]=n,t[6]=a[9],t[7]=a[13],t[8]=r,t[9]=u,t[11]=a[14],t[12]=o,t[13]=l,t[14]=e}else t[0]=a[0],t[1]=a[4],t[2]=a[8],t[3]=a[12],t[4]=a[1],t[5]=a[5],t[6]=a[9],t[7]=a[13],t[8]=a[2],t[9]=a[6],t[10]=a[10],t[11]=a[14],t[12]=a[3],t[13]=a[7],t[14]=a[11],t[15]=a[15];return t},o.SIMD.transpose=function(t,a){var n,r,o,u,l,e,M,s,i,c;return n=SIMD.Float32x4.load(a,0),r=SIMD.Float32x4.load(a,4),o=SIMD.Float32x4.load(a,8),u=SIMD.Float32x4.load(a,12),l=SIMD.Float32x4.shuffle(n,r,0,1,4,5),e=SIMD.Float32x4.shuffle(o,u,0,1,4,5),M=SIMD.Float32x4.shuffle(l,e,0,2,4,6),s=SIMD.Float32x4.shuffle(l,e,1,3,5,7),SIMD.Float32x4.store(t,0,M),SIMD.Float32x4.store(t,4,s),l=SIMD.Float32x4.shuffle(n,r,2,3,6,7),e=SIMD.Float32x4.shuffle(o,u,2,3,6,7),i=SIMD.Float32x4.shuffle(l,e,0,2,4,6),c=SIMD.Float32x4.shuffle(l,e,1,3,5,7),SIMD.Float32x4.store(t,8,i),SIMD.Float32x4.store(t,12,c),t},o.transpose=r.USE_SIMD?o.SIMD.transpose:o.scalar.transpose,o.scalar.invert=function(t,a){var n=a[0],r=a[1],o=a[2],u=a[3],l=a[4],e=a[5],M=a[6],s=a[7],i=a[8],c=a[9],h=a[10],S=a[11],I=a[12],f=a[13],x=a[14],D=a[15],F=n*e-r*l,m=n*M-o*l,d=n*s-u*l,b=r*M-o*e,v=r*s-u*e,z=o*s-u*M,p=i*f-c*I,w=i*x-h*I,E=i*D-S*I,A=c*x-h*f,P=c*D-S*f,L=h*D-S*x,q=F*L-m*P+d*A+b*E-v*w+z*p;return q?(q=1/q,t[0]=(e*L-M*P+s*A)*q,t[1]=(o*P-r*L-u*A)*q,t[2]=(f*z-x*v+D*b)*q,t[3]=(h*v-c*z-S*b)*q,t[4]=(M*E-l*L-s*w)*q,t[5]=(n*L-o*E+u*w)*q,t[6]=(x*d-I*z-D*m)*q,t[7]=(i*z-h*d+S*m)*q,t[8]=(l*P-e*E+s*p)*q,t[9]=(r*E-n*P-u*p)*q,t[10]=(I*v-f*d+D*F)*q,t[11]=(c*d-i*v-S*F)*q,t[12]=(e*w-l*A-M*p)*q,t[13]=(n*A-r*w+o*p)*q,t[14]=(f*m-I*b-x*F)*q,t[15]=(i*b-c*m+h*F)*q,t):null},o.SIMD.invert=function(t,a){var n,r,o,u,l,e,M,s,i,c,h=SIMD.Float32x4.load(a,0),S=SIMD.Float32x4.load(a,4),I=SIMD.Float32x4.load(a,8),f=SIMD.Float32x4.load(a,12);return l=SIMD.Float32x4.shuffle(h,S,0,1,4,5),r=SIMD.Float32x4.shuffle(I,f,0,1,4,5),n=SIMD.Float32x4.shuffle(l,r,0,2,4,6),r=SIMD.Float32x4.shuffle(r,l,1,3,5,7),l=SIMD.Float32x4.shuffle(h,S,2,3,6,7),u=SIMD.Float32x4.shuffle(I,f,2,3,6,7),o=SIMD.Float32x4.shuffle(l,u,0,2,4,6),u=SIMD.Float32x4.shuffle(u,l,1,3,5,7),l=SIMD.Float32x4.mul(o,u),l=SIMD.Float32x4.swizzle(l,1,0,3,2),e=SIMD.Float32x4.mul(r,l),M=SIMD.Float32x4.mul(n,l),l=SIMD.Float32x4.swizzle(l,2,3,0,1),e=SIMD.Float32x4.sub(SIMD.Float32x4.mul(r,l),e),M=SIMD.Float32x4.sub(SIMD.Float32x4.mul(n,l),M),M=SIMD.Float32x4.swizzle(M,2,3,0,1),l=SIMD.Float32x4.mul(r,o),l=SIMD.Float32x4.swizzle(l,1,0,3,2),e=SIMD.Float32x4.add(SIMD.Float32x4.mul(u,l),e),i=SIMD.Float32x4.mul(n,l),l=SIMD.Float32x4.swizzle(l,2,3,0,1),e=SIMD.Float32x4.sub(e,SIMD.Float32x4.mul(u,l)),i=SIMD.Float32x4.sub(SIMD.Float32x4.mul(n,l),i),i=SIMD.Float32x4.swizzle(i,2,3,0,1),l=SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(r,2,3,0,1),u),l=SIMD.Float32x4.swizzle(l,1,0,3,2),o=SIMD.Float32x4.swizzle(o,2,3,0,1),e=SIMD.Float32x4.add(SIMD.Float32x4.mul(o,l),e),s=SIMD.Float32x4.mul(n,l),l=SIMD.Float32x4.swizzle(l,2,3,0,1),e=SIMD.Float32x4.sub(e,SIMD.Float32x4.mul(o,l)),s=SIMD.Float32x4.sub(SIMD.Float32x4.mul(n,l),s),s=SIMD.Float32x4.swizzle(s,2,3,0,1),l=SIMD.Float32x4.mul(n,r),l=SIMD.Float32x4.swizzle(l,1,0,3,2),s=SIMD.Float32x4.add(SIMD.Float32x4.mul(u,l),s),i=SIMD.Float32x4.sub(SIMD.Float32x4.mul(o,l),i),l=SIMD.Float32x4.swizzle(l,2,3,0,1),s=SIMD.Float32x4.sub(SIMD.Float32x4.mul(u,l),s),i=SIMD.Float32x4.sub(i,SIMD.Float32x4.mul(o,l)),l=SIMD.Float32x4.mul(n,u),l=SIMD.Float32x4.swizzle(l,1,0,3,2),M=SIMD.Float32x4.sub(M,SIMD.Float32x4.mul(o,l)),s=SIMD.Float32x4.add(SIMD.Float32x4.mul(r,l),s),l=SIMD.Float32x4.swizzle(l,2,3,0,1),M=SIMD.Float32x4.add(SIMD.Float32x4.mul(o,l),M),s=SIMD.Float32x4.sub(s,SIMD.Float32x4.mul(r,l)),l=SIMD.Float32x4.mul(n,o),l=SIMD.Float32x4.swizzle(l,1,0,3,2),M=SIMD.Float32x4.add(SIMD.Float32x4.mul(u,l),M),i=SIMD.Float32x4.sub(i,SIMD.Float32x4.mul(r,l)),l=SIMD.Float32x4.swizzle(l,2,3,0,1),M=SIMD.Float32x4.sub(M,SIMD.Float32x4.mul(u,l)),i=SIMD.Float32x4.add(SIMD.Float32x4.mul(r,l),i),c=SIMD.Float32x4.mul(n,e),c=SIMD.Float32x4.add(SIMD.Float32x4.swizzle(c,2,3,0,1),c),c=SIMD.Float32x4.add(SIMD.Float32x4.swizzle(c,1,0,3,2),c),l=SIMD.Float32x4.reciprocalApproximation(c),c=SIMD.Float32x4.sub(SIMD.Float32x4.add(l,l),SIMD.Float32x4.mul(c,SIMD.Float32x4.mul(l,l))),(c=SIMD.Float32x4.swizzle(c,0,0,0,0))?(SIMD.Float32x4.store(t,0,SIMD.Float32x4.mul(c,e)),SIMD.Float32x4.store(t,4,SIMD.Float32x4.mul(c,M)),SIMD.Float32x4.store(t,8,SIMD.Float32x4.mul(c,s)),SIMD.Float32x4.store(t,12,SIMD.Float32x4.mul(c,i)),t):null},o.invert=r.USE_SIMD?o.SIMD.invert:o.scalar.invert,o.scalar.adjoint=function(t,a){var n=a[0],r=a[1],o=a[2],u=a[3],l=a[4],e=a[5],M=a[6],s=a[7],i=a[8],c=a[9],h=a[10],S=a[11],I=a[12],f=a[13],x=a[14],D=a[15];return t[0]=e*(h*D-S*x)-c*(M*D-s*x)+f*(M*S-s*h),t[1]=-(r*(h*D-S*x)-c*(o*D-u*x)+f*(o*S-u*h)),t[2]=r*(M*D-s*x)-e*(o*D-u*x)+f*(o*s-u*M),t[3]=-(r*(M*S-s*h)-e*(o*S-u*h)+c*(o*s-u*M)),t[4]=-(l*(h*D-S*x)-i*(M*D-s*x)+I*(M*S-s*h)),t[5]=n*(h*D-S*x)-i*(o*D-u*x)+I*(o*S-u*h),t[6]=-(n*(M*D-s*x)-l*(o*D-u*x)+I*(o*s-u*M)),t[7]=n*(M*S-s*h)-l*(o*S-u*h)+i*(o*s-u*M),t[8]=l*(c*D-S*f)-i*(e*D-s*f)+I*(e*S-s*c),t[9]=-(n*(c*D-S*f)-i*(r*D-u*f)+I*(r*S-u*c)),t[10]=n*(e*D-s*f)-l*(r*D-u*f)+I*(r*s-u*e),t[11]=-(n*(e*S-s*c)-l*(r*S-u*c)+i*(r*s-u*e)),t[12]=-(l*(c*x-h*f)-i*(e*x-M*f)+I*(e*h-M*c)),t[13]=n*(c*x-h*f)-i*(r*x-o*f)+I*(r*h-o*c),t[14]=-(n*(e*x-M*f)-l*(r*x-o*f)+I*(r*M-o*e)),t[15]=n*(e*h-M*c)-l*(r*h-o*c)+i*(r*M-o*e),t},o.SIMD.adjoint=function(t,a){var n,r,o,u,l,e,M,s,i,c,h,S,I,n=SIMD.Float32x4.load(a,0),r=SIMD.Float32x4.load(a,4),o=SIMD.Float32x4.load(a,8),u=SIMD.Float32x4.load(a,12);return i=SIMD.Float32x4.shuffle(n,r,0,1,4,5),e=SIMD.Float32x4.shuffle(o,u,0,1,4,5),l=SIMD.Float32x4.shuffle(i,e,0,2,4,6),e=SIMD.Float32x4.shuffle(e,i,1,3,5,7),i=SIMD.Float32x4.shuffle(n,r,2,3,6,7),s=SIMD.Float32x4.shuffle(o,u,2,3,6,7),M=SIMD.Float32x4.shuffle(i,s,0,2,4,6),s=SIMD.Float32x4.shuffle(s,i,1,3,5,7),i=SIMD.Float32x4.mul(M,s),i=SIMD.Float32x4.swizzle(i,1,0,3,2),c=SIMD.Float32x4.mul(e,i),h=SIMD.Float32x4.mul(l,i),i=SIMD.Float32x4.swizzle(i,2,3,0,1),c=SIMD.Float32x4.sub(SIMD.Float32x4.mul(e,i),c),h=SIMD.Float32x4.sub(SIMD.Float32x4.mul(l,i),h),h=SIMD.Float32x4.swizzle(h,2,3,0,1),i=SIMD.Float32x4.mul(e,M),i=SIMD.Float32x4.swizzle(i,1,0,3,2),c=SIMD.Float32x4.add(SIMD.Float32x4.mul(s,i),c),I=SIMD.Float32x4.mul(l,i),i=SIMD.Float32x4.swizzle(i,2,3,0,1),c=SIMD.Float32x4.sub(c,SIMD.Float32x4.mul(s,i)),I=SIMD.Float32x4.sub(SIMD.Float32x4.mul(l,i),I),I=SIMD.Float32x4.swizzle(I,2,3,0,1),i=SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(e,2,3,0,1),s),i=SIMD.Float32x4.swizzle(i,1,0,3,2),M=SIMD.Float32x4.swizzle(M,2,3,0,1),c=SIMD.Float32x4.add(SIMD.Float32x4.mul(M,i),c),S=SIMD.Float32x4.mul(l,i),i=SIMD.Float32x4.swizzle(i,2,3,0,1),c=SIMD.Float32x4.sub(c,SIMD.Float32x4.mul(M,i)),S=SIMD.Float32x4.sub(SIMD.Float32x4.mul(l,i),S),S=SIMD.Float32x4.swizzle(S,2,3,0,1),i=SIMD.Float32x4.mul(l,e),i=SIMD.Float32x4.swizzle(i,1,0,3,2),S=SIMD.Float32x4.add(SIMD.Float32x4.mul(s,i),S),I=SIMD.Float32x4.sub(SIMD.Float32x4.mul(M,i),I),i=SIMD.Float32x4.swizzle(i,2,3,0,1),S=SIMD.Float32x4.sub(SIMD.Float32x4.mul(s,i),S),I=SIMD.Float32x4.sub(I,SIMD.Float32x4.mul(M,i)),i=SIMD.Float32x4.mul(l,s),i=SIMD.Float32x4.swizzle(i,1,0,3,2),h=SIMD.Float32x4.sub(h,SIMD.Float32x4.mul(M,i)),S=SIMD.Float32x4.add(SIMD.Float32x4.mul(e,i),S),i=SIMD.Float32x4.swizzle(i,2,3,0,1),h=SIMD.Float32x4.add(SIMD.Float32x4.mul(M,i),h),S=SIMD.Float32x4.sub(S,SIMD.Float32x4.mul(e,i)),i=SIMD.Float32x4.mul(l,M),i=SIMD.Float32x4.swizzle(i,1,0,3,2),h=SIMD.Float32x4.add(SIMD.Float32x4.mul(s,i),h),I=SIMD.Float32x4.sub(I,SIMD.Float32x4.mul(e,i)),i=SIMD.Float32x4.swizzle(i,2,3,0,1),h=SIMD.Float32x4.sub(h,SIMD.Float32x4.mul(s,i)),I=SIMD.Float32x4.add(SIMD.Float32x4.mul(e,i),I),SIMD.Float32x4.store(t,0,c),SIMD.Float32x4.store(t,4,h),SIMD.Float32x4.store(t,8,S),SIMD.Float32x4.store(t,12,I),t},o.adjoint=r.USE_SIMD?o.SIMD.adjoint:o.scalar.adjoint,o.determinant=function(t){var a=t[0],n=t[1],r=t[2],o=t[3],u=t[4],l=t[5],e=t[6],M=t[7],s=t[8],i=t[9],c=t[10],h=t[11],S=t[12],I=t[13],f=t[14],x=t[15],D=a*l-n*u,F=a*e-r*u,m=a*M-o*u,d=n*e-r*l,b=n*M-o*l,v=r*M-o*e,z=s*I-i*S,p=s*f-c*S,w=s*x-h*S,E=i*f-c*I,A=i*x-h*I,P=c*x-h*f;return D*P-F*A+m*E+d*w-b*p+v*z},o.SIMD.multiply=function(t,a,n){var r=SIMD.Float32x4.load(a,0),o=SIMD.Float32x4.load(a,4),u=SIMD.Float32x4.load(a,8),l=SIMD.Float32x4.load(a,12),e=SIMD.Float32x4.load(n,0),M=SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(e,0,0,0,0),r),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(e,1,1,1,1),o),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(e,2,2,2,2),u),SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(e,3,3,3,3),l))));SIMD.Float32x4.store(t,0,M);var s=SIMD.Float32x4.load(n,4),i=SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(s,0,0,0,0),r),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(s,1,1,1,1),o),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(s,2,2,2,2),u),SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(s,3,3,3,3),l))));SIMD.Float32x4.store(t,4,i);var c=SIMD.Float32x4.load(n,8),h=SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,0,0,0,0),r),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,1,1,1,1),o),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,2,2,2,2),u),SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,3,3,3,3),l))));SIMD.Float32x4.store(t,8,h);var S=SIMD.Float32x4.load(n,12),I=SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(S,0,0,0,0),r),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(S,1,1,1,1),o),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(S,2,2,2,2),u),SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(S,3,3,3,3),l))));return SIMD.Float32x4.store(t,12,I),t},o.scalar.multiply=function(t,a,n){var r=a[0],o=a[1],u=a[2],l=a[3],e=a[4],M=a[5],s=a[6],i=a[7],c=a[8],h=a[9],S=a[10],I=a[11],f=a[12],x=a[13],D=a[14],F=a[15],m=n[0],d=n[1],b=n[2],v=n[3];return t[0]=m*r+d*e+b*c+v*f,t[1]=m*o+d*M+b*h+v*x,t[2]=m*u+d*s+b*S+v*D,t[3]=m*l+d*i+b*I+v*F,m=n[4],d=n[5],b=n[6],v=n[7],t[4]=m*r+d*e+b*c+v*f,t[5]=m*o+d*M+b*h+v*x,t[6]=m*u+d*s+b*S+v*D,t[7]=m*l+d*i+b*I+v*F,m=n[8],d=n[9],b=n[10],v=n[11],t[8]=m*r+d*e+b*c+v*f,t[9]=m*o+d*M+b*h+v*x,t[10]=m*u+d*s+b*S+v*D,t[11]=m*l+d*i+b*I+v*F,m=n[12],d=n[13],b=n[14],v=n[15],t[12]=m*r+d*e+b*c+v*f,t[13]=m*o+d*M+b*h+v*x,t[14]=m*u+d*s+b*S+v*D,t[15]=m*l+d*i+b*I+v*F,t},o.multiply=r.USE_SIMD?o.SIMD.multiply:o.scalar.multiply,o.mul=o.multiply,o.scalar.translate=function(t,a,n){var r,o,u,l,e,M,s,i,c,h,S,I,f=n[0],x=n[1],D=n[2];return a===t?(t[12]=a[0]*f+a[4]*x+a[8]*D+a[12],t[13]=a[1]*f+a[5]*x+a[9]*D+a[13],t[14]=a[2]*f+a[6]*x+a[10]*D+a[14],t[15]=a[3]*f+a[7]*x+a[11]*D+a[15]):(r=a[0],o=a[1],u=a[2],l=a[3],e=a[4],M=a[5],s=a[6],i=a[7],c=a[8],h=a[9],S=a[10],I=a[11],t[0]=r,t[1]=o,t[2]=u,t[3]=l,t[4]=e,t[5]=M,t[6]=s,t[7]=i,t[8]=c,t[9]=h,t[10]=S,t[11]=I,t[12]=r*f+e*x+c*D+a[12],t[13]=o*f+M*x+h*D+a[13],t[14]=u*f+s*x+S*D+a[14],t[15]=l*f+i*x+I*D+a[15]),t},o.SIMD.translate=function(t,a,n){var r=SIMD.Float32x4.load(a,0),o=SIMD.Float32x4.load(a,4),u=SIMD.Float32x4.load(a,8),l=SIMD.Float32x4.load(a,12),e=SIMD.Float32x4(n[0],n[1],n[2],0);a!==t&&(t[0]=a[0],t[1]=a[1],t[2]=a[2],t[3]=a[3],t[4]=a[4],t[5]=a[5],t[6]=a[6],t[7]=a[7],t[8]=a[8],t[9]=a[9],t[10]=a[10],t[11]=a[11]),r=SIMD.Float32x4.mul(r,SIMD.Float32x4.swizzle(e,0,0,0,0)),o=SIMD.Float32x4.mul(o,SIMD.Float32x4.swizzle(e,1,1,1,1)),u=SIMD.Float32x4.mul(u,SIMD.Float32x4.swizzle(e,2,2,2,2));var M=SIMD.Float32x4.add(r,SIMD.Float32x4.add(o,SIMD.Float32x4.add(u,l)));return SIMD.Float32x4.store(t,12,M),t},o.translate=r.USE_SIMD?o.SIMD.translate:o.scalar.translate,o.scalar.scale=function(t,a,n){var r=n[0],o=n[1],u=n[2];return t[0]=a[0]*r,t[1]=a[1]*r,t[2]=a[2]*r,t[3]=a[3]*r,t[4]=a[4]*o,t[5]=a[5]*o,t[6]=a[6]*o,t[7]=a[7]*o,t[8]=a[8]*u,t[9]=a[9]*u,t[10]=a[10]*u,t[11]=a[11]*u,t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15],t},o.SIMD.scale=function(t,a,n){var r,o,u,l=SIMD.Float32x4(n[0],n[1],n[2],0);return r=SIMD.Float32x4.load(a,0),SIMD.Float32x4.store(t,0,SIMD.Float32x4.mul(r,SIMD.Float32x4.swizzle(l,0,0,0,0))),o=SIMD.Float32x4.load(a,4),SIMD.Float32x4.store(t,4,SIMD.Float32x4.mul(o,SIMD.Float32x4.swizzle(l,1,1,1,1))),u=SIMD.Float32x4.load(a,8),SIMD.Float32x4.store(t,8,SIMD.Float32x4.mul(u,SIMD.Float32x4.swizzle(l,2,2,2,2))),t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15],t},o.scale=r.USE_SIMD?o.SIMD.scale:o.scalar.scale,o.rotate=function(t,a,n,o){var u,l,e,M,s,i,c,h,S,I,f,x,D,F,m,d,b,v,z,p,w,E,A,P,L=o[0],q=o[1],R=o[2],N=Math.sqrt(L*L+q*q+R*R);return Math.abs(N)<r.EPSILON?null:(N=1/N,L*=N,q*=N,R*=N,u=Math.sin(n),l=Math.cos(n),e=1-l,M=a[0],s=a[1],i=a[2],c=a[3],h=a[4],S=a[5],I=a[6],f=a[7],x=a[8],D=a[9],F=a[10],m=a[11],d=L*L*e+l,b=q*L*e+R*u,v=R*L*e-q*u,z=L*q*e-R*u,p=q*q*e+l,w=R*q*e+L*u,E=L*R*e+q*u,A=q*R*e-L*u,P=R*R*e+l,t[0]=M*d+h*b+x*v,t[1]=s*d+S*b+D*v,t[2]=i*d+I*b+F*v,t[3]=c*d+f*b+m*v,t[4]=M*z+h*p+x*w,t[5]=s*z+S*p+D*w,t[6]=i*z+I*p+F*w,t[7]=c*z+f*p+m*w,t[8]=M*E+h*A+x*P,t[9]=s*E+S*A+D*P,t[10]=i*E+I*A+F*P,t[11]=c*E+f*A+m*P,a!==t&&(t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15]),t)},o.scalar.rotateX=function(t,a,n){var r=Math.sin(n),o=Math.cos(n),u=a[4],l=a[5],e=a[6],M=a[7],s=a[8],i=a[9],c=a[10],h=a[11];return a!==t&&(t[0]=a[0],t[1]=a[1],t[2]=a[2],t[3]=a[3],t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15]),t[4]=u*o+s*r,t[5]=l*o+i*r,t[6]=e*o+c*r,t[7]=M*o+h*r,t[8]=s*o-u*r,t[9]=i*o-l*r,t[10]=c*o-e*r,t[11]=h*o-M*r,t},o.SIMD.rotateX=function(t,a,n){var r=SIMD.Float32x4.splat(Math.sin(n)),o=SIMD.Float32x4.splat(Math.cos(n));a!==t&&(t[0]=a[0],t[1]=a[1],t[2]=a[2],t[3]=a[3],t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15]);var u=SIMD.Float32x4.load(a,4),l=SIMD.Float32x4.load(a,8);return SIMD.Float32x4.store(t,4,SIMD.Float32x4.add(SIMD.Float32x4.mul(u,o),SIMD.Float32x4.mul(l,r))),SIMD.Float32x4.store(t,8,SIMD.Float32x4.sub(SIMD.Float32x4.mul(l,o),SIMD.Float32x4.mul(u,r))),t},o.rotateX=r.USE_SIMD?o.SIMD.rotateX:o.scalar.rotateX,o.scalar.rotateY=function(t,a,n){var r=Math.sin(n),o=Math.cos(n),u=a[0],l=a[1],e=a[2],M=a[3],s=a[8],i=a[9],c=a[10],h=a[11];return a!==t&&(t[4]=a[4],t[5]=a[5],t[6]=a[6],t[7]=a[7],t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15]),t[0]=u*o-s*r,t[1]=l*o-i*r,t[2]=e*o-c*r,t[3]=M*o-h*r,t[8]=u*r+s*o,t[9]=l*r+i*o,t[10]=e*r+c*o,t[11]=M*r+h*o,t},o.SIMD.rotateY=function(t,a,n){var r=SIMD.Float32x4.splat(Math.sin(n)),o=SIMD.Float32x4.splat(Math.cos(n));a!==t&&(t[4]=a[4],t[5]=a[5],t[6]=a[6],t[7]=a[7],t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15]);var u=SIMD.Float32x4.load(a,0),l=SIMD.Float32x4.load(a,8);return SIMD.Float32x4.store(t,0,SIMD.Float32x4.sub(SIMD.Float32x4.mul(u,o),SIMD.Float32x4.mul(l,r))),SIMD.Float32x4.store(t,8,SIMD.Float32x4.add(SIMD.Float32x4.mul(u,r),SIMD.Float32x4.mul(l,o))),t},o.rotateY=r.USE_SIMD?o.SIMD.rotateY:o.scalar.rotateY,o.scalar.rotateZ=function(t,a,n){var r=Math.sin(n),o=Math.cos(n),u=a[0],l=a[1],e=a[2],M=a[3],s=a[4],i=a[5],c=a[6],h=a[7];return a!==t&&(t[8]=a[8],t[9]=a[9],t[10]=a[10],t[11]=a[11],t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15]),t[0]=u*o+s*r,t[1]=l*o+i*r,t[2]=e*o+c*r,t[3]=M*o+h*r,t[4]=s*o-u*r,t[5]=i*o-l*r,t[6]=c*o-e*r,t[7]=h*o-M*r,t},o.SIMD.rotateZ=function(t,a,n){var r=SIMD.Float32x4.splat(Math.sin(n)),o=SIMD.Float32x4.splat(Math.cos(n));a!==t&&(t[8]=a[8],t[9]=a[9],t[10]=a[10],t[11]=a[11],t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15]);var u=SIMD.Float32x4.load(a,0),l=SIMD.Float32x4.load(a,4);return SIMD.Float32x4.store(t,0,SIMD.Float32x4.add(SIMD.Float32x4.mul(u,o),SIMD.Float32x4.mul(l,r))),SIMD.Float32x4.store(t,4,SIMD.Float32x4.sub(SIMD.Float32x4.mul(l,o),SIMD.Float32x4.mul(u,r))),t},o.rotateZ=r.USE_SIMD?o.SIMD.rotateZ:o.scalar.rotateZ,o.fromTranslation=function(t,a){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=a[0],t[13]=a[1],t[14]=a[2],t[15]=1,t},o.fromScaling=function(t,a){return t[0]=a[0],t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=a[1],t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=a[2],t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},o.fromRotation=function(t,a,n){var o,u,l,e=n[0],M=n[1],s=n[2],i=Math.sqrt(e*e+M*M+s*s);return Math.abs(i)<r.EPSILON?null:(i=1/i,e*=i,M*=i,s*=i,o=Math.sin(a),u=Math.cos(a),l=1-u,t[0]=e*e*l+u,t[1]=M*e*l+s*o,t[2]=s*e*l-M*o,t[3]=0,t[4]=e*M*l-s*o,t[5]=M*M*l+u,t[6]=s*M*l+e*o,t[7]=0,t[8]=e*s*l+M*o,t[9]=M*s*l-e*o,t[10]=s*s*l+u,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t)},o.fromXRotation=function(t,a){var n=Math.sin(a),r=Math.cos(a);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=r,t[6]=n,t[7]=0,t[8]=0,t[9]=-n,t[10]=r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},o.fromYRotation=function(t,a){var n=Math.sin(a),r=Math.cos(a);return t[0]=r,t[1]=0,t[2]=-n,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=n,t[9]=0,t[10]=r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},o.fromZRotation=function(t,a){var n=Math.sin(a),r=Math.cos(a);return t[0]=r,t[1]=n,t[2]=0,t[3]=0,t[4]=-n,t[5]=r,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},o.fromRotationTranslation=function(t,a,n){var r=a[0],o=a[1],u=a[2],l=a[3],e=r+r,M=o+o,s=u+u,i=r*e,c=r*M,h=r*s,S=o*M,I=o*s,f=u*s,x=l*e,D=l*M,F=l*s;return t[0]=1-(S+f),t[1]=c+F,t[2]=h-D,t[3]=0,t[4]=c-F,t[5]=1-(i+f),t[6]=I+x,t[7]=0,t[8]=h+D,t[9]=I-x,t[10]=1-(i+S),t[11]=0,t[12]=n[0],t[13]=n[1],t[14]=n[2],t[15]=1,t},o.getTranslation=function(t,a){return t[0]=a[12],t[1]=a[13],t[2]=a[14],t},o.getRotation=function(t,a){var n=a[0]+a[5]+a[10],r=0;return n>0?(r=2*Math.sqrt(n+1),t[3]=.25*r,t[0]=(a[6]-a[9])/r,t[1]=(a[8]-a[2])/r,t[2]=(a[1]-a[4])/r):a[0]>a[5]&a[0]>a[10]?(r=2*Math.sqrt(1+a[0]-a[5]-a[10]),t[3]=(a[6]-a[9])/r,t[0]=.25*r,t[1]=(a[1]+a[4])/r,t[2]=(a[8]+a[2])/r):a[5]>a[10]?(r=2*Math.sqrt(1+a[5]-a[0]-a[10]),t[3]=(a[8]-a[2])/r,t[0]=(a[1]+a[4])/r,t[1]=.25*r,t[2]=(a[6]+a[9])/r):(r=2*Math.sqrt(1+a[10]-a[0]-a[5]),t[3]=(a[1]-a[4])/r,t[0]=(a[8]+a[2])/r,t[1]=(a[6]+a[9])/r,t[2]=.25*r),t},o.fromRotationTranslationScale=function(t,a,n,r){var o=a[0],u=a[1],l=a[2],e=a[3],M=o+o,s=u+u,i=l+l,c=o*M,h=o*s,S=o*i,I=u*s,f=u*i,x=l*i,D=e*M,F=e*s,m=e*i,d=r[0],b=r[1],v=r[2];return t[0]=(1-(I+x))*d,t[1]=(h+m)*d,t[2]=(S-F)*d,t[3]=0,t[4]=(h-m)*b,t[5]=(1-(c+x))*b,t[6]=(f+D)*b,t[7]=0,t[8]=(S+F)*v,t[9]=(f-D)*v,t[10]=(1-(c+I))*v,t[11]=0,t[12]=n[0],t[13]=n[1],t[14]=n[2],t[15]=1,t},o.fromRotationTranslationScaleOrigin=function(t,a,n,r,o){\nvar u=a[0],l=a[1],e=a[2],M=a[3],s=u+u,i=l+l,c=e+e,h=u*s,S=u*i,I=u*c,f=l*i,x=l*c,D=e*c,F=M*s,m=M*i,d=M*c,b=r[0],v=r[1],z=r[2],p=o[0],w=o[1],E=o[2];return t[0]=(1-(f+D))*b,t[1]=(S+d)*b,t[2]=(I-m)*b,t[3]=0,t[4]=(S-d)*v,t[5]=(1-(h+D))*v,t[6]=(x+F)*v,t[7]=0,t[8]=(I+m)*z,t[9]=(x-F)*z,t[10]=(1-(h+f))*z,t[11]=0,t[12]=n[0]+p-(t[0]*p+t[4]*w+t[8]*E),t[13]=n[1]+w-(t[1]*p+t[5]*w+t[9]*E),t[14]=n[2]+E-(t[2]*p+t[6]*w+t[10]*E),t[15]=1,t},o.fromQuat=function(t,a){var n=a[0],r=a[1],o=a[2],u=a[3],l=n+n,e=r+r,M=o+o,s=n*l,i=r*l,c=r*e,h=o*l,S=o*e,I=o*M,f=u*l,x=u*e,D=u*M;return t[0]=1-c-I,t[1]=i+D,t[2]=h-x,t[3]=0,t[4]=i-D,t[5]=1-s-I,t[6]=S+f,t[7]=0,t[8]=h+x,t[9]=S-f,t[10]=1-s-c,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},o.frustum=function(t,a,n,r,o,u,l){var e=1/(n-a),M=1/(o-r),s=1/(u-l);return t[0]=2*u*e,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=2*u*M,t[6]=0,t[7]=0,t[8]=(n+a)*e,t[9]=(o+r)*M,t[10]=(l+u)*s,t[11]=-1,t[12]=0,t[13]=0,t[14]=l*u*2*s,t[15]=0,t},o.perspective=function(t,a,n,r,o){var u=1/Math.tan(a/2),l=1/(r-o);return t[0]=u/n,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=u,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=(o+r)*l,t[11]=-1,t[12]=0,t[13]=0,t[14]=2*o*r*l,t[15]=0,t},o.perspectiveFromFieldOfView=function(t,a,n,r){var o=Math.tan(a.upDegrees*Math.PI/180),u=Math.tan(a.downDegrees*Math.PI/180),l=Math.tan(a.leftDegrees*Math.PI/180),e=Math.tan(a.rightDegrees*Math.PI/180),M=2/(l+e),s=2/(o+u);return t[0]=M,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=s,t[6]=0,t[7]=0,t[8]=-((l-e)*M*.5),t[9]=(o-u)*s*.5,t[10]=r/(n-r),t[11]=-1,t[12]=0,t[13]=0,t[14]=r*n/(n-r),t[15]=0,t},o.ortho=function(t,a,n,r,o,u,l){var e=1/(a-n),M=1/(r-o),s=1/(u-l);return t[0]=-2*e,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*M,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*s,t[11]=0,t[12]=(a+n)*e,t[13]=(o+r)*M,t[14]=(l+u)*s,t[15]=1,t},o.lookAt=function(t,a,n,u){var l,e,M,s,i,c,h,S,I,f,x=a[0],D=a[1],F=a[2],m=u[0],d=u[1],b=u[2],v=n[0],z=n[1],p=n[2];return Math.abs(x-v)<r.EPSILON&&Math.abs(D-z)<r.EPSILON&&Math.abs(F-p)<r.EPSILON?o.identity(t):(h=x-v,S=D-z,I=F-p,f=1/Math.sqrt(h*h+S*S+I*I),h*=f,S*=f,I*=f,l=d*I-b*S,e=b*h-m*I,M=m*S-d*h,f=Math.sqrt(l*l+e*e+M*M),f?(f=1/f,l*=f,e*=f,M*=f):(l=0,e=0,M=0),s=S*M-I*e,i=I*l-h*M,c=h*e-S*l,f=Math.sqrt(s*s+i*i+c*c),f?(f=1/f,s*=f,i*=f,c*=f):(s=0,i=0,c=0),t[0]=l,t[1]=s,t[2]=h,t[3]=0,t[4]=e,t[5]=i,t[6]=S,t[7]=0,t[8]=M,t[9]=c,t[10]=I,t[11]=0,t[12]=-(l*x+e*D+M*F),t[13]=-(s*x+i*D+c*F),t[14]=-(h*x+S*D+I*F),t[15]=1,t)},o.str=function(t){return\"mat4(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\", \"+t[3]+\", \"+t[4]+\", \"+t[5]+\", \"+t[6]+\", \"+t[7]+\", \"+t[8]+\", \"+t[9]+\", \"+t[10]+\", \"+t[11]+\", \"+t[12]+\", \"+t[13]+\", \"+t[14]+\", \"+t[15]+\")\"},o.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+Math.pow(t[6],2)+Math.pow(t[7],2)+Math.pow(t[8],2)+Math.pow(t[9],2)+Math.pow(t[10],2)+Math.pow(t[11],2)+Math.pow(t[12],2)+Math.pow(t[13],2)+Math.pow(t[14],2)+Math.pow(t[15],2))},o.add=function(t,a,n){return t[0]=a[0]+n[0],t[1]=a[1]+n[1],t[2]=a[2]+n[2],t[3]=a[3]+n[3],t[4]=a[4]+n[4],t[5]=a[5]+n[5],t[6]=a[6]+n[6],t[7]=a[7]+n[7],t[8]=a[8]+n[8],t[9]=a[9]+n[9],t[10]=a[10]+n[10],t[11]=a[11]+n[11],t[12]=a[12]+n[12],t[13]=a[13]+n[13],t[14]=a[14]+n[14],t[15]=a[15]+n[15],t},o.subtract=function(t,a,n){return t[0]=a[0]-n[0],t[1]=a[1]-n[1],t[2]=a[2]-n[2],t[3]=a[3]-n[3],t[4]=a[4]-n[4],t[5]=a[5]-n[5],t[6]=a[6]-n[6],t[7]=a[7]-n[7],t[8]=a[8]-n[8],t[9]=a[9]-n[9],t[10]=a[10]-n[10],t[11]=a[11]-n[11],t[12]=a[12]-n[12],t[13]=a[13]-n[13],t[14]=a[14]-n[14],t[15]=a[15]-n[15],t},o.sub=o.subtract,o.multiplyScalar=function(t,a,n){return t[0]=a[0]*n,t[1]=a[1]*n,t[2]=a[2]*n,t[3]=a[3]*n,t[4]=a[4]*n,t[5]=a[5]*n,t[6]=a[6]*n,t[7]=a[7]*n,t[8]=a[8]*n,t[9]=a[9]*n,t[10]=a[10]*n,t[11]=a[11]*n,t[12]=a[12]*n,t[13]=a[13]*n,t[14]=a[14]*n,t[15]=a[15]*n,t},o.multiplyScalarAndAdd=function(t,a,n,r){return t[0]=a[0]+n[0]*r,t[1]=a[1]+n[1]*r,t[2]=a[2]+n[2]*r,t[3]=a[3]+n[3]*r,t[4]=a[4]+n[4]*r,t[5]=a[5]+n[5]*r,t[6]=a[6]+n[6]*r,t[7]=a[7]+n[7]*r,t[8]=a[8]+n[8]*r,t[9]=a[9]+n[9]*r,t[10]=a[10]+n[10]*r,t[11]=a[11]+n[11]*r,t[12]=a[12]+n[12]*r,t[13]=a[13]+n[13]*r,t[14]=a[14]+n[14]*r,t[15]=a[15]+n[15]*r,t},o.exactEquals=function(t,a){return t[0]===a[0]&&t[1]===a[1]&&t[2]===a[2]&&t[3]===a[3]&&t[4]===a[4]&&t[5]===a[5]&&t[6]===a[6]&&t[7]===a[7]&&t[8]===a[8]&&t[9]===a[9]&&t[10]===a[10]&&t[11]===a[11]&&t[12]===a[12]&&t[13]===a[13]&&t[14]===a[14]&&t[15]===a[15]},o.equals=function(t,a){var n=t[0],o=t[1],u=t[2],l=t[3],e=t[4],M=t[5],s=t[6],i=t[7],c=t[8],h=t[9],S=t[10],I=t[11],f=t[12],x=t[13],D=t[14],F=t[15],m=a[0],d=a[1],b=a[2],v=a[3],z=a[4],p=a[5],w=a[6],E=a[7],A=a[8],P=a[9],L=a[10],q=a[11],R=a[12],N=a[13],O=a[14],Y=a[15];return Math.abs(n-m)<=r.EPSILON*Math.max(1,Math.abs(n),Math.abs(m))&&Math.abs(o-d)<=r.EPSILON*Math.max(1,Math.abs(o),Math.abs(d))&&Math.abs(u-b)<=r.EPSILON*Math.max(1,Math.abs(u),Math.abs(b))&&Math.abs(l-v)<=r.EPSILON*Math.max(1,Math.abs(l),Math.abs(v))&&Math.abs(e-z)<=r.EPSILON*Math.max(1,Math.abs(e),Math.abs(z))&&Math.abs(M-p)<=r.EPSILON*Math.max(1,Math.abs(M),Math.abs(p))&&Math.abs(s-w)<=r.EPSILON*Math.max(1,Math.abs(s),Math.abs(w))&&Math.abs(i-E)<=r.EPSILON*Math.max(1,Math.abs(i),Math.abs(E))&&Math.abs(c-A)<=r.EPSILON*Math.max(1,Math.abs(c),Math.abs(A))&&Math.abs(h-P)<=r.EPSILON*Math.max(1,Math.abs(h),Math.abs(P))&&Math.abs(S-L)<=r.EPSILON*Math.max(1,Math.abs(S),Math.abs(L))&&Math.abs(I-q)<=r.EPSILON*Math.max(1,Math.abs(I),Math.abs(q))&&Math.abs(f-R)<=r.EPSILON*Math.max(1,Math.abs(f),Math.abs(R))&&Math.abs(x-N)<=r.EPSILON*Math.max(1,Math.abs(x),Math.abs(N))&&Math.abs(D-O)<=r.EPSILON*Math.max(1,Math.abs(D),Math.abs(O))&&Math.abs(F-Y)<=r.EPSILON*Math.max(1,Math.abs(F),Math.abs(Y))},t.exports=o},function(t,a,n){var r=n(1),o=n(4),u=n(7),l=n(8),e={};e.create=function(){var t=new r.ARRAY_TYPE(4);return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t},e.rotationTo=function(){var t=u.create(),a=u.fromValues(1,0,0),n=u.fromValues(0,1,0);return function(r,o,l){var M=u.dot(o,l);return-.999999>M?(u.cross(t,a,o),u.length(t)<1e-6&&u.cross(t,n,o),u.normalize(t,t),e.setAxisAngle(r,t,Math.PI),r):M>.999999?(r[0]=0,r[1]=0,r[2]=0,r[3]=1,r):(u.cross(t,o,l),r[0]=t[0],r[1]=t[1],r[2]=t[2],r[3]=1+M,e.normalize(r,r))}}(),e.setAxes=function(){var t=o.create();return function(a,n,r,o){return t[0]=r[0],t[3]=r[1],t[6]=r[2],t[1]=o[0],t[4]=o[1],t[7]=o[2],t[2]=-n[0],t[5]=-n[1],t[8]=-n[2],e.normalize(a,e.fromMat3(a,t))}}(),e.clone=l.clone,e.fromValues=l.fromValues,e.copy=l.copy,e.set=l.set,e.identity=function(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t},e.setAxisAngle=function(t,a,n){n=.5*n;var r=Math.sin(n);return t[0]=r*a[0],t[1]=r*a[1],t[2]=r*a[2],t[3]=Math.cos(n),t},e.getAxisAngle=function(t,a){var n=2*Math.acos(a[3]),r=Math.sin(n/2);return 0!=r?(t[0]=a[0]/r,t[1]=a[1]/r,t[2]=a[2]/r):(t[0]=1,t[1]=0,t[2]=0),n},e.add=l.add,e.multiply=function(t,a,n){var r=a[0],o=a[1],u=a[2],l=a[3],e=n[0],M=n[1],s=n[2],i=n[3];return t[0]=r*i+l*e+o*s-u*M,t[1]=o*i+l*M+u*e-r*s,t[2]=u*i+l*s+r*M-o*e,t[3]=l*i-r*e-o*M-u*s,t},e.mul=e.multiply,e.scale=l.scale,e.rotateX=function(t,a,n){n*=.5;var r=a[0],o=a[1],u=a[2],l=a[3],e=Math.sin(n),M=Math.cos(n);return t[0]=r*M+l*e,t[1]=o*M+u*e,t[2]=u*M-o*e,t[3]=l*M-r*e,t},e.rotateY=function(t,a,n){n*=.5;var r=a[0],o=a[1],u=a[2],l=a[3],e=Math.sin(n),M=Math.cos(n);return t[0]=r*M-u*e,t[1]=o*M+l*e,t[2]=u*M+r*e,t[3]=l*M-o*e,t},e.rotateZ=function(t,a,n){n*=.5;var r=a[0],o=a[1],u=a[2],l=a[3],e=Math.sin(n),M=Math.cos(n);return t[0]=r*M+o*e,t[1]=o*M-r*e,t[2]=u*M+l*e,t[3]=l*M-u*e,t},e.calculateW=function(t,a){var n=a[0],r=a[1],o=a[2];return t[0]=n,t[1]=r,t[2]=o,t[3]=Math.sqrt(Math.abs(1-n*n-r*r-o*o)),t},e.dot=l.dot,e.lerp=l.lerp,e.slerp=function(t,a,n,r){var o,u,l,e,M,s=a[0],i=a[1],c=a[2],h=a[3],S=n[0],I=n[1],f=n[2],x=n[3];return u=s*S+i*I+c*f+h*x,0>u&&(u=-u,S=-S,I=-I,f=-f,x=-x),1-u>1e-6?(o=Math.acos(u),l=Math.sin(o),e=Math.sin((1-r)*o)/l,M=Math.sin(r*o)/l):(e=1-r,M=r),t[0]=e*s+M*S,t[1]=e*i+M*I,t[2]=e*c+M*f,t[3]=e*h+M*x,t},e.sqlerp=function(){var t=e.create(),a=e.create();return function(n,r,o,u,l,M){return e.slerp(t,r,l,M),e.slerp(a,o,u,M),e.slerp(n,t,a,2*M*(1-M)),n}}(),e.invert=function(t,a){var n=a[0],r=a[1],o=a[2],u=a[3],l=n*n+r*r+o*o+u*u,e=l?1/l:0;return t[0]=-n*e,t[1]=-r*e,t[2]=-o*e,t[3]=u*e,t},e.conjugate=function(t,a){return t[0]=-a[0],t[1]=-a[1],t[2]=-a[2],t[3]=a[3],t},e.length=l.length,e.len=e.length,e.squaredLength=l.squaredLength,e.sqrLen=e.squaredLength,e.normalize=l.normalize,e.fromMat3=function(t,a){var n,r=a[0]+a[4]+a[8];if(r>0)n=Math.sqrt(r+1),t[3]=.5*n,n=.5/n,t[0]=(a[5]-a[7])*n,t[1]=(a[6]-a[2])*n,t[2]=(a[1]-a[3])*n;else{var o=0;a[4]>a[0]&&(o=1),a[8]>a[3*o+o]&&(o=2);var u=(o+1)%3,l=(o+2)%3;n=Math.sqrt(a[3*o+o]-a[3*u+u]-a[3*l+l]+1),t[o]=.5*n,n=.5/n,t[3]=(a[3*u+l]-a[3*l+u])*n,t[u]=(a[3*u+o]+a[3*o+u])*n,t[l]=(a[3*l+o]+a[3*o+l])*n}return t},e.str=function(t){return\"quat(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\", \"+t[3]+\")\"},e.exactEquals=l.exactEquals,e.equals=l.equals,t.exports=e},function(t,a,n){var r=n(1),o={};o.create=function(){var t=new r.ARRAY_TYPE(3);return t[0]=0,t[1]=0,t[2]=0,t},o.clone=function(t){var a=new r.ARRAY_TYPE(3);return a[0]=t[0],a[1]=t[1],a[2]=t[2],a},o.fromValues=function(t,a,n){var o=new r.ARRAY_TYPE(3);return o[0]=t,o[1]=a,o[2]=n,o},o.copy=function(t,a){return t[0]=a[0],t[1]=a[1],t[2]=a[2],t},o.set=function(t,a,n,r){return t[0]=a,t[1]=n,t[2]=r,t},o.add=function(t,a,n){return t[0]=a[0]+n[0],t[1]=a[1]+n[1],t[2]=a[2]+n[2],t},o.subtract=function(t,a,n){return t[0]=a[0]-n[0],t[1]=a[1]-n[1],t[2]=a[2]-n[2],t},o.sub=o.subtract,o.multiply=function(t,a,n){return t[0]=a[0]*n[0],t[1]=a[1]*n[1],t[2]=a[2]*n[2],t},o.mul=o.multiply,o.divide=function(t,a,n){return t[0]=a[0]/n[0],t[1]=a[1]/n[1],t[2]=a[2]/n[2],t},o.div=o.divide,o.ceil=function(t,a){return t[0]=Math.ceil(a[0]),t[1]=Math.ceil(a[1]),t[2]=Math.ceil(a[2]),t},o.floor=function(t,a){return t[0]=Math.floor(a[0]),t[1]=Math.floor(a[1]),t[2]=Math.floor(a[2]),t},o.min=function(t,a,n){return t[0]=Math.min(a[0],n[0]),t[1]=Math.min(a[1],n[1]),t[2]=Math.min(a[2],n[2]),t},o.max=function(t,a,n){return t[0]=Math.max(a[0],n[0]),t[1]=Math.max(a[1],n[1]),t[2]=Math.max(a[2],n[2]),t},o.round=function(t,a){return t[0]=Math.round(a[0]),t[1]=Math.round(a[1]),t[2]=Math.round(a[2]),t},o.scale=function(t,a,n){return t[0]=a[0]*n,t[1]=a[1]*n,t[2]=a[2]*n,t},o.scaleAndAdd=function(t,a,n,r){return t[0]=a[0]+n[0]*r,t[1]=a[1]+n[1]*r,t[2]=a[2]+n[2]*r,t},o.distance=function(t,a){var n=a[0]-t[0],r=a[1]-t[1],o=a[2]-t[2];return Math.sqrt(n*n+r*r+o*o)},o.dist=o.distance,o.squaredDistance=function(t,a){var n=a[0]-t[0],r=a[1]-t[1],o=a[2]-t[2];return n*n+r*r+o*o},o.sqrDist=o.squaredDistance,o.length=function(t){var a=t[0],n=t[1],r=t[2];return Math.sqrt(a*a+n*n+r*r)},o.len=o.length,o.squaredLength=function(t){var a=t[0],n=t[1],r=t[2];return a*a+n*n+r*r},o.sqrLen=o.squaredLength,o.negate=function(t,a){return t[0]=-a[0],t[1]=-a[1],t[2]=-a[2],t},o.inverse=function(t,a){return t[0]=1/a[0],t[1]=1/a[1],t[2]=1/a[2],t},o.normalize=function(t,a){var n=a[0],r=a[1],o=a[2],u=n*n+r*r+o*o;return u>0&&(u=1/Math.sqrt(u),t[0]=a[0]*u,t[1]=a[1]*u,t[2]=a[2]*u),t},o.dot=function(t,a){return t[0]*a[0]+t[1]*a[1]+t[2]*a[2]},o.cross=function(t,a,n){var r=a[0],o=a[1],u=a[2],l=n[0],e=n[1],M=n[2];return t[0]=o*M-u*e,t[1]=u*l-r*M,t[2]=r*e-o*l,t},o.lerp=function(t,a,n,r){var o=a[0],u=a[1],l=a[2];return t[0]=o+r*(n[0]-o),t[1]=u+r*(n[1]-u),t[2]=l+r*(n[2]-l),t},o.hermite=function(t,a,n,r,o,u){var l=u*u,e=l*(2*u-3)+1,M=l*(u-2)+u,s=l*(u-1),i=l*(3-2*u);return t[0]=a[0]*e+n[0]*M+r[0]*s+o[0]*i,t[1]=a[1]*e+n[1]*M+r[1]*s+o[1]*i,t[2]=a[2]*e+n[2]*M+r[2]*s+o[2]*i,t},o.bezier=function(t,a,n,r,o,u){var l=1-u,e=l*l,M=u*u,s=e*l,i=3*u*e,c=3*M*l,h=M*u;return t[0]=a[0]*s+n[0]*i+r[0]*c+o[0]*h,t[1]=a[1]*s+n[1]*i+r[1]*c+o[1]*h,t[2]=a[2]*s+n[2]*i+r[2]*c+o[2]*h,t},o.random=function(t,a){a=a||1;var n=2*r.RANDOM()*Math.PI,o=2*r.RANDOM()-1,u=Math.sqrt(1-o*o)*a;return t[0]=Math.cos(n)*u,t[1]=Math.sin(n)*u,t[2]=o*a,t},o.transformMat4=function(t,a,n){var r=a[0],o=a[1],u=a[2],l=n[3]*r+n[7]*o+n[11]*u+n[15];return l=l||1,t[0]=(n[0]*r+n[4]*o+n[8]*u+n[12])/l,t[1]=(n[1]*r+n[5]*o+n[9]*u+n[13])/l,t[2]=(n[2]*r+n[6]*o+n[10]*u+n[14])/l,t},o.transformMat3=function(t,a,n){var r=a[0],o=a[1],u=a[2];return t[0]=r*n[0]+o*n[3]+u*n[6],t[1]=r*n[1]+o*n[4]+u*n[7],t[2]=r*n[2]+o*n[5]+u*n[8],t},o.transformQuat=function(t,a,n){var r=a[0],o=a[1],u=a[2],l=n[0],e=n[1],M=n[2],s=n[3],i=s*r+e*u-M*o,c=s*o+M*r-l*u,h=s*u+l*o-e*r,S=-l*r-e*o-M*u;return t[0]=i*s+S*-l+c*-M-h*-e,t[1]=c*s+S*-e+h*-l-i*-M,t[2]=h*s+S*-M+i*-e-c*-l,t},o.rotateX=function(t,a,n,r){var o=[],u=[];return o[0]=a[0]-n[0],o[1]=a[1]-n[1],o[2]=a[2]-n[2],u[0]=o[0],u[1]=o[1]*Math.cos(r)-o[2]*Math.sin(r),u[2]=o[1]*Math.sin(r)+o[2]*Math.cos(r),t[0]=u[0]+n[0],t[1]=u[1]+n[1],t[2]=u[2]+n[2],t},o.rotateY=function(t,a,n,r){var o=[],u=[];return o[0]=a[0]-n[0],o[1]=a[1]-n[1],o[2]=a[2]-n[2],u[0]=o[2]*Math.sin(r)+o[0]*Math.cos(r),u[1]=o[1],u[2]=o[2]*Math.cos(r)-o[0]*Math.sin(r),t[0]=u[0]+n[0],t[1]=u[1]+n[1],t[2]=u[2]+n[2],t},o.rotateZ=function(t,a,n,r){var o=[],u=[];return o[0]=a[0]-n[0],o[1]=a[1]-n[1],o[2]=a[2]-n[2],u[0]=o[0]*Math.cos(r)-o[1]*Math.sin(r),u[1]=o[0]*Math.sin(r)+o[1]*Math.cos(r),u[2]=o[2],t[0]=u[0]+n[0],t[1]=u[1]+n[1],t[2]=u[2]+n[2],t},o.forEach=function(){var t=o.create();return function(a,n,r,o,u,l){var e,M;for(n||(n=3),r||(r=0),M=o?Math.min(o*n+r,a.length):a.length,e=r;M>e;e+=n)t[0]=a[e],t[1]=a[e+1],t[2]=a[e+2],u(t,t,l),a[e]=t[0],a[e+1]=t[1],a[e+2]=t[2];return a}}(),o.angle=function(t,a){var n=o.fromValues(t[0],t[1],t[2]),r=o.fromValues(a[0],a[1],a[2]);o.normalize(n,n),o.normalize(r,r);var u=o.dot(n,r);return u>1?0:Math.acos(u)},o.str=function(t){return\"vec3(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\")\"},o.exactEquals=function(t,a){return t[0]===a[0]&&t[1]===a[1]&&t[2]===a[2]},o.equals=function(t,a){var n=t[0],o=t[1],u=t[2],l=a[0],e=a[1],M=a[2];return Math.abs(n-l)<=r.EPSILON*Math.max(1,Math.abs(n),Math.abs(l))&&Math.abs(o-e)<=r.EPSILON*Math.max(1,Math.abs(o),Math.abs(e))&&Math.abs(u-M)<=r.EPSILON*Math.max(1,Math.abs(u),Math.abs(M))},t.exports=o},function(t,a,n){var r=n(1),o={};o.create=function(){var t=new r.ARRAY_TYPE(4);return t[0]=0,t[1]=0,t[2]=0,t[3]=0,t},o.clone=function(t){var a=new r.ARRAY_TYPE(4);return a[0]=t[0],a[1]=t[1],a[2]=t[2],a[3]=t[3],a},o.fromValues=function(t,a,n,o){var u=new r.ARRAY_TYPE(4);return u[0]=t,u[1]=a,u[2]=n,u[3]=o,u},o.copy=function(t,a){return t[0]=a[0],t[1]=a[1],t[2]=a[2],t[3]=a[3],t},o.set=function(t,a,n,r,o){return t[0]=a,t[1]=n,t[2]=r,t[3]=o,t},o.add=function(t,a,n){return t[0]=a[0]+n[0],t[1]=a[1]+n[1],t[2]=a[2]+n[2],t[3]=a[3]+n[3],t},o.subtract=function(t,a,n){return t[0]=a[0]-n[0],t[1]=a[1]-n[1],t[2]=a[2]-n[2],t[3]=a[3]-n[3],t},o.sub=o.subtract,o.multiply=function(t,a,n){return t[0]=a[0]*n[0],t[1]=a[1]*n[1],t[2]=a[2]*n[2],t[3]=a[3]*n[3],t},o.mul=o.multiply,o.divide=function(t,a,n){return t[0]=a[0]/n[0],t[1]=a[1]/n[1],t[2]=a[2]/n[2],t[3]=a[3]/n[3],t},o.div=o.divide,o.ceil=function(t,a){return t[0]=Math.ceil(a[0]),t[1]=Math.ceil(a[1]),t[2]=Math.ceil(a[2]),t[3]=Math.ceil(a[3]),t},o.floor=function(t,a){return t[0]=Math.floor(a[0]),t[1]=Math.floor(a[1]),t[2]=Math.floor(a[2]),t[3]=Math.floor(a[3]),t},o.min=function(t,a,n){return t[0]=Math.min(a[0],n[0]),t[1]=Math.min(a[1],n[1]),t[2]=Math.min(a[2],n[2]),t[3]=Math.min(a[3],n[3]),t},o.max=function(t,a,n){return t[0]=Math.max(a[0],n[0]),t[1]=Math.max(a[1],n[1]),t[2]=Math.max(a[2],n[2]),t[3]=Math.max(a[3],n[3]),t},o.round=function(t,a){return t[0]=Math.round(a[0]),t[1]=Math.round(a[1]),t[2]=Math.round(a[2]),t[3]=Math.round(a[3]),t},o.scale=function(t,a,n){return t[0]=a[0]*n,t[1]=a[1]*n,t[2]=a[2]*n,t[3]=a[3]*n,t},o.scaleAndAdd=function(t,a,n,r){return t[0]=a[0]+n[0]*r,t[1]=a[1]+n[1]*r,t[2]=a[2]+n[2]*r,t[3]=a[3]+n[3]*r,t},o.distance=function(t,a){var n=a[0]-t[0],r=a[1]-t[1],o=a[2]-t[2],u=a[3]-t[3];return Math.sqrt(n*n+r*r+o*o+u*u)},o.dist=o.distance,o.squaredDistance=function(t,a){var n=a[0]-t[0],r=a[1]-t[1],o=a[2]-t[2],u=a[3]-t[3];return n*n+r*r+o*o+u*u},o.sqrDist=o.squaredDistance,o.length=function(t){var a=t[0],n=t[1],r=t[2],o=t[3];return Math.sqrt(a*a+n*n+r*r+o*o)},o.len=o.length,o.squaredLength=function(t){var a=t[0],n=t[1],r=t[2],o=t[3];return a*a+n*n+r*r+o*o},o.sqrLen=o.squaredLength,o.negate=function(t,a){return t[0]=-a[0],t[1]=-a[1],t[2]=-a[2],t[3]=-a[3],t},o.inverse=function(t,a){return t[0]=1/a[0],t[1]=1/a[1],t[2]=1/a[2],t[3]=1/a[3],t},o.normalize=function(t,a){var n=a[0],r=a[1],o=a[2],u=a[3],l=n*n+r*r+o*o+u*u;return l>0&&(l=1/Math.sqrt(l),t[0]=n*l,t[1]=r*l,t[2]=o*l,t[3]=u*l),t},o.dot=function(t,a){return t[0]*a[0]+t[1]*a[1]+t[2]*a[2]+t[3]*a[3]},o.lerp=function(t,a,n,r){var o=a[0],u=a[1],l=a[2],e=a[3];return t[0]=o+r*(n[0]-o),t[1]=u+r*(n[1]-u),t[2]=l+r*(n[2]-l),t[3]=e+r*(n[3]-e),t},o.random=function(t,a){return a=a||1,t[0]=r.RANDOM(),t[1]=r.RANDOM(),t[2]=r.RANDOM(),t[3]=r.RANDOM(),o.normalize(t,t),o.scale(t,t,a),t},o.transformMat4=function(t,a,n){var r=a[0],o=a[1],u=a[2],l=a[3];return t[0]=n[0]*r+n[4]*o+n[8]*u+n[12]*l,t[1]=n[1]*r+n[5]*o+n[9]*u+n[13]*l,t[2]=n[2]*r+n[6]*o+n[10]*u+n[14]*l,t[3]=n[3]*r+n[7]*o+n[11]*u+n[15]*l,t},o.transformQuat=function(t,a,n){var r=a[0],o=a[1],u=a[2],l=n[0],e=n[1],M=n[2],s=n[3],i=s*r+e*u-M*o,c=s*o+M*r-l*u,h=s*u+l*o-e*r,S=-l*r-e*o-M*u;return t[0]=i*s+S*-l+c*-M-h*-e,t[1]=c*s+S*-e+h*-l-i*-M,t[2]=h*s+S*-M+i*-e-c*-l,t[3]=a[3],t},o.forEach=function(){var t=o.create();return function(a,n,r,o,u,l){var e,M;for(n||(n=4),r||(r=0),M=o?Math.min(o*n+r,a.length):a.length,e=r;M>e;e+=n)t[0]=a[e],t[1]=a[e+1],t[2]=a[e+2],t[3]=a[e+3],u(t,t,l),a[e]=t[0],a[e+1]=t[1],a[e+2]=t[2],a[e+3]=t[3];return a}}(),o.str=function(t){return\"vec4(\"+t[0]+\", \"+t[1]+\", \"+t[2]+\", \"+t[3]+\")\"},o.exactEquals=function(t,a){return t[0]===a[0]&&t[1]===a[1]&&t[2]===a[2]&&t[3]===a[3]},o.equals=function(t,a){var n=t[0],o=t[1],u=t[2],l=t[3],e=a[0],M=a[1],s=a[2],i=a[3];return Math.abs(n-e)<=r.EPSILON*Math.max(1,Math.abs(n),Math.abs(e))&&Math.abs(o-M)<=r.EPSILON*Math.max(1,Math.abs(o),Math.abs(M))&&Math.abs(u-s)<=r.EPSILON*Math.max(1,Math.abs(u),Math.abs(s))&&Math.abs(l-i)<=r.EPSILON*Math.max(1,Math.abs(l),Math.abs(i))},t.exports=o},function(t,a,n){var r=n(1),o={};o.create=function(){var t=new r.ARRAY_TYPE(2);return t[0]=0,t[1]=0,t},o.clone=function(t){var a=new r.ARRAY_TYPE(2);return a[0]=t[0],a[1]=t[1],a},o.fromValues=function(t,a){var n=new r.ARRAY_TYPE(2);return n[0]=t,n[1]=a,n},o.copy=function(t,a){return t[0]=a[0],t[1]=a[1],t},o.set=function(t,a,n){return t[0]=a,t[1]=n,t},o.add=function(t,a,n){return t[0]=a[0]+n[0],t[1]=a[1]+n[1],t},o.subtract=function(t,a,n){return t[0]=a[0]-n[0],t[1]=a[1]-n[1],t},o.sub=o.subtract,o.multiply=function(t,a,n){return t[0]=a[0]*n[0],t[1]=a[1]*n[1],t},o.mul=o.multiply,o.divide=function(t,a,n){return t[0]=a[0]/n[0],t[1]=a[1]/n[1],t},o.div=o.divide,o.ceil=function(t,a){return t[0]=Math.ceil(a[0]),t[1]=Math.ceil(a[1]),t},o.floor=function(t,a){return t[0]=Math.floor(a[0]),t[1]=Math.floor(a[1]),t},o.min=function(t,a,n){return t[0]=Math.min(a[0],n[0]),t[1]=Math.min(a[1],n[1]),t},o.max=function(t,a,n){return t[0]=Math.max(a[0],n[0]),t[1]=Math.max(a[1],n[1]),t},o.round=function(t,a){return t[0]=Math.round(a[0]),t[1]=Math.round(a[1]),t},o.scale=function(t,a,n){return t[0]=a[0]*n,t[1]=a[1]*n,t},o.scaleAndAdd=function(t,a,n,r){return t[0]=a[0]+n[0]*r,t[1]=a[1]+n[1]*r,t},o.distance=function(t,a){var n=a[0]-t[0],r=a[1]-t[1];return Math.sqrt(n*n+r*r)},o.dist=o.distance,o.squaredDistance=function(t,a){var n=a[0]-t[0],r=a[1]-t[1];return n*n+r*r},o.sqrDist=o.squaredDistance,o.length=function(t){var a=t[0],n=t[1];return Math.sqrt(a*a+n*n)},o.len=o.length,o.squaredLength=function(t){var a=t[0],n=t[1];return a*a+n*n},o.sqrLen=o.squaredLength,o.negate=function(t,a){return t[0]=-a[0],t[1]=-a[1],t},o.inverse=function(t,a){return t[0]=1/a[0],t[1]=1/a[1],t},o.normalize=function(t,a){var n=a[0],r=a[1],o=n*n+r*r;return o>0&&(o=1/Math.sqrt(o),t[0]=a[0]*o,t[1]=a[1]*o),t},o.dot=function(t,a){return t[0]*a[0]+t[1]*a[1]},o.cross=function(t,a,n){var r=a[0]*n[1]-a[1]*n[0];return t[0]=t[1]=0,t[2]=r,t},o.lerp=function(t,a,n,r){var o=a[0],u=a[1];return t[0]=o+r*(n[0]-o),t[1]=u+r*(n[1]-u),t},o.random=function(t,a){a=a||1;var n=2*r.RANDOM()*Math.PI;return t[0]=Math.cos(n)*a,t[1]=Math.sin(n)*a,t},o.transformMat2=function(t,a,n){var r=a[0],o=a[1];return t[0]=n[0]*r+n[2]*o,t[1]=n[1]*r+n[3]*o,t},o.transformMat2d=function(t,a,n){var r=a[0],o=a[1];return t[0]=n[0]*r+n[2]*o+n[4],t[1]=n[1]*r+n[3]*o+n[5],t},o.transformMat3=function(t,a,n){var r=a[0],o=a[1];return t[0]=n[0]*r+n[3]*o+n[6],t[1]=n[1]*r+n[4]*o+n[7],t},o.transformMat4=function(t,a,n){var r=a[0],o=a[1];return t[0]=n[0]*r+n[4]*o+n[12],t[1]=n[1]*r+n[5]*o+n[13],t},o.forEach=function(){var t=o.create();return function(a,n,r,o,u,l){var e,M;for(n||(n=2),r||(r=0),M=o?Math.min(o*n+r,a.length):a.length,e=r;M>e;e+=n)t[0]=a[e],t[1]=a[e+1],u(t,t,l),a[e]=t[0],a[e+1]=t[1];return a}}(),o.str=function(t){return\"vec2(\"+t[0]+\", \"+t[1]+\")\"},o.exactEquals=function(t,a){return t[0]===a[0]&&t[1]===a[1]},o.equals=function(t,a){var n=t[0],o=t[1],u=a[0],l=a[1];return Math.abs(n-u)<=r.EPSILON*Math.max(1,Math.abs(n),Math.abs(u))&&Math.abs(o-l)<=r.EPSILON*Math.max(1,Math.abs(o),Math.abs(l))},t.exports=o}])});","\"use strict\";\n\nwindow.shader = window.shader || {};\n\nwindow.shader.vs = \"\\n  attribute mediump vec2 aVertexPosition;\\n\\n  uniform mediump mat4 proj_inv;\\n\\n  varying mediump vec3 vDirection;\\n\\n  void main(void) {\\n    gl_Position = vec4(aVertexPosition, 1.0, 1.0);\\n    mediump vec4 projective_direction = proj_inv * gl_Position;\\n    vDirection = projective_direction.xyz / projective_direction.w;\\n  }\\n\";","'use strict';\n\n(function (global) {\n  'use strict';\n\n  var util = {\n    getScreenOrientation: function getScreenOrientation() {\n      switch (window.screen.orientation || window.screen.mozOrientation) {\n        case 'landscape-primary':\n          return 90;\n        case 'landscape-secondary':\n          return -90;\n        case 'portrait-secondary':\n          return 180;\n        case 'portrait-primary':\n          return 0;\n      }\n      if (window.orientation !== undefined) {\n        return window.orientation;\n      }\n    },\n\n    mat4PerspectiveFromVRFieldOfView: function mat4PerspectiveFromVRFieldOfView(fov, zNear, zFar) {\n      var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n      var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n      var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n      var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n\n      var xScale = 2.0 / (leftTan + rightTan);\n      var yScale = 2.0 / (upTan + downTan);\n\n      var out = new Float32Array(16); // Appropriate format to pass to WebGL\n      out[0] = xScale;\n      out[4] = 0.0;\n      out[8] = -((leftTan - rightTan) * xScale * 0.5);\n      out[12] = 0.0;\n\n      out[1] = 0.0;\n      out[5] = yScale;\n      out[9] = (upTan - downTan) * yScale * 0.5;\n      out[13] = 0.0;\n\n      out[2] = 0.0;\n      out[6] = 0.0;\n      out[10] = zFar / (zNear - zFar);\n      out[14] = zFar * zNear / (zNear - zFar);\n\n      out[3] = 0.0;\n      out[7] = 0.0;\n      out[11] = -1.0;\n      out[15] = 0.0;\n\n      return out;\n    },\n\n    isFullscreen: function isFullscreen() {\n      return document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.webkitCurrentFullScreenElement;\n    },\n\n    setCanvasSize: function setCanvasSize(canvas, backingStorePixelRatio) {\n      var screenWidth, screenHeight;\n      var vrHMD = webVR.getInstance().vrHMD;\n\n      screenWidth = window.innerWidth;\n      screenHeight = window.innerHeight;\n\n      if (!!vrHMD && typeof util.isFullscreen() !== 'undefined' && util.isFullscreen()) {\n        var rectHalf = vrHMD.getEyeParameters('right').renderRect;\n        canvas.width = rectHalf.width * 2;\n        canvas.height = rectHalf.height;\n      } else {\n        var devicePixelRatio = window.devicePixelRatio || 1;\n        var ratio = devicePixelRatio / backingStorePixelRatio;\n\n        if (canvas.width !== screenWidth * ratio || canvas.height !== screenHeight * ratio) {\n          canvas.width = screenWidth * ratio;\n          canvas.height = screenHeight * ratio;\n        }\n      }\n\n      canvas.style.width = '100%';\n      canvas.style.height = '100%';\n    },\n\n    getExtension: function getExtension(path) {\n      return path.substr(path.lastIndexOf('.') + 1);\n    },\n\n    getBaseFilename: function getBaseFilename(path) {\n      return path.substr(path.lastIndexOf('/') + 1);\n    },\n\n    hasVideoExtension: function hasVideoExtension(url) {\n      var ext = util.getExtension(url);\n      return ext === 'mp4' || ext === 'ogg' || ext === 'webm';\n    },\n\n    getVideoTitle: function getVideoTitle(url) {\n      return util.hasVideoExtension(url) ? util.getBaseFilename(url) : url;\n    }\n  };\n\n  global.util = util;\n})(window);"],"sourceRoot":"/source/"}